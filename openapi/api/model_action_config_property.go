/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ActionConfigProperty struct for ActionConfigProperty
type ActionConfigProperty struct {
	// Only for InvokeAWSLambdaAction
	AccessKey *string `json:"accessKey,omitempty"`
	// Only for ExecuteWebRequestAction (Optional)
	Body *string `json:"body,omitempty"`
	// Only for ExecuteWebRequestAction
	ContentType *string `json:"contentType,omitempty"`
	// Only for InvokeAWSLambdaAction
	Endpoint *string `json:"endpoint,omitempty"`
	ExecutionDateTimeConst string `json:"executionDateTimeConst"`
	// Run in the minutes after the timing of executionDateTimeConst
	ExecutionOffsetMinutes *string `json:"executionOffsetMinutes,omitempty"`
	// Only for InvokeAWSLambdaAction
	FunctionName *string `json:"functionName,omitempty"`
	// Only for ExecuteWebRequestAction (Optional)
	Headers map[string]interface{} `json:"headers,omitempty"`
	// Only for ExecuteWebRequestAction
	HttpMethod *string `json:"httpMethod,omitempty"`
	// Only for SendMailAction, SendMailToOperatorAction
	Message *string `json:"message,omitempty"`
	// Only for InvokeAWSLambdaAction
	Parameter1 *string `json:"parameter1,omitempty"`
	// Only for InvokeAWSLambdaAction
	Parameter2 *string `json:"parameter2,omitempty"`
	// Only for InvokeAWSLambdaAction
	Parameter3 *string `json:"parameter3,omitempty"`
	// Only for InvokeAWSLambdaAction
	Parameter4 *string `json:"parameter4,omitempty"`
	// Only for InvokeAWSLambdaAction
	Parameter5 *string `json:"parameter5,omitempty"`
	// Only for InvokeAWSLambdaAction
	SecretAccessKey *string `json:"secretAccessKey,omitempty"`
	// Only for ChangeSpeedClassAction
	SpeedClass *string `json:"speedClass,omitempty"`
	// Only for SendMailAction, SendMailToOperatorAction
	Title *string `json:"title,omitempty"`
	// Only for SendMailAction
	To *string `json:"to,omitempty"`
	// Access URL and parameters. Only for ExecuteWebRequestAction
	Url *string `json:"url,omitempty"`
}

// NewActionConfigProperty instantiates a new ActionConfigProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionConfigProperty(executionDateTimeConst string) *ActionConfigProperty {
	this := ActionConfigProperty{}
	this.ExecutionDateTimeConst = executionDateTimeConst
	return &this
}

// NewActionConfigPropertyWithDefaults instantiates a new ActionConfigProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionConfigPropertyWithDefaults() *ActionConfigProperty {
	this := ActionConfigProperty{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetAccessKey() string {
	if o == nil || o.AccessKey == nil {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetAccessKeyOk() (*string, bool) {
	if o == nil || o.AccessKey == nil {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasAccessKey() bool {
	if o != nil && o.AccessKey != nil {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *ActionConfigProperty) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *ActionConfigProperty) SetBody(v string) {
	o.Body = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetContentType() string {
	if o == nil || o.ContentType == nil {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetContentTypeOk() (*string, bool) {
	if o == nil || o.ContentType == nil {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasContentType() bool {
	if o != nil && o.ContentType != nil {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *ActionConfigProperty) SetContentType(v string) {
	o.ContentType = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetEndpoint() string {
	if o == nil || o.Endpoint == nil {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetEndpointOk() (*string, bool) {
	if o == nil || o.Endpoint == nil {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasEndpoint() bool {
	if o != nil && o.Endpoint != nil {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *ActionConfigProperty) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetExecutionDateTimeConst returns the ExecutionDateTimeConst field value
func (o *ActionConfigProperty) GetExecutionDateTimeConst() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExecutionDateTimeConst
}

// GetExecutionDateTimeConstOk returns a tuple with the ExecutionDateTimeConst field value
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetExecutionDateTimeConstOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ExecutionDateTimeConst, true
}

// SetExecutionDateTimeConst sets field value
func (o *ActionConfigProperty) SetExecutionDateTimeConst(v string) {
	o.ExecutionDateTimeConst = v
}

// GetExecutionOffsetMinutes returns the ExecutionOffsetMinutes field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetExecutionOffsetMinutes() string {
	if o == nil || o.ExecutionOffsetMinutes == nil {
		var ret string
		return ret
	}
	return *o.ExecutionOffsetMinutes
}

// GetExecutionOffsetMinutesOk returns a tuple with the ExecutionOffsetMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetExecutionOffsetMinutesOk() (*string, bool) {
	if o == nil || o.ExecutionOffsetMinutes == nil {
		return nil, false
	}
	return o.ExecutionOffsetMinutes, true
}

// HasExecutionOffsetMinutes returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasExecutionOffsetMinutes() bool {
	if o != nil && o.ExecutionOffsetMinutes != nil {
		return true
	}

	return false
}

// SetExecutionOffsetMinutes gets a reference to the given string and assigns it to the ExecutionOffsetMinutes field.
func (o *ActionConfigProperty) SetExecutionOffsetMinutes(v string) {
	o.ExecutionOffsetMinutes = &v
}

// GetFunctionName returns the FunctionName field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetFunctionName() string {
	if o == nil || o.FunctionName == nil {
		var ret string
		return ret
	}
	return *o.FunctionName
}

// GetFunctionNameOk returns a tuple with the FunctionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetFunctionNameOk() (*string, bool) {
	if o == nil || o.FunctionName == nil {
		return nil, false
	}
	return o.FunctionName, true
}

// HasFunctionName returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasFunctionName() bool {
	if o != nil && o.FunctionName != nil {
		return true
	}

	return false
}

// SetFunctionName gets a reference to the given string and assigns it to the FunctionName field.
func (o *ActionConfigProperty) SetFunctionName(v string) {
	o.FunctionName = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetHeaders() map[string]interface{} {
	if o == nil || o.Headers == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetHeadersOk() (map[string]interface{}, bool) {
	if o == nil || o.Headers == nil {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasHeaders() bool {
	if o != nil && o.Headers != nil {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]interface{} and assigns it to the Headers field.
func (o *ActionConfigProperty) SetHeaders(v map[string]interface{}) {
	o.Headers = v
}

// GetHttpMethod returns the HttpMethod field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetHttpMethod() string {
	if o == nil || o.HttpMethod == nil {
		var ret string
		return ret
	}
	return *o.HttpMethod
}

// GetHttpMethodOk returns a tuple with the HttpMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetHttpMethodOk() (*string, bool) {
	if o == nil || o.HttpMethod == nil {
		return nil, false
	}
	return o.HttpMethod, true
}

// HasHttpMethod returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasHttpMethod() bool {
	if o != nil && o.HttpMethod != nil {
		return true
	}

	return false
}

// SetHttpMethod gets a reference to the given string and assigns it to the HttpMethod field.
func (o *ActionConfigProperty) SetHttpMethod(v string) {
	o.HttpMethod = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ActionConfigProperty) SetMessage(v string) {
	o.Message = &v
}

// GetParameter1 returns the Parameter1 field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetParameter1() string {
	if o == nil || o.Parameter1 == nil {
		var ret string
		return ret
	}
	return *o.Parameter1
}

// GetParameter1Ok returns a tuple with the Parameter1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetParameter1Ok() (*string, bool) {
	if o == nil || o.Parameter1 == nil {
		return nil, false
	}
	return o.Parameter1, true
}

// HasParameter1 returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasParameter1() bool {
	if o != nil && o.Parameter1 != nil {
		return true
	}

	return false
}

// SetParameter1 gets a reference to the given string and assigns it to the Parameter1 field.
func (o *ActionConfigProperty) SetParameter1(v string) {
	o.Parameter1 = &v
}

// GetParameter2 returns the Parameter2 field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetParameter2() string {
	if o == nil || o.Parameter2 == nil {
		var ret string
		return ret
	}
	return *o.Parameter2
}

// GetParameter2Ok returns a tuple with the Parameter2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetParameter2Ok() (*string, bool) {
	if o == nil || o.Parameter2 == nil {
		return nil, false
	}
	return o.Parameter2, true
}

// HasParameter2 returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasParameter2() bool {
	if o != nil && o.Parameter2 != nil {
		return true
	}

	return false
}

// SetParameter2 gets a reference to the given string and assigns it to the Parameter2 field.
func (o *ActionConfigProperty) SetParameter2(v string) {
	o.Parameter2 = &v
}

// GetParameter3 returns the Parameter3 field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetParameter3() string {
	if o == nil || o.Parameter3 == nil {
		var ret string
		return ret
	}
	return *o.Parameter3
}

// GetParameter3Ok returns a tuple with the Parameter3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetParameter3Ok() (*string, bool) {
	if o == nil || o.Parameter3 == nil {
		return nil, false
	}
	return o.Parameter3, true
}

// HasParameter3 returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasParameter3() bool {
	if o != nil && o.Parameter3 != nil {
		return true
	}

	return false
}

// SetParameter3 gets a reference to the given string and assigns it to the Parameter3 field.
func (o *ActionConfigProperty) SetParameter3(v string) {
	o.Parameter3 = &v
}

// GetParameter4 returns the Parameter4 field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetParameter4() string {
	if o == nil || o.Parameter4 == nil {
		var ret string
		return ret
	}
	return *o.Parameter4
}

// GetParameter4Ok returns a tuple with the Parameter4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetParameter4Ok() (*string, bool) {
	if o == nil || o.Parameter4 == nil {
		return nil, false
	}
	return o.Parameter4, true
}

// HasParameter4 returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasParameter4() bool {
	if o != nil && o.Parameter4 != nil {
		return true
	}

	return false
}

// SetParameter4 gets a reference to the given string and assigns it to the Parameter4 field.
func (o *ActionConfigProperty) SetParameter4(v string) {
	o.Parameter4 = &v
}

// GetParameter5 returns the Parameter5 field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetParameter5() string {
	if o == nil || o.Parameter5 == nil {
		var ret string
		return ret
	}
	return *o.Parameter5
}

// GetParameter5Ok returns a tuple with the Parameter5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetParameter5Ok() (*string, bool) {
	if o == nil || o.Parameter5 == nil {
		return nil, false
	}
	return o.Parameter5, true
}

// HasParameter5 returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasParameter5() bool {
	if o != nil && o.Parameter5 != nil {
		return true
	}

	return false
}

// SetParameter5 gets a reference to the given string and assigns it to the Parameter5 field.
func (o *ActionConfigProperty) SetParameter5(v string) {
	o.Parameter5 = &v
}

// GetSecretAccessKey returns the SecretAccessKey field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetSecretAccessKey() string {
	if o == nil || o.SecretAccessKey == nil {
		var ret string
		return ret
	}
	return *o.SecretAccessKey
}

// GetSecretAccessKeyOk returns a tuple with the SecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetSecretAccessKeyOk() (*string, bool) {
	if o == nil || o.SecretAccessKey == nil {
		return nil, false
	}
	return o.SecretAccessKey, true
}

// HasSecretAccessKey returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasSecretAccessKey() bool {
	if o != nil && o.SecretAccessKey != nil {
		return true
	}

	return false
}

// SetSecretAccessKey gets a reference to the given string and assigns it to the SecretAccessKey field.
func (o *ActionConfigProperty) SetSecretAccessKey(v string) {
	o.SecretAccessKey = &v
}

// GetSpeedClass returns the SpeedClass field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetSpeedClass() string {
	if o == nil || o.SpeedClass == nil {
		var ret string
		return ret
	}
	return *o.SpeedClass
}

// GetSpeedClassOk returns a tuple with the SpeedClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetSpeedClassOk() (*string, bool) {
	if o == nil || o.SpeedClass == nil {
		return nil, false
	}
	return o.SpeedClass, true
}

// HasSpeedClass returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasSpeedClass() bool {
	if o != nil && o.SpeedClass != nil {
		return true
	}

	return false
}

// SetSpeedClass gets a reference to the given string and assigns it to the SpeedClass field.
func (o *ActionConfigProperty) SetSpeedClass(v string) {
	o.SpeedClass = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ActionConfigProperty) SetTitle(v string) {
	o.Title = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetTo() string {
	if o == nil || o.To == nil {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetToOk() (*string, bool) {
	if o == nil || o.To == nil {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasTo() bool {
	if o != nil && o.To != nil {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *ActionConfigProperty) SetTo(v string) {
	o.To = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ActionConfigProperty) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionConfigProperty) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ActionConfigProperty) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ActionConfigProperty) SetUrl(v string) {
	o.Url = &v
}

func (o ActionConfigProperty) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKey != nil {
		toSerialize["accessKey"] = o.AccessKey
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.ContentType != nil {
		toSerialize["contentType"] = o.ContentType
	}
	if o.Endpoint != nil {
		toSerialize["endpoint"] = o.Endpoint
	}
	if true {
		toSerialize["executionDateTimeConst"] = o.ExecutionDateTimeConst
	}
	if o.ExecutionOffsetMinutes != nil {
		toSerialize["executionOffsetMinutes"] = o.ExecutionOffsetMinutes
	}
	if o.FunctionName != nil {
		toSerialize["functionName"] = o.FunctionName
	}
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
	if o.HttpMethod != nil {
		toSerialize["httpMethod"] = o.HttpMethod
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Parameter1 != nil {
		toSerialize["parameter1"] = o.Parameter1
	}
	if o.Parameter2 != nil {
		toSerialize["parameter2"] = o.Parameter2
	}
	if o.Parameter3 != nil {
		toSerialize["parameter3"] = o.Parameter3
	}
	if o.Parameter4 != nil {
		toSerialize["parameter4"] = o.Parameter4
	}
	if o.Parameter5 != nil {
		toSerialize["parameter5"] = o.Parameter5
	}
	if o.SecretAccessKey != nil {
		toSerialize["secretAccessKey"] = o.SecretAccessKey
	}
	if o.SpeedClass != nil {
		toSerialize["speedClass"] = o.SpeedClass
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.To != nil {
		toSerialize["to"] = o.To
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableActionConfigProperty struct {
	value *ActionConfigProperty
	isSet bool
}

func (v NullableActionConfigProperty) Get() *ActionConfigProperty {
	return v.value
}

func (v *NullableActionConfigProperty) Set(val *ActionConfigProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableActionConfigProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableActionConfigProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionConfigProperty(val *ActionConfigProperty) *NullableActionConfigProperty {
	return &NullableActionConfigProperty{value: val, isSet: true}
}

func (v NullableActionConfigProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionConfigProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


