/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// APIAuditLogEntry struct for APIAuditLogEntry
type APIAuditLogEntry struct {
	// The kind of the API (e.g. `/v1/auth`).
	ApiKind *string `json:"apiKind,omitempty"`
	// The operator ID that called the API.
	OperatorId *string `json:"operatorId,omitempty"`
	// The IP address of the caller.
	RemoteIpAddress *string `json:"remoteIpAddress,omitempty"`
	// The request path that has been called.
	RequestPath *string `json:"requestPath,omitempty"`
	// The timestamp of the API call. This can be used as the `last_evaluated_key` request parameter, for pagination.
	RequestedTimeEpochMs *int64 `json:"requestedTimeEpochMs,omitempty"`
	// The SAM username that called the API, if this parameter is empty, it means the caller user is the root user.
	UserName *string `json:"userName,omitempty"`
}

// NewAPIAuditLogEntry instantiates a new APIAuditLogEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIAuditLogEntry() *APIAuditLogEntry {
	this := APIAuditLogEntry{}
	return &this
}

// NewAPIAuditLogEntryWithDefaults instantiates a new APIAuditLogEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIAuditLogEntryWithDefaults() *APIAuditLogEntry {
	this := APIAuditLogEntry{}
	return &this
}

// GetApiKind returns the ApiKind field value if set, zero value otherwise.
func (o *APIAuditLogEntry) GetApiKind() string {
	if o == nil || o.ApiKind == nil {
		var ret string
		return ret
	}
	return *o.ApiKind
}

// GetApiKindOk returns a tuple with the ApiKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIAuditLogEntry) GetApiKindOk() (*string, bool) {
	if o == nil || o.ApiKind == nil {
		return nil, false
	}
	return o.ApiKind, true
}

// HasApiKind returns a boolean if a field has been set.
func (o *APIAuditLogEntry) HasApiKind() bool {
	if o != nil && o.ApiKind != nil {
		return true
	}

	return false
}

// SetApiKind gets a reference to the given string and assigns it to the ApiKind field.
func (o *APIAuditLogEntry) SetApiKind(v string) {
	o.ApiKind = &v
}

// GetOperatorId returns the OperatorId field value if set, zero value otherwise.
func (o *APIAuditLogEntry) GetOperatorId() string {
	if o == nil || o.OperatorId == nil {
		var ret string
		return ret
	}
	return *o.OperatorId
}

// GetOperatorIdOk returns a tuple with the OperatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIAuditLogEntry) GetOperatorIdOk() (*string, bool) {
	if o == nil || o.OperatorId == nil {
		return nil, false
	}
	return o.OperatorId, true
}

// HasOperatorId returns a boolean if a field has been set.
func (o *APIAuditLogEntry) HasOperatorId() bool {
	if o != nil && o.OperatorId != nil {
		return true
	}

	return false
}

// SetOperatorId gets a reference to the given string and assigns it to the OperatorId field.
func (o *APIAuditLogEntry) SetOperatorId(v string) {
	o.OperatorId = &v
}

// GetRemoteIpAddress returns the RemoteIpAddress field value if set, zero value otherwise.
func (o *APIAuditLogEntry) GetRemoteIpAddress() string {
	if o == nil || o.RemoteIpAddress == nil {
		var ret string
		return ret
	}
	return *o.RemoteIpAddress
}

// GetRemoteIpAddressOk returns a tuple with the RemoteIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIAuditLogEntry) GetRemoteIpAddressOk() (*string, bool) {
	if o == nil || o.RemoteIpAddress == nil {
		return nil, false
	}
	return o.RemoteIpAddress, true
}

// HasRemoteIpAddress returns a boolean if a field has been set.
func (o *APIAuditLogEntry) HasRemoteIpAddress() bool {
	if o != nil && o.RemoteIpAddress != nil {
		return true
	}

	return false
}

// SetRemoteIpAddress gets a reference to the given string and assigns it to the RemoteIpAddress field.
func (o *APIAuditLogEntry) SetRemoteIpAddress(v string) {
	o.RemoteIpAddress = &v
}

// GetRequestPath returns the RequestPath field value if set, zero value otherwise.
func (o *APIAuditLogEntry) GetRequestPath() string {
	if o == nil || o.RequestPath == nil {
		var ret string
		return ret
	}
	return *o.RequestPath
}

// GetRequestPathOk returns a tuple with the RequestPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIAuditLogEntry) GetRequestPathOk() (*string, bool) {
	if o == nil || o.RequestPath == nil {
		return nil, false
	}
	return o.RequestPath, true
}

// HasRequestPath returns a boolean if a field has been set.
func (o *APIAuditLogEntry) HasRequestPath() bool {
	if o != nil && o.RequestPath != nil {
		return true
	}

	return false
}

// SetRequestPath gets a reference to the given string and assigns it to the RequestPath field.
func (o *APIAuditLogEntry) SetRequestPath(v string) {
	o.RequestPath = &v
}

// GetRequestedTimeEpochMs returns the RequestedTimeEpochMs field value if set, zero value otherwise.
func (o *APIAuditLogEntry) GetRequestedTimeEpochMs() int64 {
	if o == nil || o.RequestedTimeEpochMs == nil {
		var ret int64
		return ret
	}
	return *o.RequestedTimeEpochMs
}

// GetRequestedTimeEpochMsOk returns a tuple with the RequestedTimeEpochMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIAuditLogEntry) GetRequestedTimeEpochMsOk() (*int64, bool) {
	if o == nil || o.RequestedTimeEpochMs == nil {
		return nil, false
	}
	return o.RequestedTimeEpochMs, true
}

// HasRequestedTimeEpochMs returns a boolean if a field has been set.
func (o *APIAuditLogEntry) HasRequestedTimeEpochMs() bool {
	if o != nil && o.RequestedTimeEpochMs != nil {
		return true
	}

	return false
}

// SetRequestedTimeEpochMs gets a reference to the given int64 and assigns it to the RequestedTimeEpochMs field.
func (o *APIAuditLogEntry) SetRequestedTimeEpochMs(v int64) {
	o.RequestedTimeEpochMs = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *APIAuditLogEntry) GetUserName() string {
	if o == nil || o.UserName == nil {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIAuditLogEntry) GetUserNameOk() (*string, bool) {
	if o == nil || o.UserName == nil {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *APIAuditLogEntry) HasUserName() bool {
	if o != nil && o.UserName != nil {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *APIAuditLogEntry) SetUserName(v string) {
	o.UserName = &v
}

func (o APIAuditLogEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiKind != nil {
		toSerialize["apiKind"] = o.ApiKind
	}
	if o.OperatorId != nil {
		toSerialize["operatorId"] = o.OperatorId
	}
	if o.RemoteIpAddress != nil {
		toSerialize["remoteIpAddress"] = o.RemoteIpAddress
	}
	if o.RequestPath != nil {
		toSerialize["requestPath"] = o.RequestPath
	}
	if o.RequestedTimeEpochMs != nil {
		toSerialize["requestedTimeEpochMs"] = o.RequestedTimeEpochMs
	}
	if o.UserName != nil {
		toSerialize["userName"] = o.UserName
	}
	return json.Marshal(toSerialize)
}

type NullableAPIAuditLogEntry struct {
	value *APIAuditLogEntry
	isSet bool
}

func (v NullableAPIAuditLogEntry) Get() *APIAuditLogEntry {
	return v.value
}

func (v *NullableAPIAuditLogEntry) Set(val *APIAuditLogEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIAuditLogEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIAuditLogEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIAuditLogEntry(val *APIAuditLogEntry) *NullableAPIAuditLogEntry {
	return &NullableAPIAuditLogEntry{value: val, isSet: true}
}

func (v NullableAPIAuditLogEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIAuditLogEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


