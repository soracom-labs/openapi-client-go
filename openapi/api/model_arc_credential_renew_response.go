/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ArcCredentialRenewResponse struct for ArcCredentialRenewResponse
type ArcCredentialRenewResponse struct {
	ArcClientPeerPrivateKey *string `json:"arcClientPeerPrivateKey,omitempty"`
	ArcClientPeerPublicKey *string `json:"arcClientPeerPublicKey,omitempty"`
}

// NewArcCredentialRenewResponse instantiates a new ArcCredentialRenewResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArcCredentialRenewResponse() *ArcCredentialRenewResponse {
	this := ArcCredentialRenewResponse{}
	return &this
}

// NewArcCredentialRenewResponseWithDefaults instantiates a new ArcCredentialRenewResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArcCredentialRenewResponseWithDefaults() *ArcCredentialRenewResponse {
	this := ArcCredentialRenewResponse{}
	return &this
}

// GetArcClientPeerPrivateKey returns the ArcClientPeerPrivateKey field value if set, zero value otherwise.
func (o *ArcCredentialRenewResponse) GetArcClientPeerPrivateKey() string {
	if o == nil || o.ArcClientPeerPrivateKey == nil {
		var ret string
		return ret
	}
	return *o.ArcClientPeerPrivateKey
}

// GetArcClientPeerPrivateKeyOk returns a tuple with the ArcClientPeerPrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArcCredentialRenewResponse) GetArcClientPeerPrivateKeyOk() (*string, bool) {
	if o == nil || o.ArcClientPeerPrivateKey == nil {
		return nil, false
	}
	return o.ArcClientPeerPrivateKey, true
}

// HasArcClientPeerPrivateKey returns a boolean if a field has been set.
func (o *ArcCredentialRenewResponse) HasArcClientPeerPrivateKey() bool {
	if o != nil && o.ArcClientPeerPrivateKey != nil {
		return true
	}

	return false
}

// SetArcClientPeerPrivateKey gets a reference to the given string and assigns it to the ArcClientPeerPrivateKey field.
func (o *ArcCredentialRenewResponse) SetArcClientPeerPrivateKey(v string) {
	o.ArcClientPeerPrivateKey = &v
}

// GetArcClientPeerPublicKey returns the ArcClientPeerPublicKey field value if set, zero value otherwise.
func (o *ArcCredentialRenewResponse) GetArcClientPeerPublicKey() string {
	if o == nil || o.ArcClientPeerPublicKey == nil {
		var ret string
		return ret
	}
	return *o.ArcClientPeerPublicKey
}

// GetArcClientPeerPublicKeyOk returns a tuple with the ArcClientPeerPublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArcCredentialRenewResponse) GetArcClientPeerPublicKeyOk() (*string, bool) {
	if o == nil || o.ArcClientPeerPublicKey == nil {
		return nil, false
	}
	return o.ArcClientPeerPublicKey, true
}

// HasArcClientPeerPublicKey returns a boolean if a field has been set.
func (o *ArcCredentialRenewResponse) HasArcClientPeerPublicKey() bool {
	if o != nil && o.ArcClientPeerPublicKey != nil {
		return true
	}

	return false
}

// SetArcClientPeerPublicKey gets a reference to the given string and assigns it to the ArcClientPeerPublicKey field.
func (o *ArcCredentialRenewResponse) SetArcClientPeerPublicKey(v string) {
	o.ArcClientPeerPublicKey = &v
}

func (o ArcCredentialRenewResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ArcClientPeerPrivateKey != nil {
		toSerialize["arcClientPeerPrivateKey"] = o.ArcClientPeerPrivateKey
	}
	if o.ArcClientPeerPublicKey != nil {
		toSerialize["arcClientPeerPublicKey"] = o.ArcClientPeerPublicKey
	}
	return json.Marshal(toSerialize)
}

type NullableArcCredentialRenewResponse struct {
	value *ArcCredentialRenewResponse
	isSet bool
}

func (v NullableArcCredentialRenewResponse) Get() *ArcCredentialRenewResponse {
	return v.value
}

func (v *NullableArcCredentialRenewResponse) Set(val *ArcCredentialRenewResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableArcCredentialRenewResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableArcCredentialRenewResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArcCredentialRenewResponse(val *ArcCredentialRenewResponse) *NullableArcCredentialRenewResponse {
	return &NullableArcCredentialRenewResponse{value: val, isSet: true}
}

func (v NullableArcCredentialRenewResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArcCredentialRenewResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


