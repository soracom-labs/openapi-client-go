/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// AuthKeyResponse struct for AuthKeyResponse
type AuthKeyResponse struct {
	AuthKeyId *string `json:"authKeyId,omitempty"`
	CreateDateTime *int64 `json:"createDateTime,omitempty"`
	LastUsedDateTime *int64 `json:"lastUsedDateTime,omitempty"`
}

// NewAuthKeyResponse instantiates a new AuthKeyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthKeyResponse() *AuthKeyResponse {
	this := AuthKeyResponse{}
	return &this
}

// NewAuthKeyResponseWithDefaults instantiates a new AuthKeyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthKeyResponseWithDefaults() *AuthKeyResponse {
	this := AuthKeyResponse{}
	return &this
}

// GetAuthKeyId returns the AuthKeyId field value if set, zero value otherwise.
func (o *AuthKeyResponse) GetAuthKeyId() string {
	if o == nil || o.AuthKeyId == nil {
		var ret string
		return ret
	}
	return *o.AuthKeyId
}

// GetAuthKeyIdOk returns a tuple with the AuthKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthKeyResponse) GetAuthKeyIdOk() (*string, bool) {
	if o == nil || o.AuthKeyId == nil {
		return nil, false
	}
	return o.AuthKeyId, true
}

// HasAuthKeyId returns a boolean if a field has been set.
func (o *AuthKeyResponse) HasAuthKeyId() bool {
	if o != nil && o.AuthKeyId != nil {
		return true
	}

	return false
}

// SetAuthKeyId gets a reference to the given string and assigns it to the AuthKeyId field.
func (o *AuthKeyResponse) SetAuthKeyId(v string) {
	o.AuthKeyId = &v
}

// GetCreateDateTime returns the CreateDateTime field value if set, zero value otherwise.
func (o *AuthKeyResponse) GetCreateDateTime() int64 {
	if o == nil || o.CreateDateTime == nil {
		var ret int64
		return ret
	}
	return *o.CreateDateTime
}

// GetCreateDateTimeOk returns a tuple with the CreateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthKeyResponse) GetCreateDateTimeOk() (*int64, bool) {
	if o == nil || o.CreateDateTime == nil {
		return nil, false
	}
	return o.CreateDateTime, true
}

// HasCreateDateTime returns a boolean if a field has been set.
func (o *AuthKeyResponse) HasCreateDateTime() bool {
	if o != nil && o.CreateDateTime != nil {
		return true
	}

	return false
}

// SetCreateDateTime gets a reference to the given int64 and assigns it to the CreateDateTime field.
func (o *AuthKeyResponse) SetCreateDateTime(v int64) {
	o.CreateDateTime = &v
}

// GetLastUsedDateTime returns the LastUsedDateTime field value if set, zero value otherwise.
func (o *AuthKeyResponse) GetLastUsedDateTime() int64 {
	if o == nil || o.LastUsedDateTime == nil {
		var ret int64
		return ret
	}
	return *o.LastUsedDateTime
}

// GetLastUsedDateTimeOk returns a tuple with the LastUsedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthKeyResponse) GetLastUsedDateTimeOk() (*int64, bool) {
	if o == nil || o.LastUsedDateTime == nil {
		return nil, false
	}
	return o.LastUsedDateTime, true
}

// HasLastUsedDateTime returns a boolean if a field has been set.
func (o *AuthKeyResponse) HasLastUsedDateTime() bool {
	if o != nil && o.LastUsedDateTime != nil {
		return true
	}

	return false
}

// SetLastUsedDateTime gets a reference to the given int64 and assigns it to the LastUsedDateTime field.
func (o *AuthKeyResponse) SetLastUsedDateTime(v int64) {
	o.LastUsedDateTime = &v
}

func (o AuthKeyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthKeyId != nil {
		toSerialize["authKeyId"] = o.AuthKeyId
	}
	if o.CreateDateTime != nil {
		toSerialize["createDateTime"] = o.CreateDateTime
	}
	if o.LastUsedDateTime != nil {
		toSerialize["lastUsedDateTime"] = o.LastUsedDateTime
	}
	return json.Marshal(toSerialize)
}

type NullableAuthKeyResponse struct {
	value *AuthKeyResponse
	isSet bool
}

func (v NullableAuthKeyResponse) Get() *AuthKeyResponse {
	return v.value
}

func (v *NullableAuthKeyResponse) Set(val *AuthKeyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthKeyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthKeyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthKeyResponse(val *AuthKeyResponse) *NullableAuthKeyResponse {
	return &NullableAuthKeyResponse{value: val, isSet: true}
}

func (v NullableAuthKeyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthKeyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


