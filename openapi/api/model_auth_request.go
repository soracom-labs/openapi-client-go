/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// AuthRequest struct for AuthRequest
type AuthRequest struct {
	AuthKey *string `json:"authKey,omitempty"`
	AuthKeyId *string `json:"authKeyId,omitempty"`
	Email *string `json:"email,omitempty"`
	MfaOTPCode *string `json:"mfaOTPCode,omitempty"`
	OperatorId *string `json:"operatorId,omitempty"`
	Password *string `json:"password,omitempty"`
	TokenTimeoutSeconds *int64 `json:"tokenTimeoutSeconds,omitempty"`
	UserName *string `json:"userName,omitempty"`
}

// NewAuthRequest instantiates a new AuthRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthRequest() *AuthRequest {
	this := AuthRequest{}
	var tokenTimeoutSeconds int64 = 86400
	this.TokenTimeoutSeconds = &tokenTimeoutSeconds
	return &this
}

// NewAuthRequestWithDefaults instantiates a new AuthRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthRequestWithDefaults() *AuthRequest {
	this := AuthRequest{}
	var tokenTimeoutSeconds int64 = 86400
	this.TokenTimeoutSeconds = &tokenTimeoutSeconds
	return &this
}

// GetAuthKey returns the AuthKey field value if set, zero value otherwise.
func (o *AuthRequest) GetAuthKey() string {
	if o == nil || o.AuthKey == nil {
		var ret string
		return ret
	}
	return *o.AuthKey
}

// GetAuthKeyOk returns a tuple with the AuthKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthRequest) GetAuthKeyOk() (*string, bool) {
	if o == nil || o.AuthKey == nil {
		return nil, false
	}
	return o.AuthKey, true
}

// HasAuthKey returns a boolean if a field has been set.
func (o *AuthRequest) HasAuthKey() bool {
	if o != nil && o.AuthKey != nil {
		return true
	}

	return false
}

// SetAuthKey gets a reference to the given string and assigns it to the AuthKey field.
func (o *AuthRequest) SetAuthKey(v string) {
	o.AuthKey = &v
}

// GetAuthKeyId returns the AuthKeyId field value if set, zero value otherwise.
func (o *AuthRequest) GetAuthKeyId() string {
	if o == nil || o.AuthKeyId == nil {
		var ret string
		return ret
	}
	return *o.AuthKeyId
}

// GetAuthKeyIdOk returns a tuple with the AuthKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthRequest) GetAuthKeyIdOk() (*string, bool) {
	if o == nil || o.AuthKeyId == nil {
		return nil, false
	}
	return o.AuthKeyId, true
}

// HasAuthKeyId returns a boolean if a field has been set.
func (o *AuthRequest) HasAuthKeyId() bool {
	if o != nil && o.AuthKeyId != nil {
		return true
	}

	return false
}

// SetAuthKeyId gets a reference to the given string and assigns it to the AuthKeyId field.
func (o *AuthRequest) SetAuthKeyId(v string) {
	o.AuthKeyId = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *AuthRequest) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthRequest) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *AuthRequest) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *AuthRequest) SetEmail(v string) {
	o.Email = &v
}

// GetMfaOTPCode returns the MfaOTPCode field value if set, zero value otherwise.
func (o *AuthRequest) GetMfaOTPCode() string {
	if o == nil || o.MfaOTPCode == nil {
		var ret string
		return ret
	}
	return *o.MfaOTPCode
}

// GetMfaOTPCodeOk returns a tuple with the MfaOTPCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthRequest) GetMfaOTPCodeOk() (*string, bool) {
	if o == nil || o.MfaOTPCode == nil {
		return nil, false
	}
	return o.MfaOTPCode, true
}

// HasMfaOTPCode returns a boolean if a field has been set.
func (o *AuthRequest) HasMfaOTPCode() bool {
	if o != nil && o.MfaOTPCode != nil {
		return true
	}

	return false
}

// SetMfaOTPCode gets a reference to the given string and assigns it to the MfaOTPCode field.
func (o *AuthRequest) SetMfaOTPCode(v string) {
	o.MfaOTPCode = &v
}

// GetOperatorId returns the OperatorId field value if set, zero value otherwise.
func (o *AuthRequest) GetOperatorId() string {
	if o == nil || o.OperatorId == nil {
		var ret string
		return ret
	}
	return *o.OperatorId
}

// GetOperatorIdOk returns a tuple with the OperatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthRequest) GetOperatorIdOk() (*string, bool) {
	if o == nil || o.OperatorId == nil {
		return nil, false
	}
	return o.OperatorId, true
}

// HasOperatorId returns a boolean if a field has been set.
func (o *AuthRequest) HasOperatorId() bool {
	if o != nil && o.OperatorId != nil {
		return true
	}

	return false
}

// SetOperatorId gets a reference to the given string and assigns it to the OperatorId field.
func (o *AuthRequest) SetOperatorId(v string) {
	o.OperatorId = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *AuthRequest) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthRequest) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *AuthRequest) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *AuthRequest) SetPassword(v string) {
	o.Password = &v
}

// GetTokenTimeoutSeconds returns the TokenTimeoutSeconds field value if set, zero value otherwise.
func (o *AuthRequest) GetTokenTimeoutSeconds() int64 {
	if o == nil || o.TokenTimeoutSeconds == nil {
		var ret int64
		return ret
	}
	return *o.TokenTimeoutSeconds
}

// GetTokenTimeoutSecondsOk returns a tuple with the TokenTimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthRequest) GetTokenTimeoutSecondsOk() (*int64, bool) {
	if o == nil || o.TokenTimeoutSeconds == nil {
		return nil, false
	}
	return o.TokenTimeoutSeconds, true
}

// HasTokenTimeoutSeconds returns a boolean if a field has been set.
func (o *AuthRequest) HasTokenTimeoutSeconds() bool {
	if o != nil && o.TokenTimeoutSeconds != nil {
		return true
	}

	return false
}

// SetTokenTimeoutSeconds gets a reference to the given int64 and assigns it to the TokenTimeoutSeconds field.
func (o *AuthRequest) SetTokenTimeoutSeconds(v int64) {
	o.TokenTimeoutSeconds = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *AuthRequest) GetUserName() string {
	if o == nil || o.UserName == nil {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthRequest) GetUserNameOk() (*string, bool) {
	if o == nil || o.UserName == nil {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *AuthRequest) HasUserName() bool {
	if o != nil && o.UserName != nil {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *AuthRequest) SetUserName(v string) {
	o.UserName = &v
}

func (o AuthRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthKey != nil {
		toSerialize["authKey"] = o.AuthKey
	}
	if o.AuthKeyId != nil {
		toSerialize["authKeyId"] = o.AuthKeyId
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.MfaOTPCode != nil {
		toSerialize["mfaOTPCode"] = o.MfaOTPCode
	}
	if o.OperatorId != nil {
		toSerialize["operatorId"] = o.OperatorId
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.TokenTimeoutSeconds != nil {
		toSerialize["tokenTimeoutSeconds"] = o.TokenTimeoutSeconds
	}
	if o.UserName != nil {
		toSerialize["userName"] = o.UserName
	}
	return json.Marshal(toSerialize)
}

type NullableAuthRequest struct {
	value *AuthRequest
	isSet bool
}

func (v NullableAuthRequest) Get() *AuthRequest {
	return v.value
}

func (v *NullableAuthRequest) Set(val *AuthRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthRequest(val *AuthRequest) *NullableAuthRequest {
	return &NullableAuthRequest{value: val, isSet: true}
}

func (v NullableAuthRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


