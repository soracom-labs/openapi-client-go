/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// Capabilities struct for Capabilities
type Capabilities struct {
	Data *bool `json:"data,omitempty"`
	Sms *bool `json:"sms,omitempty"`
}

// NewCapabilities instantiates a new Capabilities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCapabilities() *Capabilities {
	this := Capabilities{}
	return &this
}

// NewCapabilitiesWithDefaults instantiates a new Capabilities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCapabilitiesWithDefaults() *Capabilities {
	this := Capabilities{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *Capabilities) GetData() bool {
	if o == nil || o.Data == nil {
		var ret bool
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capabilities) GetDataOk() (*bool, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *Capabilities) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given bool and assigns it to the Data field.
func (o *Capabilities) SetData(v bool) {
	o.Data = &v
}

// GetSms returns the Sms field value if set, zero value otherwise.
func (o *Capabilities) GetSms() bool {
	if o == nil || o.Sms == nil {
		var ret bool
		return ret
	}
	return *o.Sms
}

// GetSmsOk returns a tuple with the Sms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capabilities) GetSmsOk() (*bool, bool) {
	if o == nil || o.Sms == nil {
		return nil, false
	}
	return o.Sms, true
}

// HasSms returns a boolean if a field has been set.
func (o *Capabilities) HasSms() bool {
	if o != nil && o.Sms != nil {
		return true
	}

	return false
}

// SetSms gets a reference to the given bool and assigns it to the Sms field.
func (o *Capabilities) SetSms(v bool) {
	o.Sms = &v
}

func (o Capabilities) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Sms != nil {
		toSerialize["sms"] = o.Sms
	}
	return json.Marshal(toSerialize)
}

type NullableCapabilities struct {
	value *Capabilities
	isSet bool
}

func (v NullableCapabilities) Get() *Capabilities {
	return v.value
}

func (v *NullableCapabilities) Set(val *Capabilities) {
	v.value = val
	v.isSet = true
}

func (v NullableCapabilities) IsSet() bool {
	return v.isSet
}

func (v *NullableCapabilities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCapabilities(val *Capabilities) *NullableCapabilities {
	return &NullableCapabilities{value: val, isSet: true}
}

func (v NullableCapabilities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCapabilities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


