/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CreateEventHandlerRequest struct for CreateEventHandlerRequest
type CreateEventHandlerRequest struct {
	ActionConfigList []ActionConfig `json:"actionConfigList"`
	Description *string `json:"description,omitempty"`
	Name *string `json:"name,omitempty"`
	RuleConfig RuleConfig `json:"ruleConfig"`
	Status string `json:"status"`
	TargetGroupId *string `json:"targetGroupId,omitempty"`
	TargetImsi *string `json:"targetImsi,omitempty"`
	TargetOperatorId *string `json:"targetOperatorId,omitempty"`
	TargetSimId *string `json:"targetSimId,omitempty"`
}

// NewCreateEventHandlerRequest instantiates a new CreateEventHandlerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEventHandlerRequest(actionConfigList []ActionConfig, ruleConfig RuleConfig, status string) *CreateEventHandlerRequest {
	this := CreateEventHandlerRequest{}
	this.ActionConfigList = actionConfigList
	this.RuleConfig = ruleConfig
	this.Status = status
	return &this
}

// NewCreateEventHandlerRequestWithDefaults instantiates a new CreateEventHandlerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEventHandlerRequestWithDefaults() *CreateEventHandlerRequest {
	this := CreateEventHandlerRequest{}
	return &this
}

// GetActionConfigList returns the ActionConfigList field value
func (o *CreateEventHandlerRequest) GetActionConfigList() []ActionConfig {
	if o == nil {
		var ret []ActionConfig
		return ret
	}

	return o.ActionConfigList
}

// GetActionConfigListOk returns a tuple with the ActionConfigList field value
// and a boolean to check if the value has been set.
func (o *CreateEventHandlerRequest) GetActionConfigListOk() ([]ActionConfig, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ActionConfigList, true
}

// SetActionConfigList sets field value
func (o *CreateEventHandlerRequest) SetActionConfigList(v []ActionConfig) {
	o.ActionConfigList = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateEventHandlerRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEventHandlerRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateEventHandlerRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateEventHandlerRequest) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateEventHandlerRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEventHandlerRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateEventHandlerRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateEventHandlerRequest) SetName(v string) {
	o.Name = &v
}

// GetRuleConfig returns the RuleConfig field value
func (o *CreateEventHandlerRequest) GetRuleConfig() RuleConfig {
	if o == nil {
		var ret RuleConfig
		return ret
	}

	return o.RuleConfig
}

// GetRuleConfigOk returns a tuple with the RuleConfig field value
// and a boolean to check if the value has been set.
func (o *CreateEventHandlerRequest) GetRuleConfigOk() (*RuleConfig, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RuleConfig, true
}

// SetRuleConfig sets field value
func (o *CreateEventHandlerRequest) SetRuleConfig(v RuleConfig) {
	o.RuleConfig = v
}

// GetStatus returns the Status field value
func (o *CreateEventHandlerRequest) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CreateEventHandlerRequest) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CreateEventHandlerRequest) SetStatus(v string) {
	o.Status = v
}

// GetTargetGroupId returns the TargetGroupId field value if set, zero value otherwise.
func (o *CreateEventHandlerRequest) GetTargetGroupId() string {
	if o == nil || o.TargetGroupId == nil {
		var ret string
		return ret
	}
	return *o.TargetGroupId
}

// GetTargetGroupIdOk returns a tuple with the TargetGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEventHandlerRequest) GetTargetGroupIdOk() (*string, bool) {
	if o == nil || o.TargetGroupId == nil {
		return nil, false
	}
	return o.TargetGroupId, true
}

// HasTargetGroupId returns a boolean if a field has been set.
func (o *CreateEventHandlerRequest) HasTargetGroupId() bool {
	if o != nil && o.TargetGroupId != nil {
		return true
	}

	return false
}

// SetTargetGroupId gets a reference to the given string and assigns it to the TargetGroupId field.
func (o *CreateEventHandlerRequest) SetTargetGroupId(v string) {
	o.TargetGroupId = &v
}

// GetTargetImsi returns the TargetImsi field value if set, zero value otherwise.
func (o *CreateEventHandlerRequest) GetTargetImsi() string {
	if o == nil || o.TargetImsi == nil {
		var ret string
		return ret
	}
	return *o.TargetImsi
}

// GetTargetImsiOk returns a tuple with the TargetImsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEventHandlerRequest) GetTargetImsiOk() (*string, bool) {
	if o == nil || o.TargetImsi == nil {
		return nil, false
	}
	return o.TargetImsi, true
}

// HasTargetImsi returns a boolean if a field has been set.
func (o *CreateEventHandlerRequest) HasTargetImsi() bool {
	if o != nil && o.TargetImsi != nil {
		return true
	}

	return false
}

// SetTargetImsi gets a reference to the given string and assigns it to the TargetImsi field.
func (o *CreateEventHandlerRequest) SetTargetImsi(v string) {
	o.TargetImsi = &v
}

// GetTargetOperatorId returns the TargetOperatorId field value if set, zero value otherwise.
func (o *CreateEventHandlerRequest) GetTargetOperatorId() string {
	if o == nil || o.TargetOperatorId == nil {
		var ret string
		return ret
	}
	return *o.TargetOperatorId
}

// GetTargetOperatorIdOk returns a tuple with the TargetOperatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEventHandlerRequest) GetTargetOperatorIdOk() (*string, bool) {
	if o == nil || o.TargetOperatorId == nil {
		return nil, false
	}
	return o.TargetOperatorId, true
}

// HasTargetOperatorId returns a boolean if a field has been set.
func (o *CreateEventHandlerRequest) HasTargetOperatorId() bool {
	if o != nil && o.TargetOperatorId != nil {
		return true
	}

	return false
}

// SetTargetOperatorId gets a reference to the given string and assigns it to the TargetOperatorId field.
func (o *CreateEventHandlerRequest) SetTargetOperatorId(v string) {
	o.TargetOperatorId = &v
}

// GetTargetSimId returns the TargetSimId field value if set, zero value otherwise.
func (o *CreateEventHandlerRequest) GetTargetSimId() string {
	if o == nil || o.TargetSimId == nil {
		var ret string
		return ret
	}
	return *o.TargetSimId
}

// GetTargetSimIdOk returns a tuple with the TargetSimId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEventHandlerRequest) GetTargetSimIdOk() (*string, bool) {
	if o == nil || o.TargetSimId == nil {
		return nil, false
	}
	return o.TargetSimId, true
}

// HasTargetSimId returns a boolean if a field has been set.
func (o *CreateEventHandlerRequest) HasTargetSimId() bool {
	if o != nil && o.TargetSimId != nil {
		return true
	}

	return false
}

// SetTargetSimId gets a reference to the given string and assigns it to the TargetSimId field.
func (o *CreateEventHandlerRequest) SetTargetSimId(v string) {
	o.TargetSimId = &v
}

func (o CreateEventHandlerRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["actionConfigList"] = o.ActionConfigList
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["ruleConfig"] = o.RuleConfig
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.TargetGroupId != nil {
		toSerialize["targetGroupId"] = o.TargetGroupId
	}
	if o.TargetImsi != nil {
		toSerialize["targetImsi"] = o.TargetImsi
	}
	if o.TargetOperatorId != nil {
		toSerialize["targetOperatorId"] = o.TargetOperatorId
	}
	if o.TargetSimId != nil {
		toSerialize["targetSimId"] = o.TargetSimId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateEventHandlerRequest struct {
	value *CreateEventHandlerRequest
	isSet bool
}

func (v NullableCreateEventHandlerRequest) Get() *CreateEventHandlerRequest {
	return v.value
}

func (v *NullableCreateEventHandlerRequest) Set(val *CreateEventHandlerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEventHandlerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEventHandlerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEventHandlerRequest(val *CreateEventHandlerRequest) *NullableCreateEventHandlerRequest {
	return &NullableCreateEventHandlerRequest{value: val, isSet: true}
}

func (v NullableCreateEventHandlerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEventHandlerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


