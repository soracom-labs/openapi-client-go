/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CreateUserPasswordRequest struct for CreateUserPasswordRequest
type CreateUserPasswordRequest struct {
	Password *string `json:"password,omitempty"`
}

// NewCreateUserPasswordRequest instantiates a new CreateUserPasswordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUserPasswordRequest() *CreateUserPasswordRequest {
	this := CreateUserPasswordRequest{}
	return &this
}

// NewCreateUserPasswordRequestWithDefaults instantiates a new CreateUserPasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUserPasswordRequestWithDefaults() *CreateUserPasswordRequest {
	this := CreateUserPasswordRequest{}
	return &this
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CreateUserPasswordRequest) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserPasswordRequest) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CreateUserPasswordRequest) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CreateUserPasswordRequest) SetPassword(v string) {
	o.Password = &v
}

func (o CreateUserPasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableCreateUserPasswordRequest struct {
	value *CreateUserPasswordRequest
	isSet bool
}

func (v NullableCreateUserPasswordRequest) Get() *CreateUserPasswordRequest {
	return v.value
}

func (v *NullableCreateUserPasswordRequest) Set(val *CreateUserPasswordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUserPasswordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUserPasswordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUserPasswordRequest(val *CreateUserPasswordRequest) *NullableCreateUserPasswordRequest {
	return &NullableCreateUserPasswordRequest{value: val, isSet: true}
}

func (v NullableCreateUserPasswordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUserPasswordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


