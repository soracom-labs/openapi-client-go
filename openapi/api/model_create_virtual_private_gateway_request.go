/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CreateVirtualPrivateGatewayRequest struct for CreateVirtualPrivateGatewayRequest
type CreateVirtualPrivateGatewayRequest struct {
	DeviceSubnetCidrRange *string `json:"deviceSubnetCidrRange,omitempty"`
	// VPG Type.  - `14` : Type-E  - `15` : Type-F
	Type int32 `json:"type"`
	UseInternetGateway *bool `json:"useInternetGateway,omitempty"`
}

// NewCreateVirtualPrivateGatewayRequest instantiates a new CreateVirtualPrivateGatewayRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVirtualPrivateGatewayRequest(type_ int32) *CreateVirtualPrivateGatewayRequest {
	this := CreateVirtualPrivateGatewayRequest{}
	var deviceSubnetCidrRange string = "10.128.0.0/9"
	this.DeviceSubnetCidrRange = &deviceSubnetCidrRange
	this.Type = type_
	var useInternetGateway bool = true
	this.UseInternetGateway = &useInternetGateway
	return &this
}

// NewCreateVirtualPrivateGatewayRequestWithDefaults instantiates a new CreateVirtualPrivateGatewayRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVirtualPrivateGatewayRequestWithDefaults() *CreateVirtualPrivateGatewayRequest {
	this := CreateVirtualPrivateGatewayRequest{}
	var deviceSubnetCidrRange string = "10.128.0.0/9"
	this.DeviceSubnetCidrRange = &deviceSubnetCidrRange
	var useInternetGateway bool = true
	this.UseInternetGateway = &useInternetGateway
	return &this
}

// GetDeviceSubnetCidrRange returns the DeviceSubnetCidrRange field value if set, zero value otherwise.
func (o *CreateVirtualPrivateGatewayRequest) GetDeviceSubnetCidrRange() string {
	if o == nil || o.DeviceSubnetCidrRange == nil {
		var ret string
		return ret
	}
	return *o.DeviceSubnetCidrRange
}

// GetDeviceSubnetCidrRangeOk returns a tuple with the DeviceSubnetCidrRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVirtualPrivateGatewayRequest) GetDeviceSubnetCidrRangeOk() (*string, bool) {
	if o == nil || o.DeviceSubnetCidrRange == nil {
		return nil, false
	}
	return o.DeviceSubnetCidrRange, true
}

// HasDeviceSubnetCidrRange returns a boolean if a field has been set.
func (o *CreateVirtualPrivateGatewayRequest) HasDeviceSubnetCidrRange() bool {
	if o != nil && o.DeviceSubnetCidrRange != nil {
		return true
	}

	return false
}

// SetDeviceSubnetCidrRange gets a reference to the given string and assigns it to the DeviceSubnetCidrRange field.
func (o *CreateVirtualPrivateGatewayRequest) SetDeviceSubnetCidrRange(v string) {
	o.DeviceSubnetCidrRange = &v
}

// GetType returns the Type field value
func (o *CreateVirtualPrivateGatewayRequest) GetType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateVirtualPrivateGatewayRequest) GetTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateVirtualPrivateGatewayRequest) SetType(v int32) {
	o.Type = v
}

// GetUseInternetGateway returns the UseInternetGateway field value if set, zero value otherwise.
func (o *CreateVirtualPrivateGatewayRequest) GetUseInternetGateway() bool {
	if o == nil || o.UseInternetGateway == nil {
		var ret bool
		return ret
	}
	return *o.UseInternetGateway
}

// GetUseInternetGatewayOk returns a tuple with the UseInternetGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVirtualPrivateGatewayRequest) GetUseInternetGatewayOk() (*bool, bool) {
	if o == nil || o.UseInternetGateway == nil {
		return nil, false
	}
	return o.UseInternetGateway, true
}

// HasUseInternetGateway returns a boolean if a field has been set.
func (o *CreateVirtualPrivateGatewayRequest) HasUseInternetGateway() bool {
	if o != nil && o.UseInternetGateway != nil {
		return true
	}

	return false
}

// SetUseInternetGateway gets a reference to the given bool and assigns it to the UseInternetGateway field.
func (o *CreateVirtualPrivateGatewayRequest) SetUseInternetGateway(v bool) {
	o.UseInternetGateway = &v
}

func (o CreateVirtualPrivateGatewayRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceSubnetCidrRange != nil {
		toSerialize["deviceSubnetCidrRange"] = o.DeviceSubnetCidrRange
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.UseInternetGateway != nil {
		toSerialize["useInternetGateway"] = o.UseInternetGateway
	}
	return json.Marshal(toSerialize)
}

type NullableCreateVirtualPrivateGatewayRequest struct {
	value *CreateVirtualPrivateGatewayRequest
	isSet bool
}

func (v NullableCreateVirtualPrivateGatewayRequest) Get() *CreateVirtualPrivateGatewayRequest {
	return v.value
}

func (v *NullableCreateVirtualPrivateGatewayRequest) Set(val *CreateVirtualPrivateGatewayRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVirtualPrivateGatewayRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVirtualPrivateGatewayRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVirtualPrivateGatewayRequest(val *CreateVirtualPrivateGatewayRequest) *NullableCreateVirtualPrivateGatewayRequest {
	return &NullableCreateVirtualPrivateGatewayRequest{value: val, isSet: true}
}

func (v NullableCreateVirtualPrivateGatewayRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVirtualPrivateGatewayRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


