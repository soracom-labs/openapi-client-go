/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CreateVpcPeeringConnectionRequest struct for CreateVpcPeeringConnectionRequest
type CreateVpcPeeringConnectionRequest struct {
	DestinationCidrBlock *string `json:"destinationCidrBlock,omitempty"`
	PeerOwnerId *string `json:"peerOwnerId,omitempty"`
	PeerRegion *string `json:"peerRegion,omitempty"`
	PeerVpcId *string `json:"peerVpcId,omitempty"`
}

// NewCreateVpcPeeringConnectionRequest instantiates a new CreateVpcPeeringConnectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVpcPeeringConnectionRequest() *CreateVpcPeeringConnectionRequest {
	this := CreateVpcPeeringConnectionRequest{}
	return &this
}

// NewCreateVpcPeeringConnectionRequestWithDefaults instantiates a new CreateVpcPeeringConnectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVpcPeeringConnectionRequestWithDefaults() *CreateVpcPeeringConnectionRequest {
	this := CreateVpcPeeringConnectionRequest{}
	return &this
}

// GetDestinationCidrBlock returns the DestinationCidrBlock field value if set, zero value otherwise.
func (o *CreateVpcPeeringConnectionRequest) GetDestinationCidrBlock() string {
	if o == nil || o.DestinationCidrBlock == nil {
		var ret string
		return ret
	}
	return *o.DestinationCidrBlock
}

// GetDestinationCidrBlockOk returns a tuple with the DestinationCidrBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVpcPeeringConnectionRequest) GetDestinationCidrBlockOk() (*string, bool) {
	if o == nil || o.DestinationCidrBlock == nil {
		return nil, false
	}
	return o.DestinationCidrBlock, true
}

// HasDestinationCidrBlock returns a boolean if a field has been set.
func (o *CreateVpcPeeringConnectionRequest) HasDestinationCidrBlock() bool {
	if o != nil && o.DestinationCidrBlock != nil {
		return true
	}

	return false
}

// SetDestinationCidrBlock gets a reference to the given string and assigns it to the DestinationCidrBlock field.
func (o *CreateVpcPeeringConnectionRequest) SetDestinationCidrBlock(v string) {
	o.DestinationCidrBlock = &v
}

// GetPeerOwnerId returns the PeerOwnerId field value if set, zero value otherwise.
func (o *CreateVpcPeeringConnectionRequest) GetPeerOwnerId() string {
	if o == nil || o.PeerOwnerId == nil {
		var ret string
		return ret
	}
	return *o.PeerOwnerId
}

// GetPeerOwnerIdOk returns a tuple with the PeerOwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVpcPeeringConnectionRequest) GetPeerOwnerIdOk() (*string, bool) {
	if o == nil || o.PeerOwnerId == nil {
		return nil, false
	}
	return o.PeerOwnerId, true
}

// HasPeerOwnerId returns a boolean if a field has been set.
func (o *CreateVpcPeeringConnectionRequest) HasPeerOwnerId() bool {
	if o != nil && o.PeerOwnerId != nil {
		return true
	}

	return false
}

// SetPeerOwnerId gets a reference to the given string and assigns it to the PeerOwnerId field.
func (o *CreateVpcPeeringConnectionRequest) SetPeerOwnerId(v string) {
	o.PeerOwnerId = &v
}

// GetPeerRegion returns the PeerRegion field value if set, zero value otherwise.
func (o *CreateVpcPeeringConnectionRequest) GetPeerRegion() string {
	if o == nil || o.PeerRegion == nil {
		var ret string
		return ret
	}
	return *o.PeerRegion
}

// GetPeerRegionOk returns a tuple with the PeerRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVpcPeeringConnectionRequest) GetPeerRegionOk() (*string, bool) {
	if o == nil || o.PeerRegion == nil {
		return nil, false
	}
	return o.PeerRegion, true
}

// HasPeerRegion returns a boolean if a field has been set.
func (o *CreateVpcPeeringConnectionRequest) HasPeerRegion() bool {
	if o != nil && o.PeerRegion != nil {
		return true
	}

	return false
}

// SetPeerRegion gets a reference to the given string and assigns it to the PeerRegion field.
func (o *CreateVpcPeeringConnectionRequest) SetPeerRegion(v string) {
	o.PeerRegion = &v
}

// GetPeerVpcId returns the PeerVpcId field value if set, zero value otherwise.
func (o *CreateVpcPeeringConnectionRequest) GetPeerVpcId() string {
	if o == nil || o.PeerVpcId == nil {
		var ret string
		return ret
	}
	return *o.PeerVpcId
}

// GetPeerVpcIdOk returns a tuple with the PeerVpcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVpcPeeringConnectionRequest) GetPeerVpcIdOk() (*string, bool) {
	if o == nil || o.PeerVpcId == nil {
		return nil, false
	}
	return o.PeerVpcId, true
}

// HasPeerVpcId returns a boolean if a field has been set.
func (o *CreateVpcPeeringConnectionRequest) HasPeerVpcId() bool {
	if o != nil && o.PeerVpcId != nil {
		return true
	}

	return false
}

// SetPeerVpcId gets a reference to the given string and assigns it to the PeerVpcId field.
func (o *CreateVpcPeeringConnectionRequest) SetPeerVpcId(v string) {
	o.PeerVpcId = &v
}

func (o CreateVpcPeeringConnectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DestinationCidrBlock != nil {
		toSerialize["destinationCidrBlock"] = o.DestinationCidrBlock
	}
	if o.PeerOwnerId != nil {
		toSerialize["peerOwnerId"] = o.PeerOwnerId
	}
	if o.PeerRegion != nil {
		toSerialize["peerRegion"] = o.PeerRegion
	}
	if o.PeerVpcId != nil {
		toSerialize["peerVpcId"] = o.PeerVpcId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateVpcPeeringConnectionRequest struct {
	value *CreateVpcPeeringConnectionRequest
	isSet bool
}

func (v NullableCreateVpcPeeringConnectionRequest) Get() *CreateVpcPeeringConnectionRequest {
	return v.value
}

func (v *NullableCreateVpcPeeringConnectionRequest) Set(val *CreateVpcPeeringConnectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVpcPeeringConnectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVpcPeeringConnectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVpcPeeringConnectionRequest(val *CreateVpcPeeringConnectionRequest) *NullableCreateVpcPeeringConnectionRequest {
	return &NullableCreateVpcPeeringConnectionRequest{value: val, isSet: true}
}

func (v NullableCreateVpcPeeringConnectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVpcPeeringConnectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


