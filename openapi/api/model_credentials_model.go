/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CredentialsModel struct for CredentialsModel
type CredentialsModel struct {
	CreateDateTime *int64 `json:"createDateTime,omitempty"`
	Credentials map[string]interface{} `json:"credentials,omitempty"`
	CredentialsId *string `json:"credentialsId,omitempty"`
	Description *string `json:"description,omitempty"`
	LastUsedDateTime *int64 `json:"lastUsedDateTime,omitempty"`
	Type *string `json:"type,omitempty"`
	UpdateDateTime *int64 `json:"updateDateTime,omitempty"`
}

// NewCredentialsModel instantiates a new CredentialsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialsModel() *CredentialsModel {
	this := CredentialsModel{}
	return &this
}

// NewCredentialsModelWithDefaults instantiates a new CredentialsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialsModelWithDefaults() *CredentialsModel {
	this := CredentialsModel{}
	return &this
}

// GetCreateDateTime returns the CreateDateTime field value if set, zero value otherwise.
func (o *CredentialsModel) GetCreateDateTime() int64 {
	if o == nil || o.CreateDateTime == nil {
		var ret int64
		return ret
	}
	return *o.CreateDateTime
}

// GetCreateDateTimeOk returns a tuple with the CreateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsModel) GetCreateDateTimeOk() (*int64, bool) {
	if o == nil || o.CreateDateTime == nil {
		return nil, false
	}
	return o.CreateDateTime, true
}

// HasCreateDateTime returns a boolean if a field has been set.
func (o *CredentialsModel) HasCreateDateTime() bool {
	if o != nil && o.CreateDateTime != nil {
		return true
	}

	return false
}

// SetCreateDateTime gets a reference to the given int64 and assigns it to the CreateDateTime field.
func (o *CredentialsModel) SetCreateDateTime(v int64) {
	o.CreateDateTime = &v
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *CredentialsModel) GetCredentials() map[string]interface{} {
	if o == nil || o.Credentials == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsModel) GetCredentialsOk() (map[string]interface{}, bool) {
	if o == nil || o.Credentials == nil {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *CredentialsModel) HasCredentials() bool {
	if o != nil && o.Credentials != nil {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given map[string]interface{} and assigns it to the Credentials field.
func (o *CredentialsModel) SetCredentials(v map[string]interface{}) {
	o.Credentials = v
}

// GetCredentialsId returns the CredentialsId field value if set, zero value otherwise.
func (o *CredentialsModel) GetCredentialsId() string {
	if o == nil || o.CredentialsId == nil {
		var ret string
		return ret
	}
	return *o.CredentialsId
}

// GetCredentialsIdOk returns a tuple with the CredentialsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsModel) GetCredentialsIdOk() (*string, bool) {
	if o == nil || o.CredentialsId == nil {
		return nil, false
	}
	return o.CredentialsId, true
}

// HasCredentialsId returns a boolean if a field has been set.
func (o *CredentialsModel) HasCredentialsId() bool {
	if o != nil && o.CredentialsId != nil {
		return true
	}

	return false
}

// SetCredentialsId gets a reference to the given string and assigns it to the CredentialsId field.
func (o *CredentialsModel) SetCredentialsId(v string) {
	o.CredentialsId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CredentialsModel) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsModel) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CredentialsModel) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CredentialsModel) SetDescription(v string) {
	o.Description = &v
}

// GetLastUsedDateTime returns the LastUsedDateTime field value if set, zero value otherwise.
func (o *CredentialsModel) GetLastUsedDateTime() int64 {
	if o == nil || o.LastUsedDateTime == nil {
		var ret int64
		return ret
	}
	return *o.LastUsedDateTime
}

// GetLastUsedDateTimeOk returns a tuple with the LastUsedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsModel) GetLastUsedDateTimeOk() (*int64, bool) {
	if o == nil || o.LastUsedDateTime == nil {
		return nil, false
	}
	return o.LastUsedDateTime, true
}

// HasLastUsedDateTime returns a boolean if a field has been set.
func (o *CredentialsModel) HasLastUsedDateTime() bool {
	if o != nil && o.LastUsedDateTime != nil {
		return true
	}

	return false
}

// SetLastUsedDateTime gets a reference to the given int64 and assigns it to the LastUsedDateTime field.
func (o *CredentialsModel) SetLastUsedDateTime(v int64) {
	o.LastUsedDateTime = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CredentialsModel) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsModel) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CredentialsModel) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CredentialsModel) SetType(v string) {
	o.Type = &v
}

// GetUpdateDateTime returns the UpdateDateTime field value if set, zero value otherwise.
func (o *CredentialsModel) GetUpdateDateTime() int64 {
	if o == nil || o.UpdateDateTime == nil {
		var ret int64
		return ret
	}
	return *o.UpdateDateTime
}

// GetUpdateDateTimeOk returns a tuple with the UpdateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsModel) GetUpdateDateTimeOk() (*int64, bool) {
	if o == nil || o.UpdateDateTime == nil {
		return nil, false
	}
	return o.UpdateDateTime, true
}

// HasUpdateDateTime returns a boolean if a field has been set.
func (o *CredentialsModel) HasUpdateDateTime() bool {
	if o != nil && o.UpdateDateTime != nil {
		return true
	}

	return false
}

// SetUpdateDateTime gets a reference to the given int64 and assigns it to the UpdateDateTime field.
func (o *CredentialsModel) SetUpdateDateTime(v int64) {
	o.UpdateDateTime = &v
}

func (o CredentialsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreateDateTime != nil {
		toSerialize["createDateTime"] = o.CreateDateTime
	}
	if o.Credentials != nil {
		toSerialize["credentials"] = o.Credentials
	}
	if o.CredentialsId != nil {
		toSerialize["credentialsId"] = o.CredentialsId
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.LastUsedDateTime != nil {
		toSerialize["lastUsedDateTime"] = o.LastUsedDateTime
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UpdateDateTime != nil {
		toSerialize["updateDateTime"] = o.UpdateDateTime
	}
	return json.Marshal(toSerialize)
}

type NullableCredentialsModel struct {
	value *CredentialsModel
	isSet bool
}

func (v NullableCredentialsModel) Get() *CredentialsModel {
	return v.value
}

func (v *NullableCredentialsModel) Set(val *CredentialsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialsModel(val *CredentialsModel) *NullableCredentialsModel {
	return &NullableCredentialsModel{value: val, isSet: true}
}

func (v NullableCredentialsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


