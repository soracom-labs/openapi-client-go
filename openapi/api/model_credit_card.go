/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CreditCard struct for CreditCard
type CreditCard struct {
	Cvc *string `json:"cvc,omitempty"`
	ExpireMonth *int32 `json:"expireMonth,omitempty"`
	ExpireYear *int32 `json:"expireYear,omitempty"`
	Name *string `json:"name,omitempty"`
	Number *string `json:"number,omitempty"`
}

// NewCreditCard instantiates a new CreditCard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditCard() *CreditCard {
	this := CreditCard{}
	return &this
}

// NewCreditCardWithDefaults instantiates a new CreditCard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditCardWithDefaults() *CreditCard {
	this := CreditCard{}
	return &this
}

// GetCvc returns the Cvc field value if set, zero value otherwise.
func (o *CreditCard) GetCvc() string {
	if o == nil || o.Cvc == nil {
		var ret string
		return ret
	}
	return *o.Cvc
}

// GetCvcOk returns a tuple with the Cvc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCard) GetCvcOk() (*string, bool) {
	if o == nil || o.Cvc == nil {
		return nil, false
	}
	return o.Cvc, true
}

// HasCvc returns a boolean if a field has been set.
func (o *CreditCard) HasCvc() bool {
	if o != nil && o.Cvc != nil {
		return true
	}

	return false
}

// SetCvc gets a reference to the given string and assigns it to the Cvc field.
func (o *CreditCard) SetCvc(v string) {
	o.Cvc = &v
}

// GetExpireMonth returns the ExpireMonth field value if set, zero value otherwise.
func (o *CreditCard) GetExpireMonth() int32 {
	if o == nil || o.ExpireMonth == nil {
		var ret int32
		return ret
	}
	return *o.ExpireMonth
}

// GetExpireMonthOk returns a tuple with the ExpireMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCard) GetExpireMonthOk() (*int32, bool) {
	if o == nil || o.ExpireMonth == nil {
		return nil, false
	}
	return o.ExpireMonth, true
}

// HasExpireMonth returns a boolean if a field has been set.
func (o *CreditCard) HasExpireMonth() bool {
	if o != nil && o.ExpireMonth != nil {
		return true
	}

	return false
}

// SetExpireMonth gets a reference to the given int32 and assigns it to the ExpireMonth field.
func (o *CreditCard) SetExpireMonth(v int32) {
	o.ExpireMonth = &v
}

// GetExpireYear returns the ExpireYear field value if set, zero value otherwise.
func (o *CreditCard) GetExpireYear() int32 {
	if o == nil || o.ExpireYear == nil {
		var ret int32
		return ret
	}
	return *o.ExpireYear
}

// GetExpireYearOk returns a tuple with the ExpireYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCard) GetExpireYearOk() (*int32, bool) {
	if o == nil || o.ExpireYear == nil {
		return nil, false
	}
	return o.ExpireYear, true
}

// HasExpireYear returns a boolean if a field has been set.
func (o *CreditCard) HasExpireYear() bool {
	if o != nil && o.ExpireYear != nil {
		return true
	}

	return false
}

// SetExpireYear gets a reference to the given int32 and assigns it to the ExpireYear field.
func (o *CreditCard) SetExpireYear(v int32) {
	o.ExpireYear = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreditCard) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCard) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreditCard) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreditCard) SetName(v string) {
	o.Name = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *CreditCard) GetNumber() string {
	if o == nil || o.Number == nil {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCard) GetNumberOk() (*string, bool) {
	if o == nil || o.Number == nil {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *CreditCard) HasNumber() bool {
	if o != nil && o.Number != nil {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *CreditCard) SetNumber(v string) {
	o.Number = &v
}

func (o CreditCard) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cvc != nil {
		toSerialize["cvc"] = o.Cvc
	}
	if o.ExpireMonth != nil {
		toSerialize["expireMonth"] = o.ExpireMonth
	}
	if o.ExpireYear != nil {
		toSerialize["expireYear"] = o.ExpireYear
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Number != nil {
		toSerialize["number"] = o.Number
	}
	return json.Marshal(toSerialize)
}

type NullableCreditCard struct {
	value *CreditCard
	isSet bool
}

func (v NullableCreditCard) Get() *CreditCard {
	return v.value
}

func (v *NullableCreditCard) Set(val *CreditCard) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditCard) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditCard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditCard(val *CreditCard) *NullableCreditCard {
	return &NullableCreditCard{value: val, isSet: true}
}

func (v NullableCreditCard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditCard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


