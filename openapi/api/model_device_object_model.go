/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// DeviceObjectModel struct for DeviceObjectModel
type DeviceObjectModel struct {
	CreatedTime *time.Time `json:"createdTime,omitempty"`
	Format *string `json:"format,omitempty"`
	LastModifiedTime *time.Time `json:"lastModifiedTime,omitempty"`
	ObjectId *string `json:"objectId,omitempty"`
	ObjectName *string `json:"objectName,omitempty"`
	OperatorId *string `json:"operatorId,omitempty"`
	Scope *string `json:"scope,omitempty"`
}

// NewDeviceObjectModel instantiates a new DeviceObjectModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceObjectModel() *DeviceObjectModel {
	this := DeviceObjectModel{}
	return &this
}

// NewDeviceObjectModelWithDefaults instantiates a new DeviceObjectModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceObjectModelWithDefaults() *DeviceObjectModel {
	this := DeviceObjectModel{}
	return &this
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *DeviceObjectModel) GetCreatedTime() time.Time {
	if o == nil || o.CreatedTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceObjectModel) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || o.CreatedTime == nil {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *DeviceObjectModel) HasCreatedTime() bool {
	if o != nil && o.CreatedTime != nil {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *DeviceObjectModel) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *DeviceObjectModel) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceObjectModel) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *DeviceObjectModel) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *DeviceObjectModel) SetFormat(v string) {
	o.Format = &v
}

// GetLastModifiedTime returns the LastModifiedTime field value if set, zero value otherwise.
func (o *DeviceObjectModel) GetLastModifiedTime() time.Time {
	if o == nil || o.LastModifiedTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceObjectModel) GetLastModifiedTimeOk() (*time.Time, bool) {
	if o == nil || o.LastModifiedTime == nil {
		return nil, false
	}
	return o.LastModifiedTime, true
}

// HasLastModifiedTime returns a boolean if a field has been set.
func (o *DeviceObjectModel) HasLastModifiedTime() bool {
	if o != nil && o.LastModifiedTime != nil {
		return true
	}

	return false
}

// SetLastModifiedTime gets a reference to the given time.Time and assigns it to the LastModifiedTime field.
func (o *DeviceObjectModel) SetLastModifiedTime(v time.Time) {
	o.LastModifiedTime = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *DeviceObjectModel) GetObjectId() string {
	if o == nil || o.ObjectId == nil {
		var ret string
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceObjectModel) GetObjectIdOk() (*string, bool) {
	if o == nil || o.ObjectId == nil {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *DeviceObjectModel) HasObjectId() bool {
	if o != nil && o.ObjectId != nil {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given string and assigns it to the ObjectId field.
func (o *DeviceObjectModel) SetObjectId(v string) {
	o.ObjectId = &v
}

// GetObjectName returns the ObjectName field value if set, zero value otherwise.
func (o *DeviceObjectModel) GetObjectName() string {
	if o == nil || o.ObjectName == nil {
		var ret string
		return ret
	}
	return *o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceObjectModel) GetObjectNameOk() (*string, bool) {
	if o == nil || o.ObjectName == nil {
		return nil, false
	}
	return o.ObjectName, true
}

// HasObjectName returns a boolean if a field has been set.
func (o *DeviceObjectModel) HasObjectName() bool {
	if o != nil && o.ObjectName != nil {
		return true
	}

	return false
}

// SetObjectName gets a reference to the given string and assigns it to the ObjectName field.
func (o *DeviceObjectModel) SetObjectName(v string) {
	o.ObjectName = &v
}

// GetOperatorId returns the OperatorId field value if set, zero value otherwise.
func (o *DeviceObjectModel) GetOperatorId() string {
	if o == nil || o.OperatorId == nil {
		var ret string
		return ret
	}
	return *o.OperatorId
}

// GetOperatorIdOk returns a tuple with the OperatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceObjectModel) GetOperatorIdOk() (*string, bool) {
	if o == nil || o.OperatorId == nil {
		return nil, false
	}
	return o.OperatorId, true
}

// HasOperatorId returns a boolean if a field has been set.
func (o *DeviceObjectModel) HasOperatorId() bool {
	if o != nil && o.OperatorId != nil {
		return true
	}

	return false
}

// SetOperatorId gets a reference to the given string and assigns it to the OperatorId field.
func (o *DeviceObjectModel) SetOperatorId(v string) {
	o.OperatorId = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *DeviceObjectModel) GetScope() string {
	if o == nil || o.Scope == nil {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceObjectModel) GetScopeOk() (*string, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *DeviceObjectModel) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *DeviceObjectModel) SetScope(v string) {
	o.Scope = &v
}

func (o DeviceObjectModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedTime != nil {
		toSerialize["createdTime"] = o.CreatedTime
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.LastModifiedTime != nil {
		toSerialize["lastModifiedTime"] = o.LastModifiedTime
	}
	if o.ObjectId != nil {
		toSerialize["objectId"] = o.ObjectId
	}
	if o.ObjectName != nil {
		toSerialize["objectName"] = o.ObjectName
	}
	if o.OperatorId != nil {
		toSerialize["operatorId"] = o.OperatorId
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceObjectModel struct {
	value *DeviceObjectModel
	isSet bool
}

func (v NullableDeviceObjectModel) Get() *DeviceObjectModel {
	return v.value
}

func (v *NullableDeviceObjectModel) Set(val *DeviceObjectModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceObjectModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceObjectModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceObjectModel(val *DeviceObjectModel) *NullableDeviceObjectModel {
	return &NullableDeviceObjectModel{value: val, isSet: true}
}

func (v NullableDeviceObjectModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceObjectModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


