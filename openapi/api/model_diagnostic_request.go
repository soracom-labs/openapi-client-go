/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// DiagnosticRequest struct for DiagnosticRequest
type DiagnosticRequest struct {
	// Start time for diagnostic (unixtime milliseconds)
	From *int64 `json:"from,omitempty"`
	// resourceId according to resourceType
	ResourceId string `json:"resourceId"`
	ResourceType string `json:"resourceType"`
	Service string `json:"service"`
	// End time for diagnostic (unixtime milliseconds)
	To *int64 `json:"to,omitempty"`
}

// NewDiagnosticRequest instantiates a new DiagnosticRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiagnosticRequest(resourceId string, resourceType string, service string) *DiagnosticRequest {
	this := DiagnosticRequest{}
	this.ResourceId = resourceId
	this.ResourceType = resourceType
	this.Service = service
	return &this
}

// NewDiagnosticRequestWithDefaults instantiates a new DiagnosticRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiagnosticRequestWithDefaults() *DiagnosticRequest {
	this := DiagnosticRequest{}
	return &this
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *DiagnosticRequest) GetFrom() int64 {
	if o == nil || o.From == nil {
		var ret int64
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagnosticRequest) GetFromOk() (*int64, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *DiagnosticRequest) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given int64 and assigns it to the From field.
func (o *DiagnosticRequest) SetFrom(v int64) {
	o.From = &v
}

// GetResourceId returns the ResourceId field value
func (o *DiagnosticRequest) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *DiagnosticRequest) GetResourceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *DiagnosticRequest) SetResourceId(v string) {
	o.ResourceId = v
}

// GetResourceType returns the ResourceType field value
func (o *DiagnosticRequest) GetResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *DiagnosticRequest) GetResourceTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *DiagnosticRequest) SetResourceType(v string) {
	o.ResourceType = v
}

// GetService returns the Service field value
func (o *DiagnosticRequest) GetService() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Service
}

// GetServiceOk returns a tuple with the Service field value
// and a boolean to check if the value has been set.
func (o *DiagnosticRequest) GetServiceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Service, true
}

// SetService sets field value
func (o *DiagnosticRequest) SetService(v string) {
	o.Service = v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *DiagnosticRequest) GetTo() int64 {
	if o == nil || o.To == nil {
		var ret int64
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagnosticRequest) GetToOk() (*int64, bool) {
	if o == nil || o.To == nil {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *DiagnosticRequest) HasTo() bool {
	if o != nil && o.To != nil {
		return true
	}

	return false
}

// SetTo gets a reference to the given int64 and assigns it to the To field.
func (o *DiagnosticRequest) SetTo(v int64) {
	o.To = &v
}

func (o DiagnosticRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if true {
		toSerialize["resourceId"] = o.ResourceId
	}
	if true {
		toSerialize["resourceType"] = o.ResourceType
	}
	if true {
		toSerialize["service"] = o.Service
	}
	if o.To != nil {
		toSerialize["to"] = o.To
	}
	return json.Marshal(toSerialize)
}

type NullableDiagnosticRequest struct {
	value *DiagnosticRequest
	isSet bool
}

func (v NullableDiagnosticRequest) Get() *DiagnosticRequest {
	return v.value
}

func (v *NullableDiagnosticRequest) Set(val *DiagnosticRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDiagnosticRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDiagnosticRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiagnosticRequest(val *DiagnosticRequest) *NullableDiagnosticRequest {
	return &NullableDiagnosticRequest{value: val, isSet: true}
}

func (v NullableDiagnosticRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiagnosticRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


