/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// DownlinkPingResponse struct for DownlinkPingResponse
type DownlinkPingResponse struct {
	// the RTT of the ping result
	Rtt *string `json:"rtt,omitempty"`
	// the stats information of the ping result
	Stat *string `json:"stat,omitempty"`
	// whether the ping was succeeded or not
	Success *bool `json:"success,omitempty"`
}

// NewDownlinkPingResponse instantiates a new DownlinkPingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDownlinkPingResponse() *DownlinkPingResponse {
	this := DownlinkPingResponse{}
	return &this
}

// NewDownlinkPingResponseWithDefaults instantiates a new DownlinkPingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDownlinkPingResponseWithDefaults() *DownlinkPingResponse {
	this := DownlinkPingResponse{}
	return &this
}

// GetRtt returns the Rtt field value if set, zero value otherwise.
func (o *DownlinkPingResponse) GetRtt() string {
	if o == nil || o.Rtt == nil {
		var ret string
		return ret
	}
	return *o.Rtt
}

// GetRttOk returns a tuple with the Rtt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownlinkPingResponse) GetRttOk() (*string, bool) {
	if o == nil || o.Rtt == nil {
		return nil, false
	}
	return o.Rtt, true
}

// HasRtt returns a boolean if a field has been set.
func (o *DownlinkPingResponse) HasRtt() bool {
	if o != nil && o.Rtt != nil {
		return true
	}

	return false
}

// SetRtt gets a reference to the given string and assigns it to the Rtt field.
func (o *DownlinkPingResponse) SetRtt(v string) {
	o.Rtt = &v
}

// GetStat returns the Stat field value if set, zero value otherwise.
func (o *DownlinkPingResponse) GetStat() string {
	if o == nil || o.Stat == nil {
		var ret string
		return ret
	}
	return *o.Stat
}

// GetStatOk returns a tuple with the Stat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownlinkPingResponse) GetStatOk() (*string, bool) {
	if o == nil || o.Stat == nil {
		return nil, false
	}
	return o.Stat, true
}

// HasStat returns a boolean if a field has been set.
func (o *DownlinkPingResponse) HasStat() bool {
	if o != nil && o.Stat != nil {
		return true
	}

	return false
}

// SetStat gets a reference to the given string and assigns it to the Stat field.
func (o *DownlinkPingResponse) SetStat(v string) {
	o.Stat = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *DownlinkPingResponse) GetSuccess() bool {
	if o == nil || o.Success == nil {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownlinkPingResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || o.Success == nil {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *DownlinkPingResponse) HasSuccess() bool {
	if o != nil && o.Success != nil {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *DownlinkPingResponse) SetSuccess(v bool) {
	o.Success = &v
}

func (o DownlinkPingResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Rtt != nil {
		toSerialize["rtt"] = o.Rtt
	}
	if o.Stat != nil {
		toSerialize["stat"] = o.Stat
	}
	if o.Success != nil {
		toSerialize["success"] = o.Success
	}
	return json.Marshal(toSerialize)
}

type NullableDownlinkPingResponse struct {
	value *DownlinkPingResponse
	isSet bool
}

func (v NullableDownlinkPingResponse) Get() *DownlinkPingResponse {
	return v.value
}

func (v *NullableDownlinkPingResponse) Set(val *DownlinkPingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDownlinkPingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDownlinkPingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDownlinkPingResponse(val *DownlinkPingResponse) *NullableDownlinkPingResponse {
	return &NullableDownlinkPingResponse{value: val, isSet: true}
}

func (v NullableDownlinkPingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDownlinkPingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


