/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// EstimatedCouponModel struct for EstimatedCouponModel
type EstimatedCouponModel struct {
	// Amount
	Amount *float64 `json:"amount,omitempty"`
	// Currency
	Currency *string `json:"currency,omitempty"`
	// Expiry month
	ExpiryYearMonth *string `json:"expiryYearMonth,omitempty"`
	// Order ID
	OrderId *string `json:"orderId,omitempty"`
	// Tax amount
	TaxAmount *float64 `json:"taxAmount,omitempty"`
	// Total amount
	TotalAmount *float64 `json:"totalAmount,omitempty"`
}

// NewEstimatedCouponModel instantiates a new EstimatedCouponModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEstimatedCouponModel() *EstimatedCouponModel {
	this := EstimatedCouponModel{}
	return &this
}

// NewEstimatedCouponModelWithDefaults instantiates a new EstimatedCouponModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEstimatedCouponModelWithDefaults() *EstimatedCouponModel {
	this := EstimatedCouponModel{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *EstimatedCouponModel) GetAmount() float64 {
	if o == nil || o.Amount == nil {
		var ret float64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimatedCouponModel) GetAmountOk() (*float64, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *EstimatedCouponModel) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float64 and assigns it to the Amount field.
func (o *EstimatedCouponModel) SetAmount(v float64) {
	o.Amount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *EstimatedCouponModel) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimatedCouponModel) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *EstimatedCouponModel) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *EstimatedCouponModel) SetCurrency(v string) {
	o.Currency = &v
}

// GetExpiryYearMonth returns the ExpiryYearMonth field value if set, zero value otherwise.
func (o *EstimatedCouponModel) GetExpiryYearMonth() string {
	if o == nil || o.ExpiryYearMonth == nil {
		var ret string
		return ret
	}
	return *o.ExpiryYearMonth
}

// GetExpiryYearMonthOk returns a tuple with the ExpiryYearMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimatedCouponModel) GetExpiryYearMonthOk() (*string, bool) {
	if o == nil || o.ExpiryYearMonth == nil {
		return nil, false
	}
	return o.ExpiryYearMonth, true
}

// HasExpiryYearMonth returns a boolean if a field has been set.
func (o *EstimatedCouponModel) HasExpiryYearMonth() bool {
	if o != nil && o.ExpiryYearMonth != nil {
		return true
	}

	return false
}

// SetExpiryYearMonth gets a reference to the given string and assigns it to the ExpiryYearMonth field.
func (o *EstimatedCouponModel) SetExpiryYearMonth(v string) {
	o.ExpiryYearMonth = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *EstimatedCouponModel) GetOrderId() string {
	if o == nil || o.OrderId == nil {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimatedCouponModel) GetOrderIdOk() (*string, bool) {
	if o == nil || o.OrderId == nil {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *EstimatedCouponModel) HasOrderId() bool {
	if o != nil && o.OrderId != nil {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *EstimatedCouponModel) SetOrderId(v string) {
	o.OrderId = &v
}

// GetTaxAmount returns the TaxAmount field value if set, zero value otherwise.
func (o *EstimatedCouponModel) GetTaxAmount() float64 {
	if o == nil || o.TaxAmount == nil {
		var ret float64
		return ret
	}
	return *o.TaxAmount
}

// GetTaxAmountOk returns a tuple with the TaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimatedCouponModel) GetTaxAmountOk() (*float64, bool) {
	if o == nil || o.TaxAmount == nil {
		return nil, false
	}
	return o.TaxAmount, true
}

// HasTaxAmount returns a boolean if a field has been set.
func (o *EstimatedCouponModel) HasTaxAmount() bool {
	if o != nil && o.TaxAmount != nil {
		return true
	}

	return false
}

// SetTaxAmount gets a reference to the given float64 and assigns it to the TaxAmount field.
func (o *EstimatedCouponModel) SetTaxAmount(v float64) {
	o.TaxAmount = &v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *EstimatedCouponModel) GetTotalAmount() float64 {
	if o == nil || o.TotalAmount == nil {
		var ret float64
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimatedCouponModel) GetTotalAmountOk() (*float64, bool) {
	if o == nil || o.TotalAmount == nil {
		return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *EstimatedCouponModel) HasTotalAmount() bool {
	if o != nil && o.TotalAmount != nil {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given float64 and assigns it to the TotalAmount field.
func (o *EstimatedCouponModel) SetTotalAmount(v float64) {
	o.TotalAmount = &v
}

func (o EstimatedCouponModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.ExpiryYearMonth != nil {
		toSerialize["expiryYearMonth"] = o.ExpiryYearMonth
	}
	if o.OrderId != nil {
		toSerialize["orderId"] = o.OrderId
	}
	if o.TaxAmount != nil {
		toSerialize["taxAmount"] = o.TaxAmount
	}
	if o.TotalAmount != nil {
		toSerialize["totalAmount"] = o.TotalAmount
	}
	return json.Marshal(toSerialize)
}

type NullableEstimatedCouponModel struct {
	value *EstimatedCouponModel
	isSet bool
}

func (v NullableEstimatedCouponModel) Get() *EstimatedCouponModel {
	return v.value
}

func (v *NullableEstimatedCouponModel) Set(val *EstimatedCouponModel) {
	v.value = val
	v.isSet = true
}

func (v NullableEstimatedCouponModel) IsSet() bool {
	return v.isSet
}

func (v *NullableEstimatedCouponModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEstimatedCouponModel(val *EstimatedCouponModel) *NullableEstimatedCouponModel {
	return &NullableEstimatedCouponModel{value: val, isSet: true}
}

func (v NullableEstimatedCouponModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEstimatedCouponModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


