/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// EstimatedOrderItemModel struct for EstimatedOrderItemModel
type EstimatedOrderItemModel struct {
	Product *ProductModel `json:"product,omitempty"`
	// Product amount
	ProductAmount *float64 `json:"productAmount,omitempty"`
	// Quantity
	Quantity *int32 `json:"quantity,omitempty"`
}

// NewEstimatedOrderItemModel instantiates a new EstimatedOrderItemModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEstimatedOrderItemModel() *EstimatedOrderItemModel {
	this := EstimatedOrderItemModel{}
	return &this
}

// NewEstimatedOrderItemModelWithDefaults instantiates a new EstimatedOrderItemModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEstimatedOrderItemModelWithDefaults() *EstimatedOrderItemModel {
	this := EstimatedOrderItemModel{}
	return &this
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *EstimatedOrderItemModel) GetProduct() ProductModel {
	if o == nil || o.Product == nil {
		var ret ProductModel
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimatedOrderItemModel) GetProductOk() (*ProductModel, bool) {
	if o == nil || o.Product == nil {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *EstimatedOrderItemModel) HasProduct() bool {
	if o != nil && o.Product != nil {
		return true
	}

	return false
}

// SetProduct gets a reference to the given ProductModel and assigns it to the Product field.
func (o *EstimatedOrderItemModel) SetProduct(v ProductModel) {
	o.Product = &v
}

// GetProductAmount returns the ProductAmount field value if set, zero value otherwise.
func (o *EstimatedOrderItemModel) GetProductAmount() float64 {
	if o == nil || o.ProductAmount == nil {
		var ret float64
		return ret
	}
	return *o.ProductAmount
}

// GetProductAmountOk returns a tuple with the ProductAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimatedOrderItemModel) GetProductAmountOk() (*float64, bool) {
	if o == nil || o.ProductAmount == nil {
		return nil, false
	}
	return o.ProductAmount, true
}

// HasProductAmount returns a boolean if a field has been set.
func (o *EstimatedOrderItemModel) HasProductAmount() bool {
	if o != nil && o.ProductAmount != nil {
		return true
	}

	return false
}

// SetProductAmount gets a reference to the given float64 and assigns it to the ProductAmount field.
func (o *EstimatedOrderItemModel) SetProductAmount(v float64) {
	o.ProductAmount = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *EstimatedOrderItemModel) GetQuantity() int32 {
	if o == nil || o.Quantity == nil {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimatedOrderItemModel) GetQuantityOk() (*int32, bool) {
	if o == nil || o.Quantity == nil {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *EstimatedOrderItemModel) HasQuantity() bool {
	if o != nil && o.Quantity != nil {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *EstimatedOrderItemModel) SetQuantity(v int32) {
	o.Quantity = &v
}

func (o EstimatedOrderItemModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Product != nil {
		toSerialize["product"] = o.Product
	}
	if o.ProductAmount != nil {
		toSerialize["productAmount"] = o.ProductAmount
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	return json.Marshal(toSerialize)
}

type NullableEstimatedOrderItemModel struct {
	value *EstimatedOrderItemModel
	isSet bool
}

func (v NullableEstimatedOrderItemModel) Get() *EstimatedOrderItemModel {
	return v.value
}

func (v *NullableEstimatedOrderItemModel) Set(val *EstimatedOrderItemModel) {
	v.value = val
	v.isSet = true
}

func (v NullableEstimatedOrderItemModel) IsSet() bool {
	return v.isSet
}

func (v *NullableEstimatedOrderItemModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEstimatedOrderItemModel(val *EstimatedOrderItemModel) *NullableEstimatedOrderItemModel {
	return &NullableEstimatedOrderItemModel{value: val, isSet: true}
}

func (v NullableEstimatedOrderItemModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEstimatedOrderItemModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


