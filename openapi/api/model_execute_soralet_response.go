/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ExecuteSoraletResponse struct for ExecuteSoraletResponse
type ExecuteSoraletResponse struct {
	Body *string `json:"body,omitempty"`
	ContentType *string `json:"contentType,omitempty"`
	EncodingType *string `json:"encodingType,omitempty"`
	ResultCode *int32 `json:"resultCode,omitempty"`
}

// NewExecuteSoraletResponse instantiates a new ExecuteSoraletResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecuteSoraletResponse() *ExecuteSoraletResponse {
	this := ExecuteSoraletResponse{}
	return &this
}

// NewExecuteSoraletResponseWithDefaults instantiates a new ExecuteSoraletResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecuteSoraletResponseWithDefaults() *ExecuteSoraletResponse {
	this := ExecuteSoraletResponse{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *ExecuteSoraletResponse) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteSoraletResponse) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *ExecuteSoraletResponse) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *ExecuteSoraletResponse) SetBody(v string) {
	o.Body = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *ExecuteSoraletResponse) GetContentType() string {
	if o == nil || o.ContentType == nil {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteSoraletResponse) GetContentTypeOk() (*string, bool) {
	if o == nil || o.ContentType == nil {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *ExecuteSoraletResponse) HasContentType() bool {
	if o != nil && o.ContentType != nil {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *ExecuteSoraletResponse) SetContentType(v string) {
	o.ContentType = &v
}

// GetEncodingType returns the EncodingType field value if set, zero value otherwise.
func (o *ExecuteSoraletResponse) GetEncodingType() string {
	if o == nil || o.EncodingType == nil {
		var ret string
		return ret
	}
	return *o.EncodingType
}

// GetEncodingTypeOk returns a tuple with the EncodingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteSoraletResponse) GetEncodingTypeOk() (*string, bool) {
	if o == nil || o.EncodingType == nil {
		return nil, false
	}
	return o.EncodingType, true
}

// HasEncodingType returns a boolean if a field has been set.
func (o *ExecuteSoraletResponse) HasEncodingType() bool {
	if o != nil && o.EncodingType != nil {
		return true
	}

	return false
}

// SetEncodingType gets a reference to the given string and assigns it to the EncodingType field.
func (o *ExecuteSoraletResponse) SetEncodingType(v string) {
	o.EncodingType = &v
}

// GetResultCode returns the ResultCode field value if set, zero value otherwise.
func (o *ExecuteSoraletResponse) GetResultCode() int32 {
	if o == nil || o.ResultCode == nil {
		var ret int32
		return ret
	}
	return *o.ResultCode
}

// GetResultCodeOk returns a tuple with the ResultCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteSoraletResponse) GetResultCodeOk() (*int32, bool) {
	if o == nil || o.ResultCode == nil {
		return nil, false
	}
	return o.ResultCode, true
}

// HasResultCode returns a boolean if a field has been set.
func (o *ExecuteSoraletResponse) HasResultCode() bool {
	if o != nil && o.ResultCode != nil {
		return true
	}

	return false
}

// SetResultCode gets a reference to the given int32 and assigns it to the ResultCode field.
func (o *ExecuteSoraletResponse) SetResultCode(v int32) {
	o.ResultCode = &v
}

func (o ExecuteSoraletResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.ContentType != nil {
		toSerialize["contentType"] = o.ContentType
	}
	if o.EncodingType != nil {
		toSerialize["encodingType"] = o.EncodingType
	}
	if o.ResultCode != nil {
		toSerialize["resultCode"] = o.ResultCode
	}
	return json.Marshal(toSerialize)
}

type NullableExecuteSoraletResponse struct {
	value *ExecuteSoraletResponse
	isSet bool
}

func (v NullableExecuteSoraletResponse) Get() *ExecuteSoraletResponse {
	return v.value
}

func (v *NullableExecuteSoraletResponse) Set(val *ExecuteSoraletResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableExecuteSoraletResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableExecuteSoraletResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecuteSoraletResponse(val *ExecuteSoraletResponse) *NullableExecuteSoraletResponse {
	return &NullableExecuteSoraletResponse{value: val, isSet: true}
}

func (v NullableExecuteSoraletResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecuteSoraletResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


