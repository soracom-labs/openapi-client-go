/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// FileExportResponse struct for FileExportResponse
type FileExportResponse struct {
	// ファイル出力ID(リクエストにexport_mode=asyncを指定した場合）
	ExportedFileId *string `json:"exportedFileId,omitempty"`
	// 出力済みファイル取得パス(リクエストにexport_mode=asyncを付与した場合）
	ExportedFilePath *string `json:"exportedFilePath,omitempty"`
	// ファイルダウンロードURL(export_mode指定なし、もしくはexport_mode=syncの場合
	Url *string `json:"url,omitempty"`
}

// NewFileExportResponse instantiates a new FileExportResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileExportResponse() *FileExportResponse {
	this := FileExportResponse{}
	return &this
}

// NewFileExportResponseWithDefaults instantiates a new FileExportResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileExportResponseWithDefaults() *FileExportResponse {
	this := FileExportResponse{}
	return &this
}

// GetExportedFileId returns the ExportedFileId field value if set, zero value otherwise.
func (o *FileExportResponse) GetExportedFileId() string {
	if o == nil || o.ExportedFileId == nil {
		var ret string
		return ret
	}
	return *o.ExportedFileId
}

// GetExportedFileIdOk returns a tuple with the ExportedFileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileExportResponse) GetExportedFileIdOk() (*string, bool) {
	if o == nil || o.ExportedFileId == nil {
		return nil, false
	}
	return o.ExportedFileId, true
}

// HasExportedFileId returns a boolean if a field has been set.
func (o *FileExportResponse) HasExportedFileId() bool {
	if o != nil && o.ExportedFileId != nil {
		return true
	}

	return false
}

// SetExportedFileId gets a reference to the given string and assigns it to the ExportedFileId field.
func (o *FileExportResponse) SetExportedFileId(v string) {
	o.ExportedFileId = &v
}

// GetExportedFilePath returns the ExportedFilePath field value if set, zero value otherwise.
func (o *FileExportResponse) GetExportedFilePath() string {
	if o == nil || o.ExportedFilePath == nil {
		var ret string
		return ret
	}
	return *o.ExportedFilePath
}

// GetExportedFilePathOk returns a tuple with the ExportedFilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileExportResponse) GetExportedFilePathOk() (*string, bool) {
	if o == nil || o.ExportedFilePath == nil {
		return nil, false
	}
	return o.ExportedFilePath, true
}

// HasExportedFilePath returns a boolean if a field has been set.
func (o *FileExportResponse) HasExportedFilePath() bool {
	if o != nil && o.ExportedFilePath != nil {
		return true
	}

	return false
}

// SetExportedFilePath gets a reference to the given string and assigns it to the ExportedFilePath field.
func (o *FileExportResponse) SetExportedFilePath(v string) {
	o.ExportedFilePath = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *FileExportResponse) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileExportResponse) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *FileExportResponse) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *FileExportResponse) SetUrl(v string) {
	o.Url = &v
}

func (o FileExportResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExportedFileId != nil {
		toSerialize["exportedFileId"] = o.ExportedFileId
	}
	if o.ExportedFilePath != nil {
		toSerialize["exportedFilePath"] = o.ExportedFilePath
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableFileExportResponse struct {
	value *FileExportResponse
	isSet bool
}

func (v NullableFileExportResponse) Get() *FileExportResponse {
	return v.value
}

func (v *NullableFileExportResponse) Set(val *FileExportResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFileExportResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFileExportResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileExportResponse(val *FileExportResponse) *NullableFileExportResponse {
	return &NullableFileExportResponse{value: val, isSet: true}
}

func (v NullableFileExportResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileExportResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


