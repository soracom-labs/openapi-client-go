/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// FunkStatsResponse struct for FunkStatsResponse
type FunkStatsResponse struct {
	FunkStatsMap *map[string]SoracomFunkStats `json:"funkStatsMap,omitempty"`
	Unixtime *int64 `json:"unixtime,omitempty"`
}

// NewFunkStatsResponse instantiates a new FunkStatsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFunkStatsResponse() *FunkStatsResponse {
	this := FunkStatsResponse{}
	return &this
}

// NewFunkStatsResponseWithDefaults instantiates a new FunkStatsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFunkStatsResponseWithDefaults() *FunkStatsResponse {
	this := FunkStatsResponse{}
	return &this
}

// GetFunkStatsMap returns the FunkStatsMap field value if set, zero value otherwise.
func (o *FunkStatsResponse) GetFunkStatsMap() map[string]SoracomFunkStats {
	if o == nil || o.FunkStatsMap == nil {
		var ret map[string]SoracomFunkStats
		return ret
	}
	return *o.FunkStatsMap
}

// GetFunkStatsMapOk returns a tuple with the FunkStatsMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunkStatsResponse) GetFunkStatsMapOk() (*map[string]SoracomFunkStats, bool) {
	if o == nil || o.FunkStatsMap == nil {
		return nil, false
	}
	return o.FunkStatsMap, true
}

// HasFunkStatsMap returns a boolean if a field has been set.
func (o *FunkStatsResponse) HasFunkStatsMap() bool {
	if o != nil && o.FunkStatsMap != nil {
		return true
	}

	return false
}

// SetFunkStatsMap gets a reference to the given map[string]SoracomFunkStats and assigns it to the FunkStatsMap field.
func (o *FunkStatsResponse) SetFunkStatsMap(v map[string]SoracomFunkStats) {
	o.FunkStatsMap = &v
}

// GetUnixtime returns the Unixtime field value if set, zero value otherwise.
func (o *FunkStatsResponse) GetUnixtime() int64 {
	if o == nil || o.Unixtime == nil {
		var ret int64
		return ret
	}
	return *o.Unixtime
}

// GetUnixtimeOk returns a tuple with the Unixtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunkStatsResponse) GetUnixtimeOk() (*int64, bool) {
	if o == nil || o.Unixtime == nil {
		return nil, false
	}
	return o.Unixtime, true
}

// HasUnixtime returns a boolean if a field has been set.
func (o *FunkStatsResponse) HasUnixtime() bool {
	if o != nil && o.Unixtime != nil {
		return true
	}

	return false
}

// SetUnixtime gets a reference to the given int64 and assigns it to the Unixtime field.
func (o *FunkStatsResponse) SetUnixtime(v int64) {
	o.Unixtime = &v
}

func (o FunkStatsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FunkStatsMap != nil {
		toSerialize["funkStatsMap"] = o.FunkStatsMap
	}
	if o.Unixtime != nil {
		toSerialize["unixtime"] = o.Unixtime
	}
	return json.Marshal(toSerialize)
}

type NullableFunkStatsResponse struct {
	value *FunkStatsResponse
	isSet bool
}

func (v NullableFunkStatsResponse) Get() *FunkStatsResponse {
	return v.value
}

func (v *NullableFunkStatsResponse) Set(val *FunkStatsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFunkStatsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFunkStatsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFunkStatsResponse(val *FunkStatsResponse) *NullableFunkStatsResponse {
	return &NullableFunkStatsResponse{value: val, isSet: true}
}

func (v NullableFunkStatsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFunkStatsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


