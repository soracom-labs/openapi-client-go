/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// FunnelConfiguration struct for FunnelConfiguration
type FunnelConfiguration struct {
	AddSimId *bool `json:"addSimId,omitempty"`
	ContentType *FunnelContentType `json:"contentType,omitempty"`
	CredentialsId *string `json:"credentialsId,omitempty"`
	Destination *FunnelDestination `json:"destination,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
}

// NewFunnelConfiguration instantiates a new FunnelConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFunnelConfiguration() *FunnelConfiguration {
	this := FunnelConfiguration{}
	var addSimId bool = false
	this.AddSimId = &addSimId
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// NewFunnelConfigurationWithDefaults instantiates a new FunnelConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFunnelConfigurationWithDefaults() *FunnelConfiguration {
	this := FunnelConfiguration{}
	var addSimId bool = false
	this.AddSimId = &addSimId
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// GetAddSimId returns the AddSimId field value if set, zero value otherwise.
func (o *FunnelConfiguration) GetAddSimId() bool {
	if o == nil || o.AddSimId == nil {
		var ret bool
		return ret
	}
	return *o.AddSimId
}

// GetAddSimIdOk returns a tuple with the AddSimId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunnelConfiguration) GetAddSimIdOk() (*bool, bool) {
	if o == nil || o.AddSimId == nil {
		return nil, false
	}
	return o.AddSimId, true
}

// HasAddSimId returns a boolean if a field has been set.
func (o *FunnelConfiguration) HasAddSimId() bool {
	if o != nil && o.AddSimId != nil {
		return true
	}

	return false
}

// SetAddSimId gets a reference to the given bool and assigns it to the AddSimId field.
func (o *FunnelConfiguration) SetAddSimId(v bool) {
	o.AddSimId = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *FunnelConfiguration) GetContentType() FunnelContentType {
	if o == nil || o.ContentType == nil {
		var ret FunnelContentType
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunnelConfiguration) GetContentTypeOk() (*FunnelContentType, bool) {
	if o == nil || o.ContentType == nil {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *FunnelConfiguration) HasContentType() bool {
	if o != nil && o.ContentType != nil {
		return true
	}

	return false
}

// SetContentType gets a reference to the given FunnelContentType and assigns it to the ContentType field.
func (o *FunnelConfiguration) SetContentType(v FunnelContentType) {
	o.ContentType = &v
}

// GetCredentialsId returns the CredentialsId field value if set, zero value otherwise.
func (o *FunnelConfiguration) GetCredentialsId() string {
	if o == nil || o.CredentialsId == nil {
		var ret string
		return ret
	}
	return *o.CredentialsId
}

// GetCredentialsIdOk returns a tuple with the CredentialsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunnelConfiguration) GetCredentialsIdOk() (*string, bool) {
	if o == nil || o.CredentialsId == nil {
		return nil, false
	}
	return o.CredentialsId, true
}

// HasCredentialsId returns a boolean if a field has been set.
func (o *FunnelConfiguration) HasCredentialsId() bool {
	if o != nil && o.CredentialsId != nil {
		return true
	}

	return false
}

// SetCredentialsId gets a reference to the given string and assigns it to the CredentialsId field.
func (o *FunnelConfiguration) SetCredentialsId(v string) {
	o.CredentialsId = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *FunnelConfiguration) GetDestination() FunnelDestination {
	if o == nil || o.Destination == nil {
		var ret FunnelDestination
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunnelConfiguration) GetDestinationOk() (*FunnelDestination, bool) {
	if o == nil || o.Destination == nil {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *FunnelConfiguration) HasDestination() bool {
	if o != nil && o.Destination != nil {
		return true
	}

	return false
}

// SetDestination gets a reference to the given FunnelDestination and assigns it to the Destination field.
func (o *FunnelConfiguration) SetDestination(v FunnelDestination) {
	o.Destination = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *FunnelConfiguration) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunnelConfiguration) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *FunnelConfiguration) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *FunnelConfiguration) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o FunnelConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AddSimId != nil {
		toSerialize["addSimId"] = o.AddSimId
	}
	if o.ContentType != nil {
		toSerialize["contentType"] = o.ContentType
	}
	if o.CredentialsId != nil {
		toSerialize["credentialsId"] = o.CredentialsId
	}
	if o.Destination != nil {
		toSerialize["destination"] = o.Destination
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableFunnelConfiguration struct {
	value *FunnelConfiguration
	isSet bool
}

func (v NullableFunnelConfiguration) Get() *FunnelConfiguration {
	return v.value
}

func (v *NullableFunnelConfiguration) Set(val *FunnelConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableFunnelConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableFunnelConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFunnelConfiguration(val *FunnelConfiguration) *NullableFunnelConfiguration {
	return &NullableFunnelConfiguration{value: val, isSet: true}
}

func (v NullableFunnelConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFunnelConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


