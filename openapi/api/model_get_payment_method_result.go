/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// GetPaymentMethodResult struct for GetPaymentMethodResult
type GetPaymentMethodResult struct {
	// Error code (only if payment information is invalid)
	ErrorCode *string `json:"errorCode,omitempty"`
	// Error message (only if payment information is invalid)
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// Payment information
	Properties *string `json:"properties,omitempty"`
	// Provider type
	ProviderType *string `json:"providerType,omitempty"`
	// Update date
	UpdateDate *string `json:"updateDate,omitempty"`
}

// NewGetPaymentMethodResult instantiates a new GetPaymentMethodResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPaymentMethodResult() *GetPaymentMethodResult {
	this := GetPaymentMethodResult{}
	return &this
}

// NewGetPaymentMethodResultWithDefaults instantiates a new GetPaymentMethodResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPaymentMethodResultWithDefaults() *GetPaymentMethodResult {
	this := GetPaymentMethodResult{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *GetPaymentMethodResult) GetErrorCode() string {
	if o == nil || o.ErrorCode == nil {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentMethodResult) GetErrorCodeOk() (*string, bool) {
	if o == nil || o.ErrorCode == nil {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *GetPaymentMethodResult) HasErrorCode() bool {
	if o != nil && o.ErrorCode != nil {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *GetPaymentMethodResult) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *GetPaymentMethodResult) GetErrorMessage() string {
	if o == nil || o.ErrorMessage == nil {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentMethodResult) GetErrorMessageOk() (*string, bool) {
	if o == nil || o.ErrorMessage == nil {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *GetPaymentMethodResult) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage != nil {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *GetPaymentMethodResult) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *GetPaymentMethodResult) GetProperties() string {
	if o == nil || o.Properties == nil {
		var ret string
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentMethodResult) GetPropertiesOk() (*string, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *GetPaymentMethodResult) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given string and assigns it to the Properties field.
func (o *GetPaymentMethodResult) SetProperties(v string) {
	o.Properties = &v
}

// GetProviderType returns the ProviderType field value if set, zero value otherwise.
func (o *GetPaymentMethodResult) GetProviderType() string {
	if o == nil || o.ProviderType == nil {
		var ret string
		return ret
	}
	return *o.ProviderType
}

// GetProviderTypeOk returns a tuple with the ProviderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentMethodResult) GetProviderTypeOk() (*string, bool) {
	if o == nil || o.ProviderType == nil {
		return nil, false
	}
	return o.ProviderType, true
}

// HasProviderType returns a boolean if a field has been set.
func (o *GetPaymentMethodResult) HasProviderType() bool {
	if o != nil && o.ProviderType != nil {
		return true
	}

	return false
}

// SetProviderType gets a reference to the given string and assigns it to the ProviderType field.
func (o *GetPaymentMethodResult) SetProviderType(v string) {
	o.ProviderType = &v
}

// GetUpdateDate returns the UpdateDate field value if set, zero value otherwise.
func (o *GetPaymentMethodResult) GetUpdateDate() string {
	if o == nil || o.UpdateDate == nil {
		var ret string
		return ret
	}
	return *o.UpdateDate
}

// GetUpdateDateOk returns a tuple with the UpdateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentMethodResult) GetUpdateDateOk() (*string, bool) {
	if o == nil || o.UpdateDate == nil {
		return nil, false
	}
	return o.UpdateDate, true
}

// HasUpdateDate returns a boolean if a field has been set.
func (o *GetPaymentMethodResult) HasUpdateDate() bool {
	if o != nil && o.UpdateDate != nil {
		return true
	}

	return false
}

// SetUpdateDate gets a reference to the given string and assigns it to the UpdateDate field.
func (o *GetPaymentMethodResult) SetUpdateDate(v string) {
	o.UpdateDate = &v
}

func (o GetPaymentMethodResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ErrorCode != nil {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if o.ErrorMessage != nil {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.ProviderType != nil {
		toSerialize["providerType"] = o.ProviderType
	}
	if o.UpdateDate != nil {
		toSerialize["updateDate"] = o.UpdateDate
	}
	return json.Marshal(toSerialize)
}

type NullableGetPaymentMethodResult struct {
	value *GetPaymentMethodResult
	isSet bool
}

func (v NullableGetPaymentMethodResult) Get() *GetPaymentMethodResult {
	return v.value
}

func (v *NullableGetPaymentMethodResult) Set(val *GetPaymentMethodResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPaymentMethodResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPaymentMethodResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPaymentMethodResult(val *GetPaymentMethodResult) *NullableGetPaymentMethodResult {
	return &NullableGetPaymentMethodResult{value: val, isSet: true}
}

func (v NullableGetPaymentMethodResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPaymentMethodResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


