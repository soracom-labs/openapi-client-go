/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// GetUserPasswordResponse struct for GetUserPasswordResponse
type GetUserPasswordResponse struct {
	HasPassword *bool `json:"hasPassword,omitempty"`
}

// NewGetUserPasswordResponse instantiates a new GetUserPasswordResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserPasswordResponse() *GetUserPasswordResponse {
	this := GetUserPasswordResponse{}
	return &this
}

// NewGetUserPasswordResponseWithDefaults instantiates a new GetUserPasswordResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserPasswordResponseWithDefaults() *GetUserPasswordResponse {
	this := GetUserPasswordResponse{}
	return &this
}

// GetHasPassword returns the HasPassword field value if set, zero value otherwise.
func (o *GetUserPasswordResponse) GetHasPassword() bool {
	if o == nil || o.HasPassword == nil {
		var ret bool
		return ret
	}
	return *o.HasPassword
}

// GetHasPasswordOk returns a tuple with the HasPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserPasswordResponse) GetHasPasswordOk() (*bool, bool) {
	if o == nil || o.HasPassword == nil {
		return nil, false
	}
	return o.HasPassword, true
}

// HasHasPassword returns a boolean if a field has been set.
func (o *GetUserPasswordResponse) HasHasPassword() bool {
	if o != nil && o.HasPassword != nil {
		return true
	}

	return false
}

// SetHasPassword gets a reference to the given bool and assigns it to the HasPassword field.
func (o *GetUserPasswordResponse) SetHasPassword(v bool) {
	o.HasPassword = &v
}

func (o GetUserPasswordResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HasPassword != nil {
		toSerialize["hasPassword"] = o.HasPassword
	}
	return json.Marshal(toSerialize)
}

type NullableGetUserPasswordResponse struct {
	value *GetUserPasswordResponse
	isSet bool
}

func (v NullableGetUserPasswordResponse) Get() *GetUserPasswordResponse {
	return v.value
}

func (v *NullableGetUserPasswordResponse) Set(val *GetUserPasswordResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserPasswordResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserPasswordResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserPasswordResponse(val *GetUserPasswordResponse) *NullableGetUserPasswordResponse {
	return &NullableGetUserPasswordResponse{value: val, isSet: true}
}

func (v NullableGetUserPasswordResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserPasswordResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


