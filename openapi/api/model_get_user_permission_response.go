/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// GetUserPermissionResponse struct for GetUserPermissionResponse
type GetUserPermissionResponse struct {
	// JSON string of permissions
	Permission string `json:"permission"`
}

// NewGetUserPermissionResponse instantiates a new GetUserPermissionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserPermissionResponse(permission string) *GetUserPermissionResponse {
	this := GetUserPermissionResponse{}
	this.Permission = permission
	return &this
}

// NewGetUserPermissionResponseWithDefaults instantiates a new GetUserPermissionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserPermissionResponseWithDefaults() *GetUserPermissionResponse {
	this := GetUserPermissionResponse{}
	return &this
}

// GetPermission returns the Permission field value
func (o *GetUserPermissionResponse) GetPermission() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value
// and a boolean to check if the value has been set.
func (o *GetUserPermissionResponse) GetPermissionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Permission, true
}

// SetPermission sets field value
func (o *GetUserPermissionResponse) SetPermission(v string) {
	o.Permission = v
}

func (o GetUserPermissionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["permission"] = o.Permission
	}
	return json.Marshal(toSerialize)
}

type NullableGetUserPermissionResponse struct {
	value *GetUserPermissionResponse
	isSet bool
}

func (v NullableGetUserPermissionResponse) Get() *GetUserPermissionResponse {
	return v.value
}

func (v *NullableGetUserPermissionResponse) Set(val *GetUserPermissionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserPermissionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserPermissionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserPermissionResponse(val *GetUserPermissionResponse) *NullableGetUserPermissionResponse {
	return &NullableGetUserPermissionResponse{value: val, isSet: true}
}

func (v NullableGetUserPermissionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserPermissionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


