/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// HarvestStatsResponse struct for HarvestStatsResponse
type HarvestStatsResponse struct {
	HarvestStatsMap *map[string]SoracomHarvestStats `json:"harvestStatsMap,omitempty"`
	Unixtime *int64 `json:"unixtime,omitempty"`
}

// NewHarvestStatsResponse instantiates a new HarvestStatsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHarvestStatsResponse() *HarvestStatsResponse {
	this := HarvestStatsResponse{}
	return &this
}

// NewHarvestStatsResponseWithDefaults instantiates a new HarvestStatsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHarvestStatsResponseWithDefaults() *HarvestStatsResponse {
	this := HarvestStatsResponse{}
	return &this
}

// GetHarvestStatsMap returns the HarvestStatsMap field value if set, zero value otherwise.
func (o *HarvestStatsResponse) GetHarvestStatsMap() map[string]SoracomHarvestStats {
	if o == nil || o.HarvestStatsMap == nil {
		var ret map[string]SoracomHarvestStats
		return ret
	}
	return *o.HarvestStatsMap
}

// GetHarvestStatsMapOk returns a tuple with the HarvestStatsMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvestStatsResponse) GetHarvestStatsMapOk() (*map[string]SoracomHarvestStats, bool) {
	if o == nil || o.HarvestStatsMap == nil {
		return nil, false
	}
	return o.HarvestStatsMap, true
}

// HasHarvestStatsMap returns a boolean if a field has been set.
func (o *HarvestStatsResponse) HasHarvestStatsMap() bool {
	if o != nil && o.HarvestStatsMap != nil {
		return true
	}

	return false
}

// SetHarvestStatsMap gets a reference to the given map[string]SoracomHarvestStats and assigns it to the HarvestStatsMap field.
func (o *HarvestStatsResponse) SetHarvestStatsMap(v map[string]SoracomHarvestStats) {
	o.HarvestStatsMap = &v
}

// GetUnixtime returns the Unixtime field value if set, zero value otherwise.
func (o *HarvestStatsResponse) GetUnixtime() int64 {
	if o == nil || o.Unixtime == nil {
		var ret int64
		return ret
	}
	return *o.Unixtime
}

// GetUnixtimeOk returns a tuple with the Unixtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvestStatsResponse) GetUnixtimeOk() (*int64, bool) {
	if o == nil || o.Unixtime == nil {
		return nil, false
	}
	return o.Unixtime, true
}

// HasUnixtime returns a boolean if a field has been set.
func (o *HarvestStatsResponse) HasUnixtime() bool {
	if o != nil && o.Unixtime != nil {
		return true
	}

	return false
}

// SetUnixtime gets a reference to the given int64 and assigns it to the Unixtime field.
func (o *HarvestStatsResponse) SetUnixtime(v int64) {
	o.Unixtime = &v
}

func (o HarvestStatsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HarvestStatsMap != nil {
		toSerialize["harvestStatsMap"] = o.HarvestStatsMap
	}
	if o.Unixtime != nil {
		toSerialize["unixtime"] = o.Unixtime
	}
	return json.Marshal(toSerialize)
}

type NullableHarvestStatsResponse struct {
	value *HarvestStatsResponse
	isSet bool
}

func (v NullableHarvestStatsResponse) Get() *HarvestStatsResponse {
	return v.value
}

func (v *NullableHarvestStatsResponse) Set(val *HarvestStatsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHarvestStatsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHarvestStatsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHarvestStatsResponse(val *HarvestStatsResponse) *NullableHarvestStatsResponse {
	return &NullableHarvestStatsResponse{value: val, isSet: true}
}

func (v NullableHarvestStatsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHarvestStatsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


