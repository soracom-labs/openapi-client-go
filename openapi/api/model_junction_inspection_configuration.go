/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// JunctionInspectionConfiguration struct for JunctionInspectionConfiguration
type JunctionInspectionConfiguration struct {
	Enabled *bool `json:"enabled,omitempty"`
	Report *FunnelConfiguration `json:"report,omitempty"`
}

// NewJunctionInspectionConfiguration instantiates a new JunctionInspectionConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJunctionInspectionConfiguration() *JunctionInspectionConfiguration {
	this := JunctionInspectionConfiguration{}
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// NewJunctionInspectionConfigurationWithDefaults instantiates a new JunctionInspectionConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJunctionInspectionConfigurationWithDefaults() *JunctionInspectionConfiguration {
	this := JunctionInspectionConfiguration{}
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *JunctionInspectionConfiguration) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JunctionInspectionConfiguration) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *JunctionInspectionConfiguration) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *JunctionInspectionConfiguration) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetReport returns the Report field value if set, zero value otherwise.
func (o *JunctionInspectionConfiguration) GetReport() FunnelConfiguration {
	if o == nil || o.Report == nil {
		var ret FunnelConfiguration
		return ret
	}
	return *o.Report
}

// GetReportOk returns a tuple with the Report field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JunctionInspectionConfiguration) GetReportOk() (*FunnelConfiguration, bool) {
	if o == nil || o.Report == nil {
		return nil, false
	}
	return o.Report, true
}

// HasReport returns a boolean if a field has been set.
func (o *JunctionInspectionConfiguration) HasReport() bool {
	if o != nil && o.Report != nil {
		return true
	}

	return false
}

// SetReport gets a reference to the given FunnelConfiguration and assigns it to the Report field.
func (o *JunctionInspectionConfiguration) SetReport(v FunnelConfiguration) {
	o.Report = &v
}

func (o JunctionInspectionConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Report != nil {
		toSerialize["report"] = o.Report
	}
	return json.Marshal(toSerialize)
}

type NullableJunctionInspectionConfiguration struct {
	value *JunctionInspectionConfiguration
	isSet bool
}

func (v NullableJunctionInspectionConfiguration) Get() *JunctionInspectionConfiguration {
	return v.value
}

func (v *NullableJunctionInspectionConfiguration) Set(val *JunctionInspectionConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableJunctionInspectionConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableJunctionInspectionConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJunctionInspectionConfiguration(val *JunctionInspectionConfiguration) *NullableJunctionInspectionConfiguration {
	return &NullableJunctionInspectionConfiguration{value: val, isSet: true}
}

func (v NullableJunctionInspectionConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJunctionInspectionConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


