/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// JunctionMirroringConfiguration struct for JunctionMirroringConfiguration
type JunctionMirroringConfiguration struct {
	Peers *map[string]JunctionMirroringPeer `json:"peers,omitempty"`
}

// NewJunctionMirroringConfiguration instantiates a new JunctionMirroringConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJunctionMirroringConfiguration() *JunctionMirroringConfiguration {
	this := JunctionMirroringConfiguration{}
	return &this
}

// NewJunctionMirroringConfigurationWithDefaults instantiates a new JunctionMirroringConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJunctionMirroringConfigurationWithDefaults() *JunctionMirroringConfiguration {
	this := JunctionMirroringConfiguration{}
	return &this
}

// GetPeers returns the Peers field value if set, zero value otherwise.
func (o *JunctionMirroringConfiguration) GetPeers() map[string]JunctionMirroringPeer {
	if o == nil || o.Peers == nil {
		var ret map[string]JunctionMirroringPeer
		return ret
	}
	return *o.Peers
}

// GetPeersOk returns a tuple with the Peers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JunctionMirroringConfiguration) GetPeersOk() (*map[string]JunctionMirroringPeer, bool) {
	if o == nil || o.Peers == nil {
		return nil, false
	}
	return o.Peers, true
}

// HasPeers returns a boolean if a field has been set.
func (o *JunctionMirroringConfiguration) HasPeers() bool {
	if o != nil && o.Peers != nil {
		return true
	}

	return false
}

// SetPeers gets a reference to the given map[string]JunctionMirroringPeer and assigns it to the Peers field.
func (o *JunctionMirroringConfiguration) SetPeers(v map[string]JunctionMirroringPeer) {
	o.Peers = &v
}

func (o JunctionMirroringConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Peers != nil {
		toSerialize["peers"] = o.Peers
	}
	return json.Marshal(toSerialize)
}

type NullableJunctionMirroringConfiguration struct {
	value *JunctionMirroringConfiguration
	isSet bool
}

func (v NullableJunctionMirroringConfiguration) Get() *JunctionMirroringConfiguration {
	return v.value
}

func (v *NullableJunctionMirroringConfiguration) Set(val *JunctionMirroringConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableJunctionMirroringConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableJunctionMirroringConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJunctionMirroringConfiguration(val *JunctionMirroringConfiguration) *NullableJunctionMirroringConfiguration {
	return &NullableJunctionMirroringConfiguration{value: val, isSet: true}
}

func (v NullableJunctionMirroringConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJunctionMirroringConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


