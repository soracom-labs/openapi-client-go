/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// LagoonDashboardPermissionsUpdatingRequestPermissions struct for LagoonDashboardPermissionsUpdatingRequestPermissions
type LagoonDashboardPermissionsUpdatingRequestPermissions struct {
	Permission *string `json:"permission,omitempty"`
	UserId *int64 `json:"userId,omitempty"`
}

// NewLagoonDashboardPermissionsUpdatingRequestPermissions instantiates a new LagoonDashboardPermissionsUpdatingRequestPermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLagoonDashboardPermissionsUpdatingRequestPermissions() *LagoonDashboardPermissionsUpdatingRequestPermissions {
	this := LagoonDashboardPermissionsUpdatingRequestPermissions{}
	return &this
}

// NewLagoonDashboardPermissionsUpdatingRequestPermissionsWithDefaults instantiates a new LagoonDashboardPermissionsUpdatingRequestPermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLagoonDashboardPermissionsUpdatingRequestPermissionsWithDefaults() *LagoonDashboardPermissionsUpdatingRequestPermissions {
	this := LagoonDashboardPermissionsUpdatingRequestPermissions{}
	return &this
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *LagoonDashboardPermissionsUpdatingRequestPermissions) GetPermission() string {
	if o == nil || o.Permission == nil {
		var ret string
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LagoonDashboardPermissionsUpdatingRequestPermissions) GetPermissionOk() (*string, bool) {
	if o == nil || o.Permission == nil {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *LagoonDashboardPermissionsUpdatingRequestPermissions) HasPermission() bool {
	if o != nil && o.Permission != nil {
		return true
	}

	return false
}

// SetPermission gets a reference to the given string and assigns it to the Permission field.
func (o *LagoonDashboardPermissionsUpdatingRequestPermissions) SetPermission(v string) {
	o.Permission = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *LagoonDashboardPermissionsUpdatingRequestPermissions) GetUserId() int64 {
	if o == nil || o.UserId == nil {
		var ret int64
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LagoonDashboardPermissionsUpdatingRequestPermissions) GetUserIdOk() (*int64, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *LagoonDashboardPermissionsUpdatingRequestPermissions) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int64 and assigns it to the UserId field.
func (o *LagoonDashboardPermissionsUpdatingRequestPermissions) SetUserId(v int64) {
	o.UserId = &v
}

func (o LagoonDashboardPermissionsUpdatingRequestPermissions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Permission != nil {
		toSerialize["permission"] = o.Permission
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableLagoonDashboardPermissionsUpdatingRequestPermissions struct {
	value *LagoonDashboardPermissionsUpdatingRequestPermissions
	isSet bool
}

func (v NullableLagoonDashboardPermissionsUpdatingRequestPermissions) Get() *LagoonDashboardPermissionsUpdatingRequestPermissions {
	return v.value
}

func (v *NullableLagoonDashboardPermissionsUpdatingRequestPermissions) Set(val *LagoonDashboardPermissionsUpdatingRequestPermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableLagoonDashboardPermissionsUpdatingRequestPermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableLagoonDashboardPermissionsUpdatingRequestPermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLagoonDashboardPermissionsUpdatingRequestPermissions(val *LagoonDashboardPermissionsUpdatingRequestPermissions) *NullableLagoonDashboardPermissionsUpdatingRequestPermissions {
	return &NullableLagoonDashboardPermissionsUpdatingRequestPermissions{value: val, isSet: true}
}

func (v NullableLagoonDashboardPermissionsUpdatingRequestPermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLagoonDashboardPermissionsUpdatingRequestPermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


