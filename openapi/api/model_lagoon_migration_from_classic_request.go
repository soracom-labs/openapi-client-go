/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// LagoonMigrationFromClassicRequest struct for LagoonMigrationFromClassicRequest
type LagoonMigrationFromClassicRequest struct {
	// A list of dashboard IDs to migrate
	DashboardIds []string `json:"dashboardIds,omitempty"`
}

// NewLagoonMigrationFromClassicRequest instantiates a new LagoonMigrationFromClassicRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLagoonMigrationFromClassicRequest() *LagoonMigrationFromClassicRequest {
	this := LagoonMigrationFromClassicRequest{}
	return &this
}

// NewLagoonMigrationFromClassicRequestWithDefaults instantiates a new LagoonMigrationFromClassicRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLagoonMigrationFromClassicRequestWithDefaults() *LagoonMigrationFromClassicRequest {
	this := LagoonMigrationFromClassicRequest{}
	return &this
}

// GetDashboardIds returns the DashboardIds field value if set, zero value otherwise.
func (o *LagoonMigrationFromClassicRequest) GetDashboardIds() []string {
	if o == nil || o.DashboardIds == nil {
		var ret []string
		return ret
	}
	return o.DashboardIds
}

// GetDashboardIdsOk returns a tuple with the DashboardIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LagoonMigrationFromClassicRequest) GetDashboardIdsOk() ([]string, bool) {
	if o == nil || o.DashboardIds == nil {
		return nil, false
	}
	return o.DashboardIds, true
}

// HasDashboardIds returns a boolean if a field has been set.
func (o *LagoonMigrationFromClassicRequest) HasDashboardIds() bool {
	if o != nil && o.DashboardIds != nil {
		return true
	}

	return false
}

// SetDashboardIds gets a reference to the given []string and assigns it to the DashboardIds field.
func (o *LagoonMigrationFromClassicRequest) SetDashboardIds(v []string) {
	o.DashboardIds = v
}

func (o LagoonMigrationFromClassicRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DashboardIds != nil {
		toSerialize["dashboardIds"] = o.DashboardIds
	}
	return json.Marshal(toSerialize)
}

type NullableLagoonMigrationFromClassicRequest struct {
	value *LagoonMigrationFromClassicRequest
	isSet bool
}

func (v NullableLagoonMigrationFromClassicRequest) Get() *LagoonMigrationFromClassicRequest {
	return v.value
}

func (v *NullableLagoonMigrationFromClassicRequest) Set(val *LagoonMigrationFromClassicRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLagoonMigrationFromClassicRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLagoonMigrationFromClassicRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLagoonMigrationFromClassicRequest(val *LagoonMigrationFromClassicRequest) *NullableLagoonMigrationFromClassicRequest {
	return &NullableLagoonMigrationFromClassicRequest{value: val, isSet: true}
}

func (v NullableLagoonMigrationFromClassicRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLagoonMigrationFromClassicRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


