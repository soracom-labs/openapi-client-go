/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// LagoonRegistrationResponse struct for LagoonRegistrationResponse
type LagoonRegistrationResponse struct {
	// This email address is used on login with the initial user.
	LagoonUserEmail *string `json:"lagoonUserEmail,omitempty"`
}

// NewLagoonRegistrationResponse instantiates a new LagoonRegistrationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLagoonRegistrationResponse() *LagoonRegistrationResponse {
	this := LagoonRegistrationResponse{}
	return &this
}

// NewLagoonRegistrationResponseWithDefaults instantiates a new LagoonRegistrationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLagoonRegistrationResponseWithDefaults() *LagoonRegistrationResponse {
	this := LagoonRegistrationResponse{}
	return &this
}

// GetLagoonUserEmail returns the LagoonUserEmail field value if set, zero value otherwise.
func (o *LagoonRegistrationResponse) GetLagoonUserEmail() string {
	if o == nil || o.LagoonUserEmail == nil {
		var ret string
		return ret
	}
	return *o.LagoonUserEmail
}

// GetLagoonUserEmailOk returns a tuple with the LagoonUserEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LagoonRegistrationResponse) GetLagoonUserEmailOk() (*string, bool) {
	if o == nil || o.LagoonUserEmail == nil {
		return nil, false
	}
	return o.LagoonUserEmail, true
}

// HasLagoonUserEmail returns a boolean if a field has been set.
func (o *LagoonRegistrationResponse) HasLagoonUserEmail() bool {
	if o != nil && o.LagoonUserEmail != nil {
		return true
	}

	return false
}

// SetLagoonUserEmail gets a reference to the given string and assigns it to the LagoonUserEmail field.
func (o *LagoonRegistrationResponse) SetLagoonUserEmail(v string) {
	o.LagoonUserEmail = &v
}

func (o LagoonRegistrationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LagoonUserEmail != nil {
		toSerialize["lagoonUserEmail"] = o.LagoonUserEmail
	}
	return json.Marshal(toSerialize)
}

type NullableLagoonRegistrationResponse struct {
	value *LagoonRegistrationResponse
	isSet bool
}

func (v NullableLagoonRegistrationResponse) Get() *LagoonRegistrationResponse {
	return v.value
}

func (v *NullableLagoonRegistrationResponse) Set(val *LagoonRegistrationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLagoonRegistrationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLagoonRegistrationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLagoonRegistrationResponse(val *LagoonRegistrationResponse) *NullableLagoonRegistrationResponse {
	return &NullableLagoonRegistrationResponse{value: val, isSet: true}
}

func (v NullableLagoonRegistrationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLagoonRegistrationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


