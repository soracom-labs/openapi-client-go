/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// LagoonUserCreationRequest struct for LagoonUserCreationRequest
type LagoonUserCreationRequest struct {
	// A role that represents the permission.
	Role *string `json:"role,omitempty"`
	UserEmail *string `json:"userEmail,omitempty"`
	UserPassword *string `json:"userPassword,omitempty"`
}

// NewLagoonUserCreationRequest instantiates a new LagoonUserCreationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLagoonUserCreationRequest() *LagoonUserCreationRequest {
	this := LagoonUserCreationRequest{}
	return &this
}

// NewLagoonUserCreationRequestWithDefaults instantiates a new LagoonUserCreationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLagoonUserCreationRequestWithDefaults() *LagoonUserCreationRequest {
	this := LagoonUserCreationRequest{}
	return &this
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *LagoonUserCreationRequest) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LagoonUserCreationRequest) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *LagoonUserCreationRequest) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *LagoonUserCreationRequest) SetRole(v string) {
	o.Role = &v
}

// GetUserEmail returns the UserEmail field value if set, zero value otherwise.
func (o *LagoonUserCreationRequest) GetUserEmail() string {
	if o == nil || o.UserEmail == nil {
		var ret string
		return ret
	}
	return *o.UserEmail
}

// GetUserEmailOk returns a tuple with the UserEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LagoonUserCreationRequest) GetUserEmailOk() (*string, bool) {
	if o == nil || o.UserEmail == nil {
		return nil, false
	}
	return o.UserEmail, true
}

// HasUserEmail returns a boolean if a field has been set.
func (o *LagoonUserCreationRequest) HasUserEmail() bool {
	if o != nil && o.UserEmail != nil {
		return true
	}

	return false
}

// SetUserEmail gets a reference to the given string and assigns it to the UserEmail field.
func (o *LagoonUserCreationRequest) SetUserEmail(v string) {
	o.UserEmail = &v
}

// GetUserPassword returns the UserPassword field value if set, zero value otherwise.
func (o *LagoonUserCreationRequest) GetUserPassword() string {
	if o == nil || o.UserPassword == nil {
		var ret string
		return ret
	}
	return *o.UserPassword
}

// GetUserPasswordOk returns a tuple with the UserPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LagoonUserCreationRequest) GetUserPasswordOk() (*string, bool) {
	if o == nil || o.UserPassword == nil {
		return nil, false
	}
	return o.UserPassword, true
}

// HasUserPassword returns a boolean if a field has been set.
func (o *LagoonUserCreationRequest) HasUserPassword() bool {
	if o != nil && o.UserPassword != nil {
		return true
	}

	return false
}

// SetUserPassword gets a reference to the given string and assigns it to the UserPassword field.
func (o *LagoonUserCreationRequest) SetUserPassword(v string) {
	o.UserPassword = &v
}

func (o LagoonUserCreationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.UserEmail != nil {
		toSerialize["userEmail"] = o.UserEmail
	}
	if o.UserPassword != nil {
		toSerialize["userPassword"] = o.UserPassword
	}
	return json.Marshal(toSerialize)
}

type NullableLagoonUserCreationRequest struct {
	value *LagoonUserCreationRequest
	isSet bool
}

func (v NullableLagoonUserCreationRequest) Get() *LagoonUserCreationRequest {
	return v.value
}

func (v *NullableLagoonUserCreationRequest) Set(val *LagoonUserCreationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLagoonUserCreationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLagoonUserCreationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLagoonUserCreationRequest(val *LagoonUserCreationRequest) *NullableLagoonUserCreationRequest {
	return &NullableLagoonUserCreationRequest{value: val, isSet: true}
}

func (v NullableLagoonUserCreationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLagoonUserCreationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


