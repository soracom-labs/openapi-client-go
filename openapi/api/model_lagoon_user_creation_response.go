/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// LagoonUserCreationResponse struct for LagoonUserCreationResponse
type LagoonUserCreationResponse struct {
	// Lagoon user ID assigned to the created user.
	Id *int32 `json:"id,omitempty"`
}

// NewLagoonUserCreationResponse instantiates a new LagoonUserCreationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLagoonUserCreationResponse() *LagoonUserCreationResponse {
	this := LagoonUserCreationResponse{}
	return &this
}

// NewLagoonUserCreationResponseWithDefaults instantiates a new LagoonUserCreationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLagoonUserCreationResponseWithDefaults() *LagoonUserCreationResponse {
	this := LagoonUserCreationResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LagoonUserCreationResponse) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LagoonUserCreationResponse) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LagoonUserCreationResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *LagoonUserCreationResponse) SetId(v int32) {
	o.Id = &v
}

func (o LagoonUserCreationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableLagoonUserCreationResponse struct {
	value *LagoonUserCreationResponse
	isSet bool
}

func (v NullableLagoonUserCreationResponse) Get() *LagoonUserCreationResponse {
	return v.value
}

func (v *NullableLagoonUserCreationResponse) Set(val *LagoonUserCreationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLagoonUserCreationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLagoonUserCreationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLagoonUserCreationResponse(val *LagoonUserCreationResponse) *NullableLagoonUserCreationResponse {
	return &NullableLagoonUserCreationResponse{value: val, isSet: true}
}

func (v NullableLagoonUserCreationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLagoonUserCreationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


