/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ListCouponResponse struct for ListCouponResponse
type ListCouponResponse struct {
	// Coupons
	CouponList []CouponResponse `json:"couponList,omitempty"`
}

// NewListCouponResponse instantiates a new ListCouponResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListCouponResponse() *ListCouponResponse {
	this := ListCouponResponse{}
	return &this
}

// NewListCouponResponseWithDefaults instantiates a new ListCouponResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListCouponResponseWithDefaults() *ListCouponResponse {
	this := ListCouponResponse{}
	return &this
}

// GetCouponList returns the CouponList field value if set, zero value otherwise.
func (o *ListCouponResponse) GetCouponList() []CouponResponse {
	if o == nil || o.CouponList == nil {
		var ret []CouponResponse
		return ret
	}
	return o.CouponList
}

// GetCouponListOk returns a tuple with the CouponList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCouponResponse) GetCouponListOk() ([]CouponResponse, bool) {
	if o == nil || o.CouponList == nil {
		return nil, false
	}
	return o.CouponList, true
}

// HasCouponList returns a boolean if a field has been set.
func (o *ListCouponResponse) HasCouponList() bool {
	if o != nil && o.CouponList != nil {
		return true
	}

	return false
}

// SetCouponList gets a reference to the given []CouponResponse and assigns it to the CouponList field.
func (o *ListCouponResponse) SetCouponList(v []CouponResponse) {
	o.CouponList = v
}

func (o ListCouponResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CouponList != nil {
		toSerialize["couponList"] = o.CouponList
	}
	return json.Marshal(toSerialize)
}

type NullableListCouponResponse struct {
	value *ListCouponResponse
	isSet bool
}

func (v NullableListCouponResponse) Get() *ListCouponResponse {
	return v.value
}

func (v *NullableListCouponResponse) Set(val *ListCouponResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListCouponResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListCouponResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListCouponResponse(val *ListCouponResponse) *NullableListCouponResponse {
	return &NullableListCouponResponse{value: val, isSet: true}
}

func (v NullableListCouponResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListCouponResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


