/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ListOrderResponse struct for ListOrderResponse
type ListOrderResponse struct {
	// List of confirmed orders
	OrderList []GetOrderResponse `json:"orderList,omitempty"`
}

// NewListOrderResponse instantiates a new ListOrderResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListOrderResponse() *ListOrderResponse {
	this := ListOrderResponse{}
	return &this
}

// NewListOrderResponseWithDefaults instantiates a new ListOrderResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListOrderResponseWithDefaults() *ListOrderResponse {
	this := ListOrderResponse{}
	return &this
}

// GetOrderList returns the OrderList field value if set, zero value otherwise.
func (o *ListOrderResponse) GetOrderList() []GetOrderResponse {
	if o == nil || o.OrderList == nil {
		var ret []GetOrderResponse
		return ret
	}
	return o.OrderList
}

// GetOrderListOk returns a tuple with the OrderList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrderResponse) GetOrderListOk() ([]GetOrderResponse, bool) {
	if o == nil || o.OrderList == nil {
		return nil, false
	}
	return o.OrderList, true
}

// HasOrderList returns a boolean if a field has been set.
func (o *ListOrderResponse) HasOrderList() bool {
	if o != nil && o.OrderList != nil {
		return true
	}

	return false
}

// SetOrderList gets a reference to the given []GetOrderResponse and assigns it to the OrderList field.
func (o *ListOrderResponse) SetOrderList(v []GetOrderResponse) {
	o.OrderList = v
}

func (o ListOrderResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OrderList != nil {
		toSerialize["orderList"] = o.OrderList
	}
	return json.Marshal(toSerialize)
}

type NullableListOrderResponse struct {
	value *ListOrderResponse
	isSet bool
}

func (v NullableListOrderResponse) Get() *ListOrderResponse {
	return v.value
}

func (v *NullableListOrderResponse) Set(val *ListOrderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListOrderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListOrderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListOrderResponse(val *ListOrderResponse) *NullableListOrderResponse {
	return &NullableListOrderResponse{value: val, isSet: true}
}

func (v NullableListOrderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListOrderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


