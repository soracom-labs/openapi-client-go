/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ListShippingAddressResponse struct for ListShippingAddressResponse
type ListShippingAddressResponse struct {
	ShippingAddresses []GetShippingAddressResponse `json:"shippingAddresses,omitempty"`
}

// NewListShippingAddressResponse instantiates a new ListShippingAddressResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListShippingAddressResponse() *ListShippingAddressResponse {
	this := ListShippingAddressResponse{}
	return &this
}

// NewListShippingAddressResponseWithDefaults instantiates a new ListShippingAddressResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListShippingAddressResponseWithDefaults() *ListShippingAddressResponse {
	this := ListShippingAddressResponse{}
	return &this
}

// GetShippingAddresses returns the ShippingAddresses field value if set, zero value otherwise.
func (o *ListShippingAddressResponse) GetShippingAddresses() []GetShippingAddressResponse {
	if o == nil || o.ShippingAddresses == nil {
		var ret []GetShippingAddressResponse
		return ret
	}
	return o.ShippingAddresses
}

// GetShippingAddressesOk returns a tuple with the ShippingAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListShippingAddressResponse) GetShippingAddressesOk() ([]GetShippingAddressResponse, bool) {
	if o == nil || o.ShippingAddresses == nil {
		return nil, false
	}
	return o.ShippingAddresses, true
}

// HasShippingAddresses returns a boolean if a field has been set.
func (o *ListShippingAddressResponse) HasShippingAddresses() bool {
	if o != nil && o.ShippingAddresses != nil {
		return true
	}

	return false
}

// SetShippingAddresses gets a reference to the given []GetShippingAddressResponse and assigns it to the ShippingAddresses field.
func (o *ListShippingAddressResponse) SetShippingAddresses(v []GetShippingAddressResponse) {
	o.ShippingAddresses = v
}

func (o ListShippingAddressResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ShippingAddresses != nil {
		toSerialize["shippingAddresses"] = o.ShippingAddresses
	}
	return json.Marshal(toSerialize)
}

type NullableListShippingAddressResponse struct {
	value *ListShippingAddressResponse
	isSet bool
}

func (v NullableListShippingAddressResponse) Get() *ListShippingAddressResponse {
	return v.value
}

func (v *NullableListShippingAddressResponse) Set(val *ListShippingAddressResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListShippingAddressResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListShippingAddressResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListShippingAddressResponse(val *ListShippingAddressResponse) *NullableListShippingAddressResponse {
	return &NullableListShippingAddressResponse{value: val, isSet: true}
}

func (v NullableListShippingAddressResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListShippingAddressResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


