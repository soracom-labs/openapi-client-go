/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// MappingEntries struct for MappingEntries
type MappingEntries struct {
	MappingEntries []GlobalSimAppletPLMNRecord `json:"mappingEntries,omitempty"`
}

// NewMappingEntries instantiates a new MappingEntries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMappingEntries() *MappingEntries {
	this := MappingEntries{}
	return &this
}

// NewMappingEntriesWithDefaults instantiates a new MappingEntries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMappingEntriesWithDefaults() *MappingEntries {
	this := MappingEntries{}
	return &this
}

// GetMappingEntries returns the MappingEntries field value if set, zero value otherwise.
func (o *MappingEntries) GetMappingEntries() []GlobalSimAppletPLMNRecord {
	if o == nil || o.MappingEntries == nil {
		var ret []GlobalSimAppletPLMNRecord
		return ret
	}
	return o.MappingEntries
}

// GetMappingEntriesOk returns a tuple with the MappingEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MappingEntries) GetMappingEntriesOk() ([]GlobalSimAppletPLMNRecord, bool) {
	if o == nil || o.MappingEntries == nil {
		return nil, false
	}
	return o.MappingEntries, true
}

// HasMappingEntries returns a boolean if a field has been set.
func (o *MappingEntries) HasMappingEntries() bool {
	if o != nil && o.MappingEntries != nil {
		return true
	}

	return false
}

// SetMappingEntries gets a reference to the given []GlobalSimAppletPLMNRecord and assigns it to the MappingEntries field.
func (o *MappingEntries) SetMappingEntries(v []GlobalSimAppletPLMNRecord) {
	o.MappingEntries = v
}

func (o MappingEntries) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MappingEntries != nil {
		toSerialize["mappingEntries"] = o.MappingEntries
	}
	return json.Marshal(toSerialize)
}

type NullableMappingEntries struct {
	value *MappingEntries
	isSet bool
}

func (v NullableMappingEntries) Get() *MappingEntries {
	return v.value
}

func (v *NullableMappingEntries) Set(val *MappingEntries) {
	v.value = val
	v.isSet = true
}

func (v NullableMappingEntries) IsSet() bool {
	return v.isSet
}

func (v *NullableMappingEntries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMappingEntries(val *MappingEntries) *NullableMappingEntries {
	return &NullableMappingEntries{value: val, isSet: true}
}

func (v NullableMappingEntries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMappingEntries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


