/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// MonthlyBill struct for MonthlyBill
type MonthlyBill struct {
	// 金額
	Amount *int64 `json:"amount,omitempty"`
	// 直近の課金ステータス
	PaymentStatus *string `json:"paymentStatus,omitempty"`
	// 課金詳細取得用のID
	PaymentTransactionId *string `json:"paymentTransactionId,omitempty"`
	// 年月
	YearMonth *string `json:"yearMonth,omitempty"`
}

// NewMonthlyBill instantiates a new MonthlyBill object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonthlyBill() *MonthlyBill {
	this := MonthlyBill{}
	return &this
}

// NewMonthlyBillWithDefaults instantiates a new MonthlyBill object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonthlyBillWithDefaults() *MonthlyBill {
	this := MonthlyBill{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *MonthlyBill) GetAmount() int64 {
	if o == nil || o.Amount == nil {
		var ret int64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyBill) GetAmountOk() (*int64, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *MonthlyBill) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int64 and assigns it to the Amount field.
func (o *MonthlyBill) SetAmount(v int64) {
	o.Amount = &v
}

// GetPaymentStatus returns the PaymentStatus field value if set, zero value otherwise.
func (o *MonthlyBill) GetPaymentStatus() string {
	if o == nil || o.PaymentStatus == nil {
		var ret string
		return ret
	}
	return *o.PaymentStatus
}

// GetPaymentStatusOk returns a tuple with the PaymentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyBill) GetPaymentStatusOk() (*string, bool) {
	if o == nil || o.PaymentStatus == nil {
		return nil, false
	}
	return o.PaymentStatus, true
}

// HasPaymentStatus returns a boolean if a field has been set.
func (o *MonthlyBill) HasPaymentStatus() bool {
	if o != nil && o.PaymentStatus != nil {
		return true
	}

	return false
}

// SetPaymentStatus gets a reference to the given string and assigns it to the PaymentStatus field.
func (o *MonthlyBill) SetPaymentStatus(v string) {
	o.PaymentStatus = &v
}

// GetPaymentTransactionId returns the PaymentTransactionId field value if set, zero value otherwise.
func (o *MonthlyBill) GetPaymentTransactionId() string {
	if o == nil || o.PaymentTransactionId == nil {
		var ret string
		return ret
	}
	return *o.PaymentTransactionId
}

// GetPaymentTransactionIdOk returns a tuple with the PaymentTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyBill) GetPaymentTransactionIdOk() (*string, bool) {
	if o == nil || o.PaymentTransactionId == nil {
		return nil, false
	}
	return o.PaymentTransactionId, true
}

// HasPaymentTransactionId returns a boolean if a field has been set.
func (o *MonthlyBill) HasPaymentTransactionId() bool {
	if o != nil && o.PaymentTransactionId != nil {
		return true
	}

	return false
}

// SetPaymentTransactionId gets a reference to the given string and assigns it to the PaymentTransactionId field.
func (o *MonthlyBill) SetPaymentTransactionId(v string) {
	o.PaymentTransactionId = &v
}

// GetYearMonth returns the YearMonth field value if set, zero value otherwise.
func (o *MonthlyBill) GetYearMonth() string {
	if o == nil || o.YearMonth == nil {
		var ret string
		return ret
	}
	return *o.YearMonth
}

// GetYearMonthOk returns a tuple with the YearMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyBill) GetYearMonthOk() (*string, bool) {
	if o == nil || o.YearMonth == nil {
		return nil, false
	}
	return o.YearMonth, true
}

// HasYearMonth returns a boolean if a field has been set.
func (o *MonthlyBill) HasYearMonth() bool {
	if o != nil && o.YearMonth != nil {
		return true
	}

	return false
}

// SetYearMonth gets a reference to the given string and assigns it to the YearMonth field.
func (o *MonthlyBill) SetYearMonth(v string) {
	o.YearMonth = &v
}

func (o MonthlyBill) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.PaymentStatus != nil {
		toSerialize["paymentStatus"] = o.PaymentStatus
	}
	if o.PaymentTransactionId != nil {
		toSerialize["paymentTransactionId"] = o.PaymentTransactionId
	}
	if o.YearMonth != nil {
		toSerialize["yearMonth"] = o.YearMonth
	}
	return json.Marshal(toSerialize)
}

type NullableMonthlyBill struct {
	value *MonthlyBill
	isSet bool
}

func (v NullableMonthlyBill) Get() *MonthlyBill {
	return v.value
}

func (v *NullableMonthlyBill) Set(val *MonthlyBill) {
	v.value = val
	v.isSet = true
}

func (v NullableMonthlyBill) IsSet() bool {
	return v.isSet
}

func (v *NullableMonthlyBill) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonthlyBill(val *MonthlyBill) *NullableMonthlyBill {
	return &NullableMonthlyBill{value: val, isSet: true}
}

func (v NullableMonthlyBill) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonthlyBill) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


