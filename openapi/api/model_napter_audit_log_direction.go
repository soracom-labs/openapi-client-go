/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// NapterAuditLogDirection struct for NapterAuditLogDirection
type NapterAuditLogDirection struct {
	DestinationIPAddress *string `json:"destinationIPAddress,omitempty"`
	DestinationPort *int64 `json:"destinationPort,omitempty"`
	SourceIPAddress *string `json:"sourceIPAddress,omitempty"`
	SourcePort *int64 `json:"sourcePort,omitempty"`
}

// NewNapterAuditLogDirection instantiates a new NapterAuditLogDirection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNapterAuditLogDirection() *NapterAuditLogDirection {
	this := NapterAuditLogDirection{}
	return &this
}

// NewNapterAuditLogDirectionWithDefaults instantiates a new NapterAuditLogDirection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNapterAuditLogDirectionWithDefaults() *NapterAuditLogDirection {
	this := NapterAuditLogDirection{}
	return &this
}

// GetDestinationIPAddress returns the DestinationIPAddress field value if set, zero value otherwise.
func (o *NapterAuditLogDirection) GetDestinationIPAddress() string {
	if o == nil || o.DestinationIPAddress == nil {
		var ret string
		return ret
	}
	return *o.DestinationIPAddress
}

// GetDestinationIPAddressOk returns a tuple with the DestinationIPAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NapterAuditLogDirection) GetDestinationIPAddressOk() (*string, bool) {
	if o == nil || o.DestinationIPAddress == nil {
		return nil, false
	}
	return o.DestinationIPAddress, true
}

// HasDestinationIPAddress returns a boolean if a field has been set.
func (o *NapterAuditLogDirection) HasDestinationIPAddress() bool {
	if o != nil && o.DestinationIPAddress != nil {
		return true
	}

	return false
}

// SetDestinationIPAddress gets a reference to the given string and assigns it to the DestinationIPAddress field.
func (o *NapterAuditLogDirection) SetDestinationIPAddress(v string) {
	o.DestinationIPAddress = &v
}

// GetDestinationPort returns the DestinationPort field value if set, zero value otherwise.
func (o *NapterAuditLogDirection) GetDestinationPort() int64 {
	if o == nil || o.DestinationPort == nil {
		var ret int64
		return ret
	}
	return *o.DestinationPort
}

// GetDestinationPortOk returns a tuple with the DestinationPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NapterAuditLogDirection) GetDestinationPortOk() (*int64, bool) {
	if o == nil || o.DestinationPort == nil {
		return nil, false
	}
	return o.DestinationPort, true
}

// HasDestinationPort returns a boolean if a field has been set.
func (o *NapterAuditLogDirection) HasDestinationPort() bool {
	if o != nil && o.DestinationPort != nil {
		return true
	}

	return false
}

// SetDestinationPort gets a reference to the given int64 and assigns it to the DestinationPort field.
func (o *NapterAuditLogDirection) SetDestinationPort(v int64) {
	o.DestinationPort = &v
}

// GetSourceIPAddress returns the SourceIPAddress field value if set, zero value otherwise.
func (o *NapterAuditLogDirection) GetSourceIPAddress() string {
	if o == nil || o.SourceIPAddress == nil {
		var ret string
		return ret
	}
	return *o.SourceIPAddress
}

// GetSourceIPAddressOk returns a tuple with the SourceIPAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NapterAuditLogDirection) GetSourceIPAddressOk() (*string, bool) {
	if o == nil || o.SourceIPAddress == nil {
		return nil, false
	}
	return o.SourceIPAddress, true
}

// HasSourceIPAddress returns a boolean if a field has been set.
func (o *NapterAuditLogDirection) HasSourceIPAddress() bool {
	if o != nil && o.SourceIPAddress != nil {
		return true
	}

	return false
}

// SetSourceIPAddress gets a reference to the given string and assigns it to the SourceIPAddress field.
func (o *NapterAuditLogDirection) SetSourceIPAddress(v string) {
	o.SourceIPAddress = &v
}

// GetSourcePort returns the SourcePort field value if set, zero value otherwise.
func (o *NapterAuditLogDirection) GetSourcePort() int64 {
	if o == nil || o.SourcePort == nil {
		var ret int64
		return ret
	}
	return *o.SourcePort
}

// GetSourcePortOk returns a tuple with the SourcePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NapterAuditLogDirection) GetSourcePortOk() (*int64, bool) {
	if o == nil || o.SourcePort == nil {
		return nil, false
	}
	return o.SourcePort, true
}

// HasSourcePort returns a boolean if a field has been set.
func (o *NapterAuditLogDirection) HasSourcePort() bool {
	if o != nil && o.SourcePort != nil {
		return true
	}

	return false
}

// SetSourcePort gets a reference to the given int64 and assigns it to the SourcePort field.
func (o *NapterAuditLogDirection) SetSourcePort(v int64) {
	o.SourcePort = &v
}

func (o NapterAuditLogDirection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DestinationIPAddress != nil {
		toSerialize["destinationIPAddress"] = o.DestinationIPAddress
	}
	if o.DestinationPort != nil {
		toSerialize["destinationPort"] = o.DestinationPort
	}
	if o.SourceIPAddress != nil {
		toSerialize["sourceIPAddress"] = o.SourceIPAddress
	}
	if o.SourcePort != nil {
		toSerialize["sourcePort"] = o.SourcePort
	}
	return json.Marshal(toSerialize)
}

type NullableNapterAuditLogDirection struct {
	value *NapterAuditLogDirection
	isSet bool
}

func (v NullableNapterAuditLogDirection) Get() *NapterAuditLogDirection {
	return v.value
}

func (v *NullableNapterAuditLogDirection) Set(val *NapterAuditLogDirection) {
	v.value = val
	v.isSet = true
}

func (v NullableNapterAuditLogDirection) IsSet() bool {
	return v.isSet
}

func (v *NullableNapterAuditLogDirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNapterAuditLogDirection(val *NapterAuditLogDirection) *NullableNapterAuditLogDirection {
	return &NullableNapterAuditLogDirection{value: val, isSet: true}
}

func (v NullableNapterAuditLogDirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNapterAuditLogDirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


