/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// NapterAuditLogEntry struct for NapterAuditLogEntry
type NapterAuditLogEntry struct {
	ConnectionId *string `json:"connectionId,omitempty"`
	CreatedAt *int64 `json:"createdAt,omitempty"`
	Direction *NapterAuditLogDirection `json:"direction,omitempty"`
	Imsi *string `json:"imsi,omitempty"`
	IsTLS *bool `json:"isTLS,omitempty"`
	OperatorId *string `json:"operatorId,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewNapterAuditLogEntry instantiates a new NapterAuditLogEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNapterAuditLogEntry() *NapterAuditLogEntry {
	this := NapterAuditLogEntry{}
	return &this
}

// NewNapterAuditLogEntryWithDefaults instantiates a new NapterAuditLogEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNapterAuditLogEntryWithDefaults() *NapterAuditLogEntry {
	this := NapterAuditLogEntry{}
	return &this
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *NapterAuditLogEntry) GetConnectionId() string {
	if o == nil || o.ConnectionId == nil {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NapterAuditLogEntry) GetConnectionIdOk() (*string, bool) {
	if o == nil || o.ConnectionId == nil {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *NapterAuditLogEntry) HasConnectionId() bool {
	if o != nil && o.ConnectionId != nil {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *NapterAuditLogEntry) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *NapterAuditLogEntry) GetCreatedAt() int64 {
	if o == nil || o.CreatedAt == nil {
		var ret int64
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NapterAuditLogEntry) GetCreatedAtOk() (*int64, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *NapterAuditLogEntry) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int64 and assigns it to the CreatedAt field.
func (o *NapterAuditLogEntry) SetCreatedAt(v int64) {
	o.CreatedAt = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *NapterAuditLogEntry) GetDirection() NapterAuditLogDirection {
	if o == nil || o.Direction == nil {
		var ret NapterAuditLogDirection
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NapterAuditLogEntry) GetDirectionOk() (*NapterAuditLogDirection, bool) {
	if o == nil || o.Direction == nil {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *NapterAuditLogEntry) HasDirection() bool {
	if o != nil && o.Direction != nil {
		return true
	}

	return false
}

// SetDirection gets a reference to the given NapterAuditLogDirection and assigns it to the Direction field.
func (o *NapterAuditLogEntry) SetDirection(v NapterAuditLogDirection) {
	o.Direction = &v
}

// GetImsi returns the Imsi field value if set, zero value otherwise.
func (o *NapterAuditLogEntry) GetImsi() string {
	if o == nil || o.Imsi == nil {
		var ret string
		return ret
	}
	return *o.Imsi
}

// GetImsiOk returns a tuple with the Imsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NapterAuditLogEntry) GetImsiOk() (*string, bool) {
	if o == nil || o.Imsi == nil {
		return nil, false
	}
	return o.Imsi, true
}

// HasImsi returns a boolean if a field has been set.
func (o *NapterAuditLogEntry) HasImsi() bool {
	if o != nil && o.Imsi != nil {
		return true
	}

	return false
}

// SetImsi gets a reference to the given string and assigns it to the Imsi field.
func (o *NapterAuditLogEntry) SetImsi(v string) {
	o.Imsi = &v
}

// GetIsTLS returns the IsTLS field value if set, zero value otherwise.
func (o *NapterAuditLogEntry) GetIsTLS() bool {
	if o == nil || o.IsTLS == nil {
		var ret bool
		return ret
	}
	return *o.IsTLS
}

// GetIsTLSOk returns a tuple with the IsTLS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NapterAuditLogEntry) GetIsTLSOk() (*bool, bool) {
	if o == nil || o.IsTLS == nil {
		return nil, false
	}
	return o.IsTLS, true
}

// HasIsTLS returns a boolean if a field has been set.
func (o *NapterAuditLogEntry) HasIsTLS() bool {
	if o != nil && o.IsTLS != nil {
		return true
	}

	return false
}

// SetIsTLS gets a reference to the given bool and assigns it to the IsTLS field.
func (o *NapterAuditLogEntry) SetIsTLS(v bool) {
	o.IsTLS = &v
}

// GetOperatorId returns the OperatorId field value if set, zero value otherwise.
func (o *NapterAuditLogEntry) GetOperatorId() string {
	if o == nil || o.OperatorId == nil {
		var ret string
		return ret
	}
	return *o.OperatorId
}

// GetOperatorIdOk returns a tuple with the OperatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NapterAuditLogEntry) GetOperatorIdOk() (*string, bool) {
	if o == nil || o.OperatorId == nil {
		return nil, false
	}
	return o.OperatorId, true
}

// HasOperatorId returns a boolean if a field has been set.
func (o *NapterAuditLogEntry) HasOperatorId() bool {
	if o != nil && o.OperatorId != nil {
		return true
	}

	return false
}

// SetOperatorId gets a reference to the given string and assigns it to the OperatorId field.
func (o *NapterAuditLogEntry) SetOperatorId(v string) {
	o.OperatorId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *NapterAuditLogEntry) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NapterAuditLogEntry) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *NapterAuditLogEntry) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *NapterAuditLogEntry) SetType(v string) {
	o.Type = &v
}

func (o NapterAuditLogEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectionId != nil {
		toSerialize["connectionId"] = o.ConnectionId
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.Direction != nil {
		toSerialize["direction"] = o.Direction
	}
	if o.Imsi != nil {
		toSerialize["imsi"] = o.Imsi
	}
	if o.IsTLS != nil {
		toSerialize["isTLS"] = o.IsTLS
	}
	if o.OperatorId != nil {
		toSerialize["operatorId"] = o.OperatorId
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableNapterAuditLogEntry struct {
	value *NapterAuditLogEntry
	isSet bool
}

func (v NullableNapterAuditLogEntry) Get() *NapterAuditLogEntry {
	return v.value
}

func (v *NullableNapterAuditLogEntry) Set(val *NapterAuditLogEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableNapterAuditLogEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableNapterAuditLogEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNapterAuditLogEntry(val *NapterAuditLogEntry) *NullableNapterAuditLogEntry {
	return &NullableNapterAuditLogEntry{value: val, isSet: true}
}

func (v NullableNapterAuditLogEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNapterAuditLogEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


