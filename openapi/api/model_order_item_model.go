/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// OrderItemModel struct for OrderItemModel
type OrderItemModel struct {
	// Product code
	ProductCode *string `json:"productCode,omitempty"`
	// Quantity
	Quantity *int32 `json:"quantity,omitempty"`
}

// NewOrderItemModel instantiates a new OrderItemModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderItemModel() *OrderItemModel {
	this := OrderItemModel{}
	return &this
}

// NewOrderItemModelWithDefaults instantiates a new OrderItemModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderItemModelWithDefaults() *OrderItemModel {
	this := OrderItemModel{}
	return &this
}

// GetProductCode returns the ProductCode field value if set, zero value otherwise.
func (o *OrderItemModel) GetProductCode() string {
	if o == nil || o.ProductCode == nil {
		var ret string
		return ret
	}
	return *o.ProductCode
}

// GetProductCodeOk returns a tuple with the ProductCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItemModel) GetProductCodeOk() (*string, bool) {
	if o == nil || o.ProductCode == nil {
		return nil, false
	}
	return o.ProductCode, true
}

// HasProductCode returns a boolean if a field has been set.
func (o *OrderItemModel) HasProductCode() bool {
	if o != nil && o.ProductCode != nil {
		return true
	}

	return false
}

// SetProductCode gets a reference to the given string and assigns it to the ProductCode field.
func (o *OrderItemModel) SetProductCode(v string) {
	o.ProductCode = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *OrderItemModel) GetQuantity() int32 {
	if o == nil || o.Quantity == nil {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItemModel) GetQuantityOk() (*int32, bool) {
	if o == nil || o.Quantity == nil {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *OrderItemModel) HasQuantity() bool {
	if o != nil && o.Quantity != nil {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *OrderItemModel) SetQuantity(v int32) {
	o.Quantity = &v
}

func (o OrderItemModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProductCode != nil {
		toSerialize["productCode"] = o.ProductCode
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	return json.Marshal(toSerialize)
}

type NullableOrderItemModel struct {
	value *OrderItemModel
	isSet bool
}

func (v NullableOrderItemModel) Get() *OrderItemModel {
	return v.value
}

func (v *NullableOrderItemModel) Set(val *OrderItemModel) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderItemModel) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderItemModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderItemModel(val *OrderItemModel) *NullableOrderItemModel {
	return &NullableOrderItemModel{value: val, isSet: true}
}

func (v NullableOrderItemModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderItemModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


