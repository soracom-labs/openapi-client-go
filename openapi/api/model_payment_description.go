/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PaymentDescription Payment description
type PaymentDescription struct {
	Description *string `json:"description,omitempty"`
	ItemList []string `json:"itemList,omitempty"`
}

// NewPaymentDescription instantiates a new PaymentDescription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentDescription() *PaymentDescription {
	this := PaymentDescription{}
	return &this
}

// NewPaymentDescriptionWithDefaults instantiates a new PaymentDescription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentDescriptionWithDefaults() *PaymentDescription {
	this := PaymentDescription{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PaymentDescription) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDescription) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PaymentDescription) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PaymentDescription) SetDescription(v string) {
	o.Description = &v
}

// GetItemList returns the ItemList field value if set, zero value otherwise.
func (o *PaymentDescription) GetItemList() []string {
	if o == nil || o.ItemList == nil {
		var ret []string
		return ret
	}
	return o.ItemList
}

// GetItemListOk returns a tuple with the ItemList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDescription) GetItemListOk() ([]string, bool) {
	if o == nil || o.ItemList == nil {
		return nil, false
	}
	return o.ItemList, true
}

// HasItemList returns a boolean if a field has been set.
func (o *PaymentDescription) HasItemList() bool {
	if o != nil && o.ItemList != nil {
		return true
	}

	return false
}

// SetItemList gets a reference to the given []string and assigns it to the ItemList field.
func (o *PaymentDescription) SetItemList(v []string) {
	o.ItemList = v
}

func (o PaymentDescription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ItemList != nil {
		toSerialize["itemList"] = o.ItemList
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentDescription struct {
	value *PaymentDescription
	isSet bool
}

func (v NullablePaymentDescription) Get() *PaymentDescription {
	return v.value
}

func (v *NullablePaymentDescription) Set(val *PaymentDescription) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentDescription) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentDescription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentDescription(val *PaymentDescription) *NullablePaymentDescription {
	return &NullablePaymentDescription{value: val, isSet: true}
}

func (v NullablePaymentDescription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentDescription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


