/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PaymentStatementResponse struct for PaymentStatementResponse
type PaymentStatementResponse struct {
	// Amount
	Amount *float64 `json:"amount,omitempty"`
	// Payment date time
	PaymentDateTime *int64 `json:"paymentDateTime,omitempty"`
	// Payment instrument
	PaymentInstrument *string `json:"paymentInstrument,omitempty"`
	// Payment method
	PaymentMethod *string `json:"paymentMethod,omitempty"`
	// Payment statement ID
	PaymentStatementId *string `json:"paymentStatementId,omitempty"`
	// Payment statement information
	PaymentStatementInfo *string `json:"paymentStatementInfo,omitempty"`
}

// NewPaymentStatementResponse instantiates a new PaymentStatementResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentStatementResponse() *PaymentStatementResponse {
	this := PaymentStatementResponse{}
	return &this
}

// NewPaymentStatementResponseWithDefaults instantiates a new PaymentStatementResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentStatementResponseWithDefaults() *PaymentStatementResponse {
	this := PaymentStatementResponse{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *PaymentStatementResponse) GetAmount() float64 {
	if o == nil || o.Amount == nil {
		var ret float64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentStatementResponse) GetAmountOk() (*float64, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *PaymentStatementResponse) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float64 and assigns it to the Amount field.
func (o *PaymentStatementResponse) SetAmount(v float64) {
	o.Amount = &v
}

// GetPaymentDateTime returns the PaymentDateTime field value if set, zero value otherwise.
func (o *PaymentStatementResponse) GetPaymentDateTime() int64 {
	if o == nil || o.PaymentDateTime == nil {
		var ret int64
		return ret
	}
	return *o.PaymentDateTime
}

// GetPaymentDateTimeOk returns a tuple with the PaymentDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentStatementResponse) GetPaymentDateTimeOk() (*int64, bool) {
	if o == nil || o.PaymentDateTime == nil {
		return nil, false
	}
	return o.PaymentDateTime, true
}

// HasPaymentDateTime returns a boolean if a field has been set.
func (o *PaymentStatementResponse) HasPaymentDateTime() bool {
	if o != nil && o.PaymentDateTime != nil {
		return true
	}

	return false
}

// SetPaymentDateTime gets a reference to the given int64 and assigns it to the PaymentDateTime field.
func (o *PaymentStatementResponse) SetPaymentDateTime(v int64) {
	o.PaymentDateTime = &v
}

// GetPaymentInstrument returns the PaymentInstrument field value if set, zero value otherwise.
func (o *PaymentStatementResponse) GetPaymentInstrument() string {
	if o == nil || o.PaymentInstrument == nil {
		var ret string
		return ret
	}
	return *o.PaymentInstrument
}

// GetPaymentInstrumentOk returns a tuple with the PaymentInstrument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentStatementResponse) GetPaymentInstrumentOk() (*string, bool) {
	if o == nil || o.PaymentInstrument == nil {
		return nil, false
	}
	return o.PaymentInstrument, true
}

// HasPaymentInstrument returns a boolean if a field has been set.
func (o *PaymentStatementResponse) HasPaymentInstrument() bool {
	if o != nil && o.PaymentInstrument != nil {
		return true
	}

	return false
}

// SetPaymentInstrument gets a reference to the given string and assigns it to the PaymentInstrument field.
func (o *PaymentStatementResponse) SetPaymentInstrument(v string) {
	o.PaymentInstrument = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *PaymentStatementResponse) GetPaymentMethod() string {
	if o == nil || o.PaymentMethod == nil {
		var ret string
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentStatementResponse) GetPaymentMethodOk() (*string, bool) {
	if o == nil || o.PaymentMethod == nil {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *PaymentStatementResponse) HasPaymentMethod() bool {
	if o != nil && o.PaymentMethod != nil {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given string and assigns it to the PaymentMethod field.
func (o *PaymentStatementResponse) SetPaymentMethod(v string) {
	o.PaymentMethod = &v
}

// GetPaymentStatementId returns the PaymentStatementId field value if set, zero value otherwise.
func (o *PaymentStatementResponse) GetPaymentStatementId() string {
	if o == nil || o.PaymentStatementId == nil {
		var ret string
		return ret
	}
	return *o.PaymentStatementId
}

// GetPaymentStatementIdOk returns a tuple with the PaymentStatementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentStatementResponse) GetPaymentStatementIdOk() (*string, bool) {
	if o == nil || o.PaymentStatementId == nil {
		return nil, false
	}
	return o.PaymentStatementId, true
}

// HasPaymentStatementId returns a boolean if a field has been set.
func (o *PaymentStatementResponse) HasPaymentStatementId() bool {
	if o != nil && o.PaymentStatementId != nil {
		return true
	}

	return false
}

// SetPaymentStatementId gets a reference to the given string and assigns it to the PaymentStatementId field.
func (o *PaymentStatementResponse) SetPaymentStatementId(v string) {
	o.PaymentStatementId = &v
}

// GetPaymentStatementInfo returns the PaymentStatementInfo field value if set, zero value otherwise.
func (o *PaymentStatementResponse) GetPaymentStatementInfo() string {
	if o == nil || o.PaymentStatementInfo == nil {
		var ret string
		return ret
	}
	return *o.PaymentStatementInfo
}

// GetPaymentStatementInfoOk returns a tuple with the PaymentStatementInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentStatementResponse) GetPaymentStatementInfoOk() (*string, bool) {
	if o == nil || o.PaymentStatementInfo == nil {
		return nil, false
	}
	return o.PaymentStatementInfo, true
}

// HasPaymentStatementInfo returns a boolean if a field has been set.
func (o *PaymentStatementResponse) HasPaymentStatementInfo() bool {
	if o != nil && o.PaymentStatementInfo != nil {
		return true
	}

	return false
}

// SetPaymentStatementInfo gets a reference to the given string and assigns it to the PaymentStatementInfo field.
func (o *PaymentStatementResponse) SetPaymentStatementInfo(v string) {
	o.PaymentStatementInfo = &v
}

func (o PaymentStatementResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.PaymentDateTime != nil {
		toSerialize["paymentDateTime"] = o.PaymentDateTime
	}
	if o.PaymentInstrument != nil {
		toSerialize["paymentInstrument"] = o.PaymentInstrument
	}
	if o.PaymentMethod != nil {
		toSerialize["paymentMethod"] = o.PaymentMethod
	}
	if o.PaymentStatementId != nil {
		toSerialize["paymentStatementId"] = o.PaymentStatementId
	}
	if o.PaymentStatementInfo != nil {
		toSerialize["paymentStatementInfo"] = o.PaymentStatementInfo
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentStatementResponse struct {
	value *PaymentStatementResponse
	isSet bool
}

func (v NullablePaymentStatementResponse) Get() *PaymentStatementResponse {
	return v.value
}

func (v *NullablePaymentStatementResponse) Set(val *PaymentStatementResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentStatementResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentStatementResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentStatementResponse(val *PaymentStatementResponse) *NullablePaymentStatementResponse {
	return &NullablePaymentStatementResponse{value: val, isSet: true}
}

func (v NullablePaymentStatementResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentStatementResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


