/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PreviousSessionStatus struct for PreviousSessionStatus
type PreviousSessionStatus struct {
	Cell *Cell `json:"cell,omitempty"`
	// The time when the previous session was created.
	CreatedTime *int64 `json:"createdTime,omitempty"`
	// The time when the previous session was deleted.
	DeletedTime *int64 `json:"deletedTime,omitempty"`
	// Array of IP address of the DNS servers.
	DnsServers []string `json:"dnsServers,omitempty"`
	GatewayPrivateIpAddress *string `json:"gatewayPrivateIpAddress,omitempty"`
	GatewayPublicIpAddress *string `json:"gatewayPublicIpAddress,omitempty"`
	// The IMEI of the device using the SIM.
	Imei *string `json:"imei,omitempty"`
	// The IP address of the device.
	UeIpAddress *string `json:"ueIpAddress,omitempty"`
	// The Virtual Private Gateway IP address configured.
	VpgId *string `json:"vpgId,omitempty"`
}

// NewPreviousSessionStatus instantiates a new PreviousSessionStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreviousSessionStatus() *PreviousSessionStatus {
	this := PreviousSessionStatus{}
	return &this
}

// NewPreviousSessionStatusWithDefaults instantiates a new PreviousSessionStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreviousSessionStatusWithDefaults() *PreviousSessionStatus {
	this := PreviousSessionStatus{}
	return &this
}

// GetCell returns the Cell field value if set, zero value otherwise.
func (o *PreviousSessionStatus) GetCell() Cell {
	if o == nil || o.Cell == nil {
		var ret Cell
		return ret
	}
	return *o.Cell
}

// GetCellOk returns a tuple with the Cell field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviousSessionStatus) GetCellOk() (*Cell, bool) {
	if o == nil || o.Cell == nil {
		return nil, false
	}
	return o.Cell, true
}

// HasCell returns a boolean if a field has been set.
func (o *PreviousSessionStatus) HasCell() bool {
	if o != nil && o.Cell != nil {
		return true
	}

	return false
}

// SetCell gets a reference to the given Cell and assigns it to the Cell field.
func (o *PreviousSessionStatus) SetCell(v Cell) {
	o.Cell = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *PreviousSessionStatus) GetCreatedTime() int64 {
	if o == nil || o.CreatedTime == nil {
		var ret int64
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviousSessionStatus) GetCreatedTimeOk() (*int64, bool) {
	if o == nil || o.CreatedTime == nil {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *PreviousSessionStatus) HasCreatedTime() bool {
	if o != nil && o.CreatedTime != nil {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given int64 and assigns it to the CreatedTime field.
func (o *PreviousSessionStatus) SetCreatedTime(v int64) {
	o.CreatedTime = &v
}

// GetDeletedTime returns the DeletedTime field value if set, zero value otherwise.
func (o *PreviousSessionStatus) GetDeletedTime() int64 {
	if o == nil || o.DeletedTime == nil {
		var ret int64
		return ret
	}
	return *o.DeletedTime
}

// GetDeletedTimeOk returns a tuple with the DeletedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviousSessionStatus) GetDeletedTimeOk() (*int64, bool) {
	if o == nil || o.DeletedTime == nil {
		return nil, false
	}
	return o.DeletedTime, true
}

// HasDeletedTime returns a boolean if a field has been set.
func (o *PreviousSessionStatus) HasDeletedTime() bool {
	if o != nil && o.DeletedTime != nil {
		return true
	}

	return false
}

// SetDeletedTime gets a reference to the given int64 and assigns it to the DeletedTime field.
func (o *PreviousSessionStatus) SetDeletedTime(v int64) {
	o.DeletedTime = &v
}

// GetDnsServers returns the DnsServers field value if set, zero value otherwise.
func (o *PreviousSessionStatus) GetDnsServers() []string {
	if o == nil || o.DnsServers == nil {
		var ret []string
		return ret
	}
	return o.DnsServers
}

// GetDnsServersOk returns a tuple with the DnsServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviousSessionStatus) GetDnsServersOk() ([]string, bool) {
	if o == nil || o.DnsServers == nil {
		return nil, false
	}
	return o.DnsServers, true
}

// HasDnsServers returns a boolean if a field has been set.
func (o *PreviousSessionStatus) HasDnsServers() bool {
	if o != nil && o.DnsServers != nil {
		return true
	}

	return false
}

// SetDnsServers gets a reference to the given []string and assigns it to the DnsServers field.
func (o *PreviousSessionStatus) SetDnsServers(v []string) {
	o.DnsServers = v
}

// GetGatewayPrivateIpAddress returns the GatewayPrivateIpAddress field value if set, zero value otherwise.
func (o *PreviousSessionStatus) GetGatewayPrivateIpAddress() string {
	if o == nil || o.GatewayPrivateIpAddress == nil {
		var ret string
		return ret
	}
	return *o.GatewayPrivateIpAddress
}

// GetGatewayPrivateIpAddressOk returns a tuple with the GatewayPrivateIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviousSessionStatus) GetGatewayPrivateIpAddressOk() (*string, bool) {
	if o == nil || o.GatewayPrivateIpAddress == nil {
		return nil, false
	}
	return o.GatewayPrivateIpAddress, true
}

// HasGatewayPrivateIpAddress returns a boolean if a field has been set.
func (o *PreviousSessionStatus) HasGatewayPrivateIpAddress() bool {
	if o != nil && o.GatewayPrivateIpAddress != nil {
		return true
	}

	return false
}

// SetGatewayPrivateIpAddress gets a reference to the given string and assigns it to the GatewayPrivateIpAddress field.
func (o *PreviousSessionStatus) SetGatewayPrivateIpAddress(v string) {
	o.GatewayPrivateIpAddress = &v
}

// GetGatewayPublicIpAddress returns the GatewayPublicIpAddress field value if set, zero value otherwise.
func (o *PreviousSessionStatus) GetGatewayPublicIpAddress() string {
	if o == nil || o.GatewayPublicIpAddress == nil {
		var ret string
		return ret
	}
	return *o.GatewayPublicIpAddress
}

// GetGatewayPublicIpAddressOk returns a tuple with the GatewayPublicIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviousSessionStatus) GetGatewayPublicIpAddressOk() (*string, bool) {
	if o == nil || o.GatewayPublicIpAddress == nil {
		return nil, false
	}
	return o.GatewayPublicIpAddress, true
}

// HasGatewayPublicIpAddress returns a boolean if a field has been set.
func (o *PreviousSessionStatus) HasGatewayPublicIpAddress() bool {
	if o != nil && o.GatewayPublicIpAddress != nil {
		return true
	}

	return false
}

// SetGatewayPublicIpAddress gets a reference to the given string and assigns it to the GatewayPublicIpAddress field.
func (o *PreviousSessionStatus) SetGatewayPublicIpAddress(v string) {
	o.GatewayPublicIpAddress = &v
}

// GetImei returns the Imei field value if set, zero value otherwise.
func (o *PreviousSessionStatus) GetImei() string {
	if o == nil || o.Imei == nil {
		var ret string
		return ret
	}
	return *o.Imei
}

// GetImeiOk returns a tuple with the Imei field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviousSessionStatus) GetImeiOk() (*string, bool) {
	if o == nil || o.Imei == nil {
		return nil, false
	}
	return o.Imei, true
}

// HasImei returns a boolean if a field has been set.
func (o *PreviousSessionStatus) HasImei() bool {
	if o != nil && o.Imei != nil {
		return true
	}

	return false
}

// SetImei gets a reference to the given string and assigns it to the Imei field.
func (o *PreviousSessionStatus) SetImei(v string) {
	o.Imei = &v
}

// GetUeIpAddress returns the UeIpAddress field value if set, zero value otherwise.
func (o *PreviousSessionStatus) GetUeIpAddress() string {
	if o == nil || o.UeIpAddress == nil {
		var ret string
		return ret
	}
	return *o.UeIpAddress
}

// GetUeIpAddressOk returns a tuple with the UeIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviousSessionStatus) GetUeIpAddressOk() (*string, bool) {
	if o == nil || o.UeIpAddress == nil {
		return nil, false
	}
	return o.UeIpAddress, true
}

// HasUeIpAddress returns a boolean if a field has been set.
func (o *PreviousSessionStatus) HasUeIpAddress() bool {
	if o != nil && o.UeIpAddress != nil {
		return true
	}

	return false
}

// SetUeIpAddress gets a reference to the given string and assigns it to the UeIpAddress field.
func (o *PreviousSessionStatus) SetUeIpAddress(v string) {
	o.UeIpAddress = &v
}

// GetVpgId returns the VpgId field value if set, zero value otherwise.
func (o *PreviousSessionStatus) GetVpgId() string {
	if o == nil || o.VpgId == nil {
		var ret string
		return ret
	}
	return *o.VpgId
}

// GetVpgIdOk returns a tuple with the VpgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviousSessionStatus) GetVpgIdOk() (*string, bool) {
	if o == nil || o.VpgId == nil {
		return nil, false
	}
	return o.VpgId, true
}

// HasVpgId returns a boolean if a field has been set.
func (o *PreviousSessionStatus) HasVpgId() bool {
	if o != nil && o.VpgId != nil {
		return true
	}

	return false
}

// SetVpgId gets a reference to the given string and assigns it to the VpgId field.
func (o *PreviousSessionStatus) SetVpgId(v string) {
	o.VpgId = &v
}

func (o PreviousSessionStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cell != nil {
		toSerialize["cell"] = o.Cell
	}
	if o.CreatedTime != nil {
		toSerialize["createdTime"] = o.CreatedTime
	}
	if o.DeletedTime != nil {
		toSerialize["deletedTime"] = o.DeletedTime
	}
	if o.DnsServers != nil {
		toSerialize["dnsServers"] = o.DnsServers
	}
	if o.GatewayPrivateIpAddress != nil {
		toSerialize["gatewayPrivateIpAddress"] = o.GatewayPrivateIpAddress
	}
	if o.GatewayPublicIpAddress != nil {
		toSerialize["gatewayPublicIpAddress"] = o.GatewayPublicIpAddress
	}
	if o.Imei != nil {
		toSerialize["imei"] = o.Imei
	}
	if o.UeIpAddress != nil {
		toSerialize["ueIpAddress"] = o.UeIpAddress
	}
	if o.VpgId != nil {
		toSerialize["vpgId"] = o.VpgId
	}
	return json.Marshal(toSerialize)
}

type NullablePreviousSessionStatus struct {
	value *PreviousSessionStatus
	isSet bool
}

func (v NullablePreviousSessionStatus) Get() *PreviousSessionStatus {
	return v.value
}

func (v *NullablePreviousSessionStatus) Set(val *PreviousSessionStatus) {
	v.value = val
	v.isSet = true
}

func (v NullablePreviousSessionStatus) IsSet() bool {
	return v.isSet
}

func (v *NullablePreviousSessionStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreviousSessionStatus(val *PreviousSessionStatus) *NullablePreviousSessionStatus {
	return &NullablePreviousSessionStatus{value: val, isSet: true}
}

func (v NullablePreviousSessionStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreviousSessionStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


