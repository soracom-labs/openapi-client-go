/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PutIpAddressMapEntryRequest struct for PutIpAddressMapEntryRequest
type PutIpAddressMapEntryRequest struct {
	IpAddress string `json:"ipAddress"`
	Key string `json:"key"`
}

// NewPutIpAddressMapEntryRequest instantiates a new PutIpAddressMapEntryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutIpAddressMapEntryRequest(ipAddress string, key string) *PutIpAddressMapEntryRequest {
	this := PutIpAddressMapEntryRequest{}
	this.IpAddress = ipAddress
	this.Key = key
	return &this
}

// NewPutIpAddressMapEntryRequestWithDefaults instantiates a new PutIpAddressMapEntryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutIpAddressMapEntryRequestWithDefaults() *PutIpAddressMapEntryRequest {
	this := PutIpAddressMapEntryRequest{}
	return &this
}

// GetIpAddress returns the IpAddress field value
func (o *PutIpAddressMapEntryRequest) GetIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value
// and a boolean to check if the value has been set.
func (o *PutIpAddressMapEntryRequest) GetIpAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IpAddress, true
}

// SetIpAddress sets field value
func (o *PutIpAddressMapEntryRequest) SetIpAddress(v string) {
	o.IpAddress = v
}

// GetKey returns the Key field value
func (o *PutIpAddressMapEntryRequest) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *PutIpAddressMapEntryRequest) GetKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *PutIpAddressMapEntryRequest) SetKey(v string) {
	o.Key = v
}

func (o PutIpAddressMapEntryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if true {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullablePutIpAddressMapEntryRequest struct {
	value *PutIpAddressMapEntryRequest
	isSet bool
}

func (v NullablePutIpAddressMapEntryRequest) Get() *PutIpAddressMapEntryRequest {
	return v.value
}

func (v *NullablePutIpAddressMapEntryRequest) Set(val *PutIpAddressMapEntryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutIpAddressMapEntryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutIpAddressMapEntryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutIpAddressMapEntryRequest(val *PutIpAddressMapEntryRequest) *NullablePutIpAddressMapEntryRequest {
	return &NullablePutIpAddressMapEntryRequest{value: val, isSet: true}
}

func (v NullablePutIpAddressMapEntryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutIpAddressMapEntryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


