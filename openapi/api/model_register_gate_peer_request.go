/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// RegisterGatePeerRequest struct for RegisterGatePeerRequest
type RegisterGatePeerRequest struct {
	InnerIpAddress *string `json:"innerIpAddress,omitempty"`
	OuterIpAddress string `json:"outerIpAddress"`
}

// NewRegisterGatePeerRequest instantiates a new RegisterGatePeerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterGatePeerRequest(outerIpAddress string) *RegisterGatePeerRequest {
	this := RegisterGatePeerRequest{}
	this.OuterIpAddress = outerIpAddress
	return &this
}

// NewRegisterGatePeerRequestWithDefaults instantiates a new RegisterGatePeerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterGatePeerRequestWithDefaults() *RegisterGatePeerRequest {
	this := RegisterGatePeerRequest{}
	return &this
}

// GetInnerIpAddress returns the InnerIpAddress field value if set, zero value otherwise.
func (o *RegisterGatePeerRequest) GetInnerIpAddress() string {
	if o == nil || o.InnerIpAddress == nil {
		var ret string
		return ret
	}
	return *o.InnerIpAddress
}

// GetInnerIpAddressOk returns a tuple with the InnerIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterGatePeerRequest) GetInnerIpAddressOk() (*string, bool) {
	if o == nil || o.InnerIpAddress == nil {
		return nil, false
	}
	return o.InnerIpAddress, true
}

// HasInnerIpAddress returns a boolean if a field has been set.
func (o *RegisterGatePeerRequest) HasInnerIpAddress() bool {
	if o != nil && o.InnerIpAddress != nil {
		return true
	}

	return false
}

// SetInnerIpAddress gets a reference to the given string and assigns it to the InnerIpAddress field.
func (o *RegisterGatePeerRequest) SetInnerIpAddress(v string) {
	o.InnerIpAddress = &v
}

// GetOuterIpAddress returns the OuterIpAddress field value
func (o *RegisterGatePeerRequest) GetOuterIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OuterIpAddress
}

// GetOuterIpAddressOk returns a tuple with the OuterIpAddress field value
// and a boolean to check if the value has been set.
func (o *RegisterGatePeerRequest) GetOuterIpAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OuterIpAddress, true
}

// SetOuterIpAddress sets field value
func (o *RegisterGatePeerRequest) SetOuterIpAddress(v string) {
	o.OuterIpAddress = v
}

func (o RegisterGatePeerRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InnerIpAddress != nil {
		toSerialize["innerIpAddress"] = o.InnerIpAddress
	}
	if true {
		toSerialize["outerIpAddress"] = o.OuterIpAddress
	}
	return json.Marshal(toSerialize)
}

type NullableRegisterGatePeerRequest struct {
	value *RegisterGatePeerRequest
	isSet bool
}

func (v NullableRegisterGatePeerRequest) Get() *RegisterGatePeerRequest {
	return v.value
}

func (v *NullableRegisterGatePeerRequest) Set(val *RegisterGatePeerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterGatePeerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterGatePeerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterGatePeerRequest(val *RegisterGatePeerRequest) *NullableRegisterGatePeerRequest {
	return &NullableRegisterGatePeerRequest{value: val, isSet: true}
}

func (v NullableRegisterGatePeerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterGatePeerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


