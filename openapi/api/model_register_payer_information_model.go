/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// RegisterPayerInformationModel struct for RegisterPayerInformationModel
type RegisterPayerInformationModel struct {
	// Company name
	CompanyName *string `json:"companyName,omitempty"`
	// Department
	Department *string `json:"department,omitempty"`
	// Full name
	FullName *string `json:"fullName,omitempty"`
}

// NewRegisterPayerInformationModel instantiates a new RegisterPayerInformationModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterPayerInformationModel() *RegisterPayerInformationModel {
	this := RegisterPayerInformationModel{}
	return &this
}

// NewRegisterPayerInformationModelWithDefaults instantiates a new RegisterPayerInformationModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterPayerInformationModelWithDefaults() *RegisterPayerInformationModel {
	this := RegisterPayerInformationModel{}
	return &this
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *RegisterPayerInformationModel) GetCompanyName() string {
	if o == nil || o.CompanyName == nil {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterPayerInformationModel) GetCompanyNameOk() (*string, bool) {
	if o == nil || o.CompanyName == nil {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *RegisterPayerInformationModel) HasCompanyName() bool {
	if o != nil && o.CompanyName != nil {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *RegisterPayerInformationModel) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetDepartment returns the Department field value if set, zero value otherwise.
func (o *RegisterPayerInformationModel) GetDepartment() string {
	if o == nil || o.Department == nil {
		var ret string
		return ret
	}
	return *o.Department
}

// GetDepartmentOk returns a tuple with the Department field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterPayerInformationModel) GetDepartmentOk() (*string, bool) {
	if o == nil || o.Department == nil {
		return nil, false
	}
	return o.Department, true
}

// HasDepartment returns a boolean if a field has been set.
func (o *RegisterPayerInformationModel) HasDepartment() bool {
	if o != nil && o.Department != nil {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given string and assigns it to the Department field.
func (o *RegisterPayerInformationModel) SetDepartment(v string) {
	o.Department = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *RegisterPayerInformationModel) GetFullName() string {
	if o == nil || o.FullName == nil {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterPayerInformationModel) GetFullNameOk() (*string, bool) {
	if o == nil || o.FullName == nil {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *RegisterPayerInformationModel) HasFullName() bool {
	if o != nil && o.FullName != nil {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *RegisterPayerInformationModel) SetFullName(v string) {
	o.FullName = &v
}

func (o RegisterPayerInformationModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CompanyName != nil {
		toSerialize["companyName"] = o.CompanyName
	}
	if o.Department != nil {
		toSerialize["department"] = o.Department
	}
	if o.FullName != nil {
		toSerialize["fullName"] = o.FullName
	}
	return json.Marshal(toSerialize)
}

type NullableRegisterPayerInformationModel struct {
	value *RegisterPayerInformationModel
	isSet bool
}

func (v NullableRegisterPayerInformationModel) Get() *RegisterPayerInformationModel {
	return v.value
}

func (v *NullableRegisterPayerInformationModel) Set(val *RegisterPayerInformationModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterPayerInformationModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterPayerInformationModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterPayerInformationModel(val *RegisterPayerInformationModel) *NullableRegisterPayerInformationModel {
	return &NullableRegisterPayerInformationModel{value: val, isSet: true}
}

func (v NullableRegisterPayerInformationModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterPayerInformationModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


