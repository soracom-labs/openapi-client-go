/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// RegisterSubscribersRequest struct for RegisterSubscribersRequest
type RegisterSubscribersRequest struct {
	GroupId *string `json:"groupId,omitempty"`
	RegistrationSecret string `json:"registrationSecret"`
	Tags []TagUpdateRequest `json:"tags,omitempty"`
}

// NewRegisterSubscribersRequest instantiates a new RegisterSubscribersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterSubscribersRequest(registrationSecret string) *RegisterSubscribersRequest {
	this := RegisterSubscribersRequest{}
	this.RegistrationSecret = registrationSecret
	return &this
}

// NewRegisterSubscribersRequestWithDefaults instantiates a new RegisterSubscribersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterSubscribersRequestWithDefaults() *RegisterSubscribersRequest {
	this := RegisterSubscribersRequest{}
	return &this
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *RegisterSubscribersRequest) GetGroupId() string {
	if o == nil || o.GroupId == nil {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterSubscribersRequest) GetGroupIdOk() (*string, bool) {
	if o == nil || o.GroupId == nil {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *RegisterSubscribersRequest) HasGroupId() bool {
	if o != nil && o.GroupId != nil {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *RegisterSubscribersRequest) SetGroupId(v string) {
	o.GroupId = &v
}

// GetRegistrationSecret returns the RegistrationSecret field value
func (o *RegisterSubscribersRequest) GetRegistrationSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RegistrationSecret
}

// GetRegistrationSecretOk returns a tuple with the RegistrationSecret field value
// and a boolean to check if the value has been set.
func (o *RegisterSubscribersRequest) GetRegistrationSecretOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RegistrationSecret, true
}

// SetRegistrationSecret sets field value
func (o *RegisterSubscribersRequest) SetRegistrationSecret(v string) {
	o.RegistrationSecret = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *RegisterSubscribersRequest) GetTags() []TagUpdateRequest {
	if o == nil || o.Tags == nil {
		var ret []TagUpdateRequest
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterSubscribersRequest) GetTagsOk() ([]TagUpdateRequest, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *RegisterSubscribersRequest) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagUpdateRequest and assigns it to the Tags field.
func (o *RegisterSubscribersRequest) SetTags(v []TagUpdateRequest) {
	o.Tags = v
}

func (o RegisterSubscribersRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GroupId != nil {
		toSerialize["groupId"] = o.GroupId
	}
	if true {
		toSerialize["registrationSecret"] = o.RegistrationSecret
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableRegisterSubscribersRequest struct {
	value *RegisterSubscribersRequest
	isSet bool
}

func (v NullableRegisterSubscribersRequest) Get() *RegisterSubscribersRequest {
	return v.value
}

func (v *NullableRegisterSubscribersRequest) Set(val *RegisterSubscribersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterSubscribersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterSubscribersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterSubscribersRequest(val *RegisterSubscribersRequest) *NullableRegisterSubscribersRequest {
	return &NullableRegisterSubscribersRequest{value: val, isSet: true}
}

func (v NullableRegisterSubscribersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterSubscribersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


