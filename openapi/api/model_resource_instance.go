/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ResourceInstance struct for ResourceInstance
type ResourceInstance struct {
	Description *string `json:"description,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Mandatory *bool `json:"mandatory,omitempty"`
	Multiple *bool `json:"multiple,omitempty"`
	Name *string `json:"name,omitempty"`
	Observed *bool `json:"observed,omitempty"`
	Operations *string `json:"operations,omitempty"`
	RangeEnumeration *string `json:"rangeEnumeration,omitempty"`
	Type *string `json:"type,omitempty"`
	Units *string `json:"units,omitempty"`
	Value map[string]interface{} `json:"value,omitempty"`
	Values map[string]interface{} `json:"values,omitempty"`
}

// NewResourceInstance instantiates a new ResourceInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceInstance() *ResourceInstance {
	this := ResourceInstance{}
	var mandatory bool = false
	this.Mandatory = &mandatory
	var multiple bool = false
	this.Multiple = &multiple
	var observed bool = false
	this.Observed = &observed
	return &this
}

// NewResourceInstanceWithDefaults instantiates a new ResourceInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceInstanceWithDefaults() *ResourceInstance {
	this := ResourceInstance{}
	var mandatory bool = false
	this.Mandatory = &mandatory
	var multiple bool = false
	this.Multiple = &multiple
	var observed bool = false
	this.Observed = &observed
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ResourceInstance) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ResourceInstance) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ResourceInstance) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResourceInstance) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResourceInstance) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ResourceInstance) SetId(v int32) {
	o.Id = &v
}

// GetMandatory returns the Mandatory field value if set, zero value otherwise.
func (o *ResourceInstance) GetMandatory() bool {
	if o == nil || o.Mandatory == nil {
		var ret bool
		return ret
	}
	return *o.Mandatory
}

// GetMandatoryOk returns a tuple with the Mandatory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetMandatoryOk() (*bool, bool) {
	if o == nil || o.Mandatory == nil {
		return nil, false
	}
	return o.Mandatory, true
}

// HasMandatory returns a boolean if a field has been set.
func (o *ResourceInstance) HasMandatory() bool {
	if o != nil && o.Mandatory != nil {
		return true
	}

	return false
}

// SetMandatory gets a reference to the given bool and assigns it to the Mandatory field.
func (o *ResourceInstance) SetMandatory(v bool) {
	o.Mandatory = &v
}

// GetMultiple returns the Multiple field value if set, zero value otherwise.
func (o *ResourceInstance) GetMultiple() bool {
	if o == nil || o.Multiple == nil {
		var ret bool
		return ret
	}
	return *o.Multiple
}

// GetMultipleOk returns a tuple with the Multiple field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetMultipleOk() (*bool, bool) {
	if o == nil || o.Multiple == nil {
		return nil, false
	}
	return o.Multiple, true
}

// HasMultiple returns a boolean if a field has been set.
func (o *ResourceInstance) HasMultiple() bool {
	if o != nil && o.Multiple != nil {
		return true
	}

	return false
}

// SetMultiple gets a reference to the given bool and assigns it to the Multiple field.
func (o *ResourceInstance) SetMultiple(v bool) {
	o.Multiple = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResourceInstance) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ResourceInstance) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ResourceInstance) SetName(v string) {
	o.Name = &v
}

// GetObserved returns the Observed field value if set, zero value otherwise.
func (o *ResourceInstance) GetObserved() bool {
	if o == nil || o.Observed == nil {
		var ret bool
		return ret
	}
	return *o.Observed
}

// GetObservedOk returns a tuple with the Observed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetObservedOk() (*bool, bool) {
	if o == nil || o.Observed == nil {
		return nil, false
	}
	return o.Observed, true
}

// HasObserved returns a boolean if a field has been set.
func (o *ResourceInstance) HasObserved() bool {
	if o != nil && o.Observed != nil {
		return true
	}

	return false
}

// SetObserved gets a reference to the given bool and assigns it to the Observed field.
func (o *ResourceInstance) SetObserved(v bool) {
	o.Observed = &v
}

// GetOperations returns the Operations field value if set, zero value otherwise.
func (o *ResourceInstance) GetOperations() string {
	if o == nil || o.Operations == nil {
		var ret string
		return ret
	}
	return *o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetOperationsOk() (*string, bool) {
	if o == nil || o.Operations == nil {
		return nil, false
	}
	return o.Operations, true
}

// HasOperations returns a boolean if a field has been set.
func (o *ResourceInstance) HasOperations() bool {
	if o != nil && o.Operations != nil {
		return true
	}

	return false
}

// SetOperations gets a reference to the given string and assigns it to the Operations field.
func (o *ResourceInstance) SetOperations(v string) {
	o.Operations = &v
}

// GetRangeEnumeration returns the RangeEnumeration field value if set, zero value otherwise.
func (o *ResourceInstance) GetRangeEnumeration() string {
	if o == nil || o.RangeEnumeration == nil {
		var ret string
		return ret
	}
	return *o.RangeEnumeration
}

// GetRangeEnumerationOk returns a tuple with the RangeEnumeration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetRangeEnumerationOk() (*string, bool) {
	if o == nil || o.RangeEnumeration == nil {
		return nil, false
	}
	return o.RangeEnumeration, true
}

// HasRangeEnumeration returns a boolean if a field has been set.
func (o *ResourceInstance) HasRangeEnumeration() bool {
	if o != nil && o.RangeEnumeration != nil {
		return true
	}

	return false
}

// SetRangeEnumeration gets a reference to the given string and assigns it to the RangeEnumeration field.
func (o *ResourceInstance) SetRangeEnumeration(v string) {
	o.RangeEnumeration = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ResourceInstance) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ResourceInstance) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ResourceInstance) SetType(v string) {
	o.Type = &v
}

// GetUnits returns the Units field value if set, zero value otherwise.
func (o *ResourceInstance) GetUnits() string {
	if o == nil || o.Units == nil {
		var ret string
		return ret
	}
	return *o.Units
}

// GetUnitsOk returns a tuple with the Units field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetUnitsOk() (*string, bool) {
	if o == nil || o.Units == nil {
		return nil, false
	}
	return o.Units, true
}

// HasUnits returns a boolean if a field has been set.
func (o *ResourceInstance) HasUnits() bool {
	if o != nil && o.Units != nil {
		return true
	}

	return false
}

// SetUnits gets a reference to the given string and assigns it to the Units field.
func (o *ResourceInstance) SetUnits(v string) {
	o.Units = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ResourceInstance) GetValue() map[string]interface{} {
	if o == nil || o.Value == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetValueOk() (map[string]interface{}, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ResourceInstance) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given map[string]interface{} and assigns it to the Value field.
func (o *ResourceInstance) SetValue(v map[string]interface{}) {
	o.Value = v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *ResourceInstance) GetValues() map[string]interface{} {
	if o == nil || o.Values == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetValuesOk() (map[string]interface{}, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *ResourceInstance) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given map[string]interface{} and assigns it to the Values field.
func (o *ResourceInstance) SetValues(v map[string]interface{}) {
	o.Values = v
}

func (o ResourceInstance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Mandatory != nil {
		toSerialize["mandatory"] = o.Mandatory
	}
	if o.Multiple != nil {
		toSerialize["multiple"] = o.Multiple
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Observed != nil {
		toSerialize["observed"] = o.Observed
	}
	if o.Operations != nil {
		toSerialize["operations"] = o.Operations
	}
	if o.RangeEnumeration != nil {
		toSerialize["rangeEnumeration"] = o.RangeEnumeration
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Units != nil {
		toSerialize["units"] = o.Units
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableResourceInstance struct {
	value *ResourceInstance
	isSet bool
}

func (v NullableResourceInstance) Get() *ResourceInstance {
	return v.value
}

func (v *NullableResourceInstance) Set(val *ResourceInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceInstance(val *ResourceInstance) *NullableResourceInstance {
	return &NullableResourceInstance{value: val, isSet: true}
}

func (v NullableResourceInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


