/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// RoleResponse struct for RoleResponse
type RoleResponse struct {
	CreateDateTime *int64 `json:"createDateTime,omitempty"`
	Description *string `json:"description,omitempty"`
	// Permission „ÅÆ JSON
	Permission *string `json:"permission,omitempty"`
	RoleId *string `json:"roleId,omitempty"`
	UpdateDateTime *int64 `json:"updateDateTime,omitempty"`
}

// NewRoleResponse instantiates a new RoleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleResponse() *RoleResponse {
	this := RoleResponse{}
	return &this
}

// NewRoleResponseWithDefaults instantiates a new RoleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleResponseWithDefaults() *RoleResponse {
	this := RoleResponse{}
	return &this
}

// GetCreateDateTime returns the CreateDateTime field value if set, zero value otherwise.
func (o *RoleResponse) GetCreateDateTime() int64 {
	if o == nil || o.CreateDateTime == nil {
		var ret int64
		return ret
	}
	return *o.CreateDateTime
}

// GetCreateDateTimeOk returns a tuple with the CreateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleResponse) GetCreateDateTimeOk() (*int64, bool) {
	if o == nil || o.CreateDateTime == nil {
		return nil, false
	}
	return o.CreateDateTime, true
}

// HasCreateDateTime returns a boolean if a field has been set.
func (o *RoleResponse) HasCreateDateTime() bool {
	if o != nil && o.CreateDateTime != nil {
		return true
	}

	return false
}

// SetCreateDateTime gets a reference to the given int64 and assigns it to the CreateDateTime field.
func (o *RoleResponse) SetCreateDateTime(v int64) {
	o.CreateDateTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RoleResponse) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RoleResponse) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RoleResponse) SetDescription(v string) {
	o.Description = &v
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *RoleResponse) GetPermission() string {
	if o == nil || o.Permission == nil {
		var ret string
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleResponse) GetPermissionOk() (*string, bool) {
	if o == nil || o.Permission == nil {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *RoleResponse) HasPermission() bool {
	if o != nil && o.Permission != nil {
		return true
	}

	return false
}

// SetPermission gets a reference to the given string and assigns it to the Permission field.
func (o *RoleResponse) SetPermission(v string) {
	o.Permission = &v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *RoleResponse) GetRoleId() string {
	if o == nil || o.RoleId == nil {
		var ret string
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleResponse) GetRoleIdOk() (*string, bool) {
	if o == nil || o.RoleId == nil {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *RoleResponse) HasRoleId() bool {
	if o != nil && o.RoleId != nil {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given string and assigns it to the RoleId field.
func (o *RoleResponse) SetRoleId(v string) {
	o.RoleId = &v
}

// GetUpdateDateTime returns the UpdateDateTime field value if set, zero value otherwise.
func (o *RoleResponse) GetUpdateDateTime() int64 {
	if o == nil || o.UpdateDateTime == nil {
		var ret int64
		return ret
	}
	return *o.UpdateDateTime
}

// GetUpdateDateTimeOk returns a tuple with the UpdateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleResponse) GetUpdateDateTimeOk() (*int64, bool) {
	if o == nil || o.UpdateDateTime == nil {
		return nil, false
	}
	return o.UpdateDateTime, true
}

// HasUpdateDateTime returns a boolean if a field has been set.
func (o *RoleResponse) HasUpdateDateTime() bool {
	if o != nil && o.UpdateDateTime != nil {
		return true
	}

	return false
}

// SetUpdateDateTime gets a reference to the given int64 and assigns it to the UpdateDateTime field.
func (o *RoleResponse) SetUpdateDateTime(v int64) {
	o.UpdateDateTime = &v
}

func (o RoleResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreateDateTime != nil {
		toSerialize["createDateTime"] = o.CreateDateTime
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Permission != nil {
		toSerialize["permission"] = o.Permission
	}
	if o.RoleId != nil {
		toSerialize["roleId"] = o.RoleId
	}
	if o.UpdateDateTime != nil {
		toSerialize["updateDateTime"] = o.UpdateDateTime
	}
	return json.Marshal(toSerialize)
}

type NullableRoleResponse struct {
	value *RoleResponse
	isSet bool
}

func (v NullableRoleResponse) Get() *RoleResponse {
	return v.value
}

func (v *NullableRoleResponse) Set(val *RoleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleResponse(val *RoleResponse) *NullableRoleResponse {
	return &NullableRoleResponse{value: val, isSet: true}
}

func (v NullableRoleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


