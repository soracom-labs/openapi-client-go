/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// RoutingFilterEntry struct for RoutingFilterEntry
type RoutingFilterEntry struct {
	// Whether to allow or deny the outbound packets with a destination in the specified range
	Action string `json:"action"`
	// IPv4 address range in CIDR format, e.g. a.b.c.d/x
	IpRange string `json:"ipRange"`
}

// NewRoutingFilterEntry instantiates a new RoutingFilterEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingFilterEntry(action string, ipRange string) *RoutingFilterEntry {
	this := RoutingFilterEntry{}
	this.Action = action
	this.IpRange = ipRange
	return &this
}

// NewRoutingFilterEntryWithDefaults instantiates a new RoutingFilterEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingFilterEntryWithDefaults() *RoutingFilterEntry {
	this := RoutingFilterEntry{}
	return &this
}

// GetAction returns the Action field value
func (o *RoutingFilterEntry) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *RoutingFilterEntry) GetActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *RoutingFilterEntry) SetAction(v string) {
	o.Action = v
}

// GetIpRange returns the IpRange field value
func (o *RoutingFilterEntry) GetIpRange() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpRange
}

// GetIpRangeOk returns a tuple with the IpRange field value
// and a boolean to check if the value has been set.
func (o *RoutingFilterEntry) GetIpRangeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IpRange, true
}

// SetIpRange sets field value
func (o *RoutingFilterEntry) SetIpRange(v string) {
	o.IpRange = v
}

func (o RoutingFilterEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["action"] = o.Action
	}
	if true {
		toSerialize["ipRange"] = o.IpRange
	}
	return json.Marshal(toSerialize)
}

type NullableRoutingFilterEntry struct {
	value *RoutingFilterEntry
	isSet bool
}

func (v NullableRoutingFilterEntry) Get() *RoutingFilterEntry {
	return v.value
}

func (v *NullableRoutingFilterEntry) Set(val *RoutingFilterEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingFilterEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingFilterEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingFilterEntry(val *RoutingFilterEntry) *NullableRoutingFilterEntry {
	return &NullableRoutingFilterEntry{value: val, isSet: true}
}

func (v NullableRoutingFilterEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingFilterEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


