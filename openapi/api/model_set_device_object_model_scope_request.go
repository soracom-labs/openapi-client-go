/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SetDeviceObjectModelScopeRequest struct for SetDeviceObjectModelScopeRequest
type SetDeviceObjectModelScopeRequest struct {
	Scope *string `json:"scope,omitempty"`
}

// NewSetDeviceObjectModelScopeRequest instantiates a new SetDeviceObjectModelScopeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetDeviceObjectModelScopeRequest() *SetDeviceObjectModelScopeRequest {
	this := SetDeviceObjectModelScopeRequest{}
	return &this
}

// NewSetDeviceObjectModelScopeRequestWithDefaults instantiates a new SetDeviceObjectModelScopeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetDeviceObjectModelScopeRequestWithDefaults() *SetDeviceObjectModelScopeRequest {
	this := SetDeviceObjectModelScopeRequest{}
	return &this
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *SetDeviceObjectModelScopeRequest) GetScope() string {
	if o == nil || o.Scope == nil {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetDeviceObjectModelScopeRequest) GetScopeOk() (*string, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *SetDeviceObjectModelScopeRequest) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *SetDeviceObjectModelScopeRequest) SetScope(v string) {
	o.Scope = &v
}

func (o SetDeviceObjectModelScopeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	return json.Marshal(toSerialize)
}

type NullableSetDeviceObjectModelScopeRequest struct {
	value *SetDeviceObjectModelScopeRequest
	isSet bool
}

func (v NullableSetDeviceObjectModelScopeRequest) Get() *SetDeviceObjectModelScopeRequest {
	return v.value
}

func (v *NullableSetDeviceObjectModelScopeRequest) Set(val *SetDeviceObjectModelScopeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetDeviceObjectModelScopeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetDeviceObjectModelScopeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetDeviceObjectModelScopeRequest(val *SetDeviceObjectModelScopeRequest) *NullableSetDeviceObjectModelScopeRequest {
	return &NullableSetDeviceObjectModelScopeRequest{value: val, isSet: true}
}

func (v NullableSetDeviceObjectModelScopeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetDeviceObjectModelScopeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


