/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SetImeiLockRequest struct for SetImeiLockRequest
type SetImeiLockRequest struct {
	Imei *string `json:"imei,omitempty"`
}

// NewSetImeiLockRequest instantiates a new SetImeiLockRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetImeiLockRequest() *SetImeiLockRequest {
	this := SetImeiLockRequest{}
	return &this
}

// NewSetImeiLockRequestWithDefaults instantiates a new SetImeiLockRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetImeiLockRequestWithDefaults() *SetImeiLockRequest {
	this := SetImeiLockRequest{}
	return &this
}

// GetImei returns the Imei field value if set, zero value otherwise.
func (o *SetImeiLockRequest) GetImei() string {
	if o == nil || o.Imei == nil {
		var ret string
		return ret
	}
	return *o.Imei
}

// GetImeiOk returns a tuple with the Imei field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetImeiLockRequest) GetImeiOk() (*string, bool) {
	if o == nil || o.Imei == nil {
		return nil, false
	}
	return o.Imei, true
}

// HasImei returns a boolean if a field has been set.
func (o *SetImeiLockRequest) HasImei() bool {
	if o != nil && o.Imei != nil {
		return true
	}

	return false
}

// SetImei gets a reference to the given string and assigns it to the Imei field.
func (o *SetImeiLockRequest) SetImei(v string) {
	o.Imei = &v
}

func (o SetImeiLockRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Imei != nil {
		toSerialize["imei"] = o.Imei
	}
	return json.Marshal(toSerialize)
}

type NullableSetImeiLockRequest struct {
	value *SetImeiLockRequest
	isSet bool
}

func (v NullableSetImeiLockRequest) Get() *SetImeiLockRequest {
	return v.value
}

func (v *NullableSetImeiLockRequest) Set(val *SetImeiLockRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetImeiLockRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetImeiLockRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetImeiLockRequest(val *SetImeiLockRequest) *NullableSetImeiLockRequest {
	return &NullableSetImeiLockRequest{value: val, isSet: true}
}

func (v NullableSetImeiLockRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetImeiLockRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


