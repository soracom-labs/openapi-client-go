/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SetNetworkSetRequest struct for SetNetworkSetRequest
type SetNetworkSetRequest struct {
	NetworkSetId *string `json:"networkSetId,omitempty"`
}

// NewSetNetworkSetRequest instantiates a new SetNetworkSetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetNetworkSetRequest() *SetNetworkSetRequest {
	this := SetNetworkSetRequest{}
	return &this
}

// NewSetNetworkSetRequestWithDefaults instantiates a new SetNetworkSetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetNetworkSetRequestWithDefaults() *SetNetworkSetRequest {
	this := SetNetworkSetRequest{}
	return &this
}

// GetNetworkSetId returns the NetworkSetId field value if set, zero value otherwise.
func (o *SetNetworkSetRequest) GetNetworkSetId() string {
	if o == nil || o.NetworkSetId == nil {
		var ret string
		return ret
	}
	return *o.NetworkSetId
}

// GetNetworkSetIdOk returns a tuple with the NetworkSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetNetworkSetRequest) GetNetworkSetIdOk() (*string, bool) {
	if o == nil || o.NetworkSetId == nil {
		return nil, false
	}
	return o.NetworkSetId, true
}

// HasNetworkSetId returns a boolean if a field has been set.
func (o *SetNetworkSetRequest) HasNetworkSetId() bool {
	if o != nil && o.NetworkSetId != nil {
		return true
	}

	return false
}

// SetNetworkSetId gets a reference to the given string and assigns it to the NetworkSetId field.
func (o *SetNetworkSetRequest) SetNetworkSetId(v string) {
	o.NetworkSetId = &v
}

func (o SetNetworkSetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkSetId != nil {
		toSerialize["networkSetId"] = o.NetworkSetId
	}
	return json.Marshal(toSerialize)
}

type NullableSetNetworkSetRequest struct {
	value *SetNetworkSetRequest
	isSet bool
}

func (v NullableSetNetworkSetRequest) Get() *SetNetworkSetRequest {
	return v.value
}

func (v *NullableSetNetworkSetRequest) Set(val *SetNetworkSetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetNetworkSetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetNetworkSetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetNetworkSetRequest(val *SetNetworkSetRequest) *NullableSetNetworkSetRequest {
	return &NullableSetNetworkSetRequest{value: val, isSet: true}
}

func (v NullableSetNetworkSetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetNetworkSetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


