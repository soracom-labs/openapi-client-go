/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SetSystemNotificationsRequest struct for SetSystemNotificationsRequest
type SetSystemNotificationsRequest struct {
	EmailIdList []string `json:"emailIdList"`
	// Password of the operator. This is necessary when type is primary.
	Password *string `json:"password,omitempty"`
}

// NewSetSystemNotificationsRequest instantiates a new SetSystemNotificationsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetSystemNotificationsRequest(emailIdList []string) *SetSystemNotificationsRequest {
	this := SetSystemNotificationsRequest{}
	this.EmailIdList = emailIdList
	return &this
}

// NewSetSystemNotificationsRequestWithDefaults instantiates a new SetSystemNotificationsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetSystemNotificationsRequestWithDefaults() *SetSystemNotificationsRequest {
	this := SetSystemNotificationsRequest{}
	return &this
}

// GetEmailIdList returns the EmailIdList field value
func (o *SetSystemNotificationsRequest) GetEmailIdList() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.EmailIdList
}

// GetEmailIdListOk returns a tuple with the EmailIdList field value
// and a boolean to check if the value has been set.
func (o *SetSystemNotificationsRequest) GetEmailIdListOk() ([]string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EmailIdList, true
}

// SetEmailIdList sets field value
func (o *SetSystemNotificationsRequest) SetEmailIdList(v []string) {
	o.EmailIdList = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *SetSystemNotificationsRequest) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetSystemNotificationsRequest) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *SetSystemNotificationsRequest) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *SetSystemNotificationsRequest) SetPassword(v string) {
	o.Password = &v
}

func (o SetSystemNotificationsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["emailIdList"] = o.EmailIdList
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableSetSystemNotificationsRequest struct {
	value *SetSystemNotificationsRequest
	isSet bool
}

func (v NullableSetSystemNotificationsRequest) Get() *SetSystemNotificationsRequest {
	return v.value
}

func (v *NullableSetSystemNotificationsRequest) Set(val *SetSystemNotificationsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetSystemNotificationsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetSystemNotificationsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetSystemNotificationsRequest(val *SetSystemNotificationsRequest) *NullableSetSystemNotificationsRequest {
	return &NullableSetSystemNotificationsRequest{value: val, isSet: true}
}

func (v NullableSetSystemNotificationsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetSystemNotificationsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


