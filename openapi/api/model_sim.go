/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// Sim struct for Sim
type Sim struct {
	ActiveProfileId *string `json:"activeProfileId,omitempty"`
	ArcSessionStatus *ArcSessionStatus `json:"arcSessionStatus,omitempty"`
	Capabilities *Capabilities `json:"capabilities,omitempty"`
	CreatedTime *int64 `json:"createdTime,omitempty"`
	ExpiryAction *string `json:"expiryAction,omitempty"`
	ExpiryTime *int64 `json:"expiryTime,omitempty"`
	GroupId *string `json:"groupId,omitempty"`
	ImeiLock *ImeiLock `json:"imeiLock,omitempty"`
	LastModifiedTime *int64 `json:"lastModifiedTime,omitempty"`
	LastPortMappingCreatedTime *int64 `json:"lastPortMappingCreatedTime,omitempty"`
	LocalInfo *map[string]string `json:"localInfo,omitempty"`
	ModuleType *string `json:"moduleType,omitempty"`
	OperatorId *string `json:"operatorId,omitempty"`
	OtaSerialNumber *string `json:"otaSerialNumber,omitempty"`
	PcapEndTime *int64 `json:"pcapEndTime,omitempty"`
	PcapStartTime *int64 `json:"pcapStartTime,omitempty"`
	PreviousSession *PreviousSessionStatus `json:"previousSession,omitempty"`
	Profiles *map[string]SimProfile `json:"profiles,omitempty"`
	SerialNumber *string `json:"serialNumber,omitempty"`
	SessionStatus *SessionStatus `json:"sessionStatus,omitempty"`
	SimId *string `json:"simId,omitempty"`
	SpeedClass *string `json:"speedClass,omitempty"`
	// IoT SIM のステータス - `ready`: 準備完了 - `active`: 使用中 - `inactive`: 休止中 - `standby`: 利用開始待ち - `suspended`: 利用中断中 - `terminated`: 解約済み 
	Status *string `json:"status,omitempty"`
	// An object which always contains at least one property \"name\" with a string value. If you give a subscriber/SIM a name, the name will be returned as the value of the \"name\" property. If the subscriber/SIM does not have a name, an empty string \"\" is returned. In addition, if you create any custom tags for the subscriber/SIM, each custom tag will appear as additional properties in the object.
	Tags *map[string]string `json:"tags,omitempty"`
	TerminationEnabled *bool `json:"terminationEnabled,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewSim instantiates a new Sim object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSim() *Sim {
	this := Sim{}
	return &this
}

// NewSimWithDefaults instantiates a new Sim object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimWithDefaults() *Sim {
	this := Sim{}
	return &this
}

// GetActiveProfileId returns the ActiveProfileId field value if set, zero value otherwise.
func (o *Sim) GetActiveProfileId() string {
	if o == nil || o.ActiveProfileId == nil {
		var ret string
		return ret
	}
	return *o.ActiveProfileId
}

// GetActiveProfileIdOk returns a tuple with the ActiveProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetActiveProfileIdOk() (*string, bool) {
	if o == nil || o.ActiveProfileId == nil {
		return nil, false
	}
	return o.ActiveProfileId, true
}

// HasActiveProfileId returns a boolean if a field has been set.
func (o *Sim) HasActiveProfileId() bool {
	if o != nil && o.ActiveProfileId != nil {
		return true
	}

	return false
}

// SetActiveProfileId gets a reference to the given string and assigns it to the ActiveProfileId field.
func (o *Sim) SetActiveProfileId(v string) {
	o.ActiveProfileId = &v
}

// GetArcSessionStatus returns the ArcSessionStatus field value if set, zero value otherwise.
func (o *Sim) GetArcSessionStatus() ArcSessionStatus {
	if o == nil || o.ArcSessionStatus == nil {
		var ret ArcSessionStatus
		return ret
	}
	return *o.ArcSessionStatus
}

// GetArcSessionStatusOk returns a tuple with the ArcSessionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetArcSessionStatusOk() (*ArcSessionStatus, bool) {
	if o == nil || o.ArcSessionStatus == nil {
		return nil, false
	}
	return o.ArcSessionStatus, true
}

// HasArcSessionStatus returns a boolean if a field has been set.
func (o *Sim) HasArcSessionStatus() bool {
	if o != nil && o.ArcSessionStatus != nil {
		return true
	}

	return false
}

// SetArcSessionStatus gets a reference to the given ArcSessionStatus and assigns it to the ArcSessionStatus field.
func (o *Sim) SetArcSessionStatus(v ArcSessionStatus) {
	o.ArcSessionStatus = &v
}

// GetCapabilities returns the Capabilities field value if set, zero value otherwise.
func (o *Sim) GetCapabilities() Capabilities {
	if o == nil || o.Capabilities == nil {
		var ret Capabilities
		return ret
	}
	return *o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetCapabilitiesOk() (*Capabilities, bool) {
	if o == nil || o.Capabilities == nil {
		return nil, false
	}
	return o.Capabilities, true
}

// HasCapabilities returns a boolean if a field has been set.
func (o *Sim) HasCapabilities() bool {
	if o != nil && o.Capabilities != nil {
		return true
	}

	return false
}

// SetCapabilities gets a reference to the given Capabilities and assigns it to the Capabilities field.
func (o *Sim) SetCapabilities(v Capabilities) {
	o.Capabilities = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *Sim) GetCreatedTime() int64 {
	if o == nil || o.CreatedTime == nil {
		var ret int64
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetCreatedTimeOk() (*int64, bool) {
	if o == nil || o.CreatedTime == nil {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *Sim) HasCreatedTime() bool {
	if o != nil && o.CreatedTime != nil {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given int64 and assigns it to the CreatedTime field.
func (o *Sim) SetCreatedTime(v int64) {
	o.CreatedTime = &v
}

// GetExpiryAction returns the ExpiryAction field value if set, zero value otherwise.
func (o *Sim) GetExpiryAction() string {
	if o == nil || o.ExpiryAction == nil {
		var ret string
		return ret
	}
	return *o.ExpiryAction
}

// GetExpiryActionOk returns a tuple with the ExpiryAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetExpiryActionOk() (*string, bool) {
	if o == nil || o.ExpiryAction == nil {
		return nil, false
	}
	return o.ExpiryAction, true
}

// HasExpiryAction returns a boolean if a field has been set.
func (o *Sim) HasExpiryAction() bool {
	if o != nil && o.ExpiryAction != nil {
		return true
	}

	return false
}

// SetExpiryAction gets a reference to the given string and assigns it to the ExpiryAction field.
func (o *Sim) SetExpiryAction(v string) {
	o.ExpiryAction = &v
}

// GetExpiryTime returns the ExpiryTime field value if set, zero value otherwise.
func (o *Sim) GetExpiryTime() int64 {
	if o == nil || o.ExpiryTime == nil {
		var ret int64
		return ret
	}
	return *o.ExpiryTime
}

// GetExpiryTimeOk returns a tuple with the ExpiryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetExpiryTimeOk() (*int64, bool) {
	if o == nil || o.ExpiryTime == nil {
		return nil, false
	}
	return o.ExpiryTime, true
}

// HasExpiryTime returns a boolean if a field has been set.
func (o *Sim) HasExpiryTime() bool {
	if o != nil && o.ExpiryTime != nil {
		return true
	}

	return false
}

// SetExpiryTime gets a reference to the given int64 and assigns it to the ExpiryTime field.
func (o *Sim) SetExpiryTime(v int64) {
	o.ExpiryTime = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *Sim) GetGroupId() string {
	if o == nil || o.GroupId == nil {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetGroupIdOk() (*string, bool) {
	if o == nil || o.GroupId == nil {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *Sim) HasGroupId() bool {
	if o != nil && o.GroupId != nil {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *Sim) SetGroupId(v string) {
	o.GroupId = &v
}

// GetImeiLock returns the ImeiLock field value if set, zero value otherwise.
func (o *Sim) GetImeiLock() ImeiLock {
	if o == nil || o.ImeiLock == nil {
		var ret ImeiLock
		return ret
	}
	return *o.ImeiLock
}

// GetImeiLockOk returns a tuple with the ImeiLock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetImeiLockOk() (*ImeiLock, bool) {
	if o == nil || o.ImeiLock == nil {
		return nil, false
	}
	return o.ImeiLock, true
}

// HasImeiLock returns a boolean if a field has been set.
func (o *Sim) HasImeiLock() bool {
	if o != nil && o.ImeiLock != nil {
		return true
	}

	return false
}

// SetImeiLock gets a reference to the given ImeiLock and assigns it to the ImeiLock field.
func (o *Sim) SetImeiLock(v ImeiLock) {
	o.ImeiLock = &v
}

// GetLastModifiedTime returns the LastModifiedTime field value if set, zero value otherwise.
func (o *Sim) GetLastModifiedTime() int64 {
	if o == nil || o.LastModifiedTime == nil {
		var ret int64
		return ret
	}
	return *o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetLastModifiedTimeOk() (*int64, bool) {
	if o == nil || o.LastModifiedTime == nil {
		return nil, false
	}
	return o.LastModifiedTime, true
}

// HasLastModifiedTime returns a boolean if a field has been set.
func (o *Sim) HasLastModifiedTime() bool {
	if o != nil && o.LastModifiedTime != nil {
		return true
	}

	return false
}

// SetLastModifiedTime gets a reference to the given int64 and assigns it to the LastModifiedTime field.
func (o *Sim) SetLastModifiedTime(v int64) {
	o.LastModifiedTime = &v
}

// GetLastPortMappingCreatedTime returns the LastPortMappingCreatedTime field value if set, zero value otherwise.
func (o *Sim) GetLastPortMappingCreatedTime() int64 {
	if o == nil || o.LastPortMappingCreatedTime == nil {
		var ret int64
		return ret
	}
	return *o.LastPortMappingCreatedTime
}

// GetLastPortMappingCreatedTimeOk returns a tuple with the LastPortMappingCreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetLastPortMappingCreatedTimeOk() (*int64, bool) {
	if o == nil || o.LastPortMappingCreatedTime == nil {
		return nil, false
	}
	return o.LastPortMappingCreatedTime, true
}

// HasLastPortMappingCreatedTime returns a boolean if a field has been set.
func (o *Sim) HasLastPortMappingCreatedTime() bool {
	if o != nil && o.LastPortMappingCreatedTime != nil {
		return true
	}

	return false
}

// SetLastPortMappingCreatedTime gets a reference to the given int64 and assigns it to the LastPortMappingCreatedTime field.
func (o *Sim) SetLastPortMappingCreatedTime(v int64) {
	o.LastPortMappingCreatedTime = &v
}

// GetLocalInfo returns the LocalInfo field value if set, zero value otherwise.
func (o *Sim) GetLocalInfo() map[string]string {
	if o == nil || o.LocalInfo == nil {
		var ret map[string]string
		return ret
	}
	return *o.LocalInfo
}

// GetLocalInfoOk returns a tuple with the LocalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetLocalInfoOk() (*map[string]string, bool) {
	if o == nil || o.LocalInfo == nil {
		return nil, false
	}
	return o.LocalInfo, true
}

// HasLocalInfo returns a boolean if a field has been set.
func (o *Sim) HasLocalInfo() bool {
	if o != nil && o.LocalInfo != nil {
		return true
	}

	return false
}

// SetLocalInfo gets a reference to the given map[string]string and assigns it to the LocalInfo field.
func (o *Sim) SetLocalInfo(v map[string]string) {
	o.LocalInfo = &v
}

// GetModuleType returns the ModuleType field value if set, zero value otherwise.
func (o *Sim) GetModuleType() string {
	if o == nil || o.ModuleType == nil {
		var ret string
		return ret
	}
	return *o.ModuleType
}

// GetModuleTypeOk returns a tuple with the ModuleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetModuleTypeOk() (*string, bool) {
	if o == nil || o.ModuleType == nil {
		return nil, false
	}
	return o.ModuleType, true
}

// HasModuleType returns a boolean if a field has been set.
func (o *Sim) HasModuleType() bool {
	if o != nil && o.ModuleType != nil {
		return true
	}

	return false
}

// SetModuleType gets a reference to the given string and assigns it to the ModuleType field.
func (o *Sim) SetModuleType(v string) {
	o.ModuleType = &v
}

// GetOperatorId returns the OperatorId field value if set, zero value otherwise.
func (o *Sim) GetOperatorId() string {
	if o == nil || o.OperatorId == nil {
		var ret string
		return ret
	}
	return *o.OperatorId
}

// GetOperatorIdOk returns a tuple with the OperatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetOperatorIdOk() (*string, bool) {
	if o == nil || o.OperatorId == nil {
		return nil, false
	}
	return o.OperatorId, true
}

// HasOperatorId returns a boolean if a field has been set.
func (o *Sim) HasOperatorId() bool {
	if o != nil && o.OperatorId != nil {
		return true
	}

	return false
}

// SetOperatorId gets a reference to the given string and assigns it to the OperatorId field.
func (o *Sim) SetOperatorId(v string) {
	o.OperatorId = &v
}

// GetOtaSerialNumber returns the OtaSerialNumber field value if set, zero value otherwise.
func (o *Sim) GetOtaSerialNumber() string {
	if o == nil || o.OtaSerialNumber == nil {
		var ret string
		return ret
	}
	return *o.OtaSerialNumber
}

// GetOtaSerialNumberOk returns a tuple with the OtaSerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetOtaSerialNumberOk() (*string, bool) {
	if o == nil || o.OtaSerialNumber == nil {
		return nil, false
	}
	return o.OtaSerialNumber, true
}

// HasOtaSerialNumber returns a boolean if a field has been set.
func (o *Sim) HasOtaSerialNumber() bool {
	if o != nil && o.OtaSerialNumber != nil {
		return true
	}

	return false
}

// SetOtaSerialNumber gets a reference to the given string and assigns it to the OtaSerialNumber field.
func (o *Sim) SetOtaSerialNumber(v string) {
	o.OtaSerialNumber = &v
}

// GetPcapEndTime returns the PcapEndTime field value if set, zero value otherwise.
func (o *Sim) GetPcapEndTime() int64 {
	if o == nil || o.PcapEndTime == nil {
		var ret int64
		return ret
	}
	return *o.PcapEndTime
}

// GetPcapEndTimeOk returns a tuple with the PcapEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetPcapEndTimeOk() (*int64, bool) {
	if o == nil || o.PcapEndTime == nil {
		return nil, false
	}
	return o.PcapEndTime, true
}

// HasPcapEndTime returns a boolean if a field has been set.
func (o *Sim) HasPcapEndTime() bool {
	if o != nil && o.PcapEndTime != nil {
		return true
	}

	return false
}

// SetPcapEndTime gets a reference to the given int64 and assigns it to the PcapEndTime field.
func (o *Sim) SetPcapEndTime(v int64) {
	o.PcapEndTime = &v
}

// GetPcapStartTime returns the PcapStartTime field value if set, zero value otherwise.
func (o *Sim) GetPcapStartTime() int64 {
	if o == nil || o.PcapStartTime == nil {
		var ret int64
		return ret
	}
	return *o.PcapStartTime
}

// GetPcapStartTimeOk returns a tuple with the PcapStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetPcapStartTimeOk() (*int64, bool) {
	if o == nil || o.PcapStartTime == nil {
		return nil, false
	}
	return o.PcapStartTime, true
}

// HasPcapStartTime returns a boolean if a field has been set.
func (o *Sim) HasPcapStartTime() bool {
	if o != nil && o.PcapStartTime != nil {
		return true
	}

	return false
}

// SetPcapStartTime gets a reference to the given int64 and assigns it to the PcapStartTime field.
func (o *Sim) SetPcapStartTime(v int64) {
	o.PcapStartTime = &v
}

// GetPreviousSession returns the PreviousSession field value if set, zero value otherwise.
func (o *Sim) GetPreviousSession() PreviousSessionStatus {
	if o == nil || o.PreviousSession == nil {
		var ret PreviousSessionStatus
		return ret
	}
	return *o.PreviousSession
}

// GetPreviousSessionOk returns a tuple with the PreviousSession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetPreviousSessionOk() (*PreviousSessionStatus, bool) {
	if o == nil || o.PreviousSession == nil {
		return nil, false
	}
	return o.PreviousSession, true
}

// HasPreviousSession returns a boolean if a field has been set.
func (o *Sim) HasPreviousSession() bool {
	if o != nil && o.PreviousSession != nil {
		return true
	}

	return false
}

// SetPreviousSession gets a reference to the given PreviousSessionStatus and assigns it to the PreviousSession field.
func (o *Sim) SetPreviousSession(v PreviousSessionStatus) {
	o.PreviousSession = &v
}

// GetProfiles returns the Profiles field value if set, zero value otherwise.
func (o *Sim) GetProfiles() map[string]SimProfile {
	if o == nil || o.Profiles == nil {
		var ret map[string]SimProfile
		return ret
	}
	return *o.Profiles
}

// GetProfilesOk returns a tuple with the Profiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetProfilesOk() (*map[string]SimProfile, bool) {
	if o == nil || o.Profiles == nil {
		return nil, false
	}
	return o.Profiles, true
}

// HasProfiles returns a boolean if a field has been set.
func (o *Sim) HasProfiles() bool {
	if o != nil && o.Profiles != nil {
		return true
	}

	return false
}

// SetProfiles gets a reference to the given map[string]SimProfile and assigns it to the Profiles field.
func (o *Sim) SetProfiles(v map[string]SimProfile) {
	o.Profiles = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *Sim) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *Sim) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *Sim) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetSessionStatus returns the SessionStatus field value if set, zero value otherwise.
func (o *Sim) GetSessionStatus() SessionStatus {
	if o == nil || o.SessionStatus == nil {
		var ret SessionStatus
		return ret
	}
	return *o.SessionStatus
}

// GetSessionStatusOk returns a tuple with the SessionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetSessionStatusOk() (*SessionStatus, bool) {
	if o == nil || o.SessionStatus == nil {
		return nil, false
	}
	return o.SessionStatus, true
}

// HasSessionStatus returns a boolean if a field has been set.
func (o *Sim) HasSessionStatus() bool {
	if o != nil && o.SessionStatus != nil {
		return true
	}

	return false
}

// SetSessionStatus gets a reference to the given SessionStatus and assigns it to the SessionStatus field.
func (o *Sim) SetSessionStatus(v SessionStatus) {
	o.SessionStatus = &v
}

// GetSimId returns the SimId field value if set, zero value otherwise.
func (o *Sim) GetSimId() string {
	if o == nil || o.SimId == nil {
		var ret string
		return ret
	}
	return *o.SimId
}

// GetSimIdOk returns a tuple with the SimId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetSimIdOk() (*string, bool) {
	if o == nil || o.SimId == nil {
		return nil, false
	}
	return o.SimId, true
}

// HasSimId returns a boolean if a field has been set.
func (o *Sim) HasSimId() bool {
	if o != nil && o.SimId != nil {
		return true
	}

	return false
}

// SetSimId gets a reference to the given string and assigns it to the SimId field.
func (o *Sim) SetSimId(v string) {
	o.SimId = &v
}

// GetSpeedClass returns the SpeedClass field value if set, zero value otherwise.
func (o *Sim) GetSpeedClass() string {
	if o == nil || o.SpeedClass == nil {
		var ret string
		return ret
	}
	return *o.SpeedClass
}

// GetSpeedClassOk returns a tuple with the SpeedClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetSpeedClassOk() (*string, bool) {
	if o == nil || o.SpeedClass == nil {
		return nil, false
	}
	return o.SpeedClass, true
}

// HasSpeedClass returns a boolean if a field has been set.
func (o *Sim) HasSpeedClass() bool {
	if o != nil && o.SpeedClass != nil {
		return true
	}

	return false
}

// SetSpeedClass gets a reference to the given string and assigns it to the SpeedClass field.
func (o *Sim) SetSpeedClass(v string) {
	o.SpeedClass = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Sim) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Sim) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Sim) SetStatus(v string) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Sim) GetTags() map[string]string {
	if o == nil || o.Tags == nil {
		var ret map[string]string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetTagsOk() (*map[string]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Sim) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]string and assigns it to the Tags field.
func (o *Sim) SetTags(v map[string]string) {
	o.Tags = &v
}

// GetTerminationEnabled returns the TerminationEnabled field value if set, zero value otherwise.
func (o *Sim) GetTerminationEnabled() bool {
	if o == nil || o.TerminationEnabled == nil {
		var ret bool
		return ret
	}
	return *o.TerminationEnabled
}

// GetTerminationEnabledOk returns a tuple with the TerminationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetTerminationEnabledOk() (*bool, bool) {
	if o == nil || o.TerminationEnabled == nil {
		return nil, false
	}
	return o.TerminationEnabled, true
}

// HasTerminationEnabled returns a boolean if a field has been set.
func (o *Sim) HasTerminationEnabled() bool {
	if o != nil && o.TerminationEnabled != nil {
		return true
	}

	return false
}

// SetTerminationEnabled gets a reference to the given bool and assigns it to the TerminationEnabled field.
func (o *Sim) SetTerminationEnabled(v bool) {
	o.TerminationEnabled = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Sim) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sim) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Sim) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Sim) SetType(v string) {
	o.Type = &v
}

func (o Sim) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActiveProfileId != nil {
		toSerialize["activeProfileId"] = o.ActiveProfileId
	}
	if o.ArcSessionStatus != nil {
		toSerialize["arcSessionStatus"] = o.ArcSessionStatus
	}
	if o.Capabilities != nil {
		toSerialize["capabilities"] = o.Capabilities
	}
	if o.CreatedTime != nil {
		toSerialize["createdTime"] = o.CreatedTime
	}
	if o.ExpiryAction != nil {
		toSerialize["expiryAction"] = o.ExpiryAction
	}
	if o.ExpiryTime != nil {
		toSerialize["expiryTime"] = o.ExpiryTime
	}
	if o.GroupId != nil {
		toSerialize["groupId"] = o.GroupId
	}
	if o.ImeiLock != nil {
		toSerialize["imeiLock"] = o.ImeiLock
	}
	if o.LastModifiedTime != nil {
		toSerialize["lastModifiedTime"] = o.LastModifiedTime
	}
	if o.LastPortMappingCreatedTime != nil {
		toSerialize["lastPortMappingCreatedTime"] = o.LastPortMappingCreatedTime
	}
	if o.LocalInfo != nil {
		toSerialize["localInfo"] = o.LocalInfo
	}
	if o.ModuleType != nil {
		toSerialize["moduleType"] = o.ModuleType
	}
	if o.OperatorId != nil {
		toSerialize["operatorId"] = o.OperatorId
	}
	if o.OtaSerialNumber != nil {
		toSerialize["otaSerialNumber"] = o.OtaSerialNumber
	}
	if o.PcapEndTime != nil {
		toSerialize["pcapEndTime"] = o.PcapEndTime
	}
	if o.PcapStartTime != nil {
		toSerialize["pcapStartTime"] = o.PcapStartTime
	}
	if o.PreviousSession != nil {
		toSerialize["previousSession"] = o.PreviousSession
	}
	if o.Profiles != nil {
		toSerialize["profiles"] = o.Profiles
	}
	if o.SerialNumber != nil {
		toSerialize["serialNumber"] = o.SerialNumber
	}
	if o.SessionStatus != nil {
		toSerialize["sessionStatus"] = o.SessionStatus
	}
	if o.SimId != nil {
		toSerialize["simId"] = o.SimId
	}
	if o.SpeedClass != nil {
		toSerialize["speedClass"] = o.SpeedClass
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.TerminationEnabled != nil {
		toSerialize["terminationEnabled"] = o.TerminationEnabled
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableSim struct {
	value *Sim
	isSet bool
}

func (v NullableSim) Get() *Sim {
	return v.value
}

func (v *NullableSim) Set(val *Sim) {
	v.value = val
	v.isSet = true
}

func (v NullableSim) IsSet() bool {
	return v.isSet
}

func (v *NullableSim) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSim(val *Sim) *NullableSim {
	return &NullableSim{value: val, isSet: true}
}

func (v NullableSim) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSim) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


