/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SmsForwardingReport struct for SmsForwardingReport
type SmsForwardingReport struct {
	MessageId *string `json:"messageId,omitempty"`
}

// NewSmsForwardingReport instantiates a new SmsForwardingReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsForwardingReport() *SmsForwardingReport {
	this := SmsForwardingReport{}
	return &this
}

// NewSmsForwardingReportWithDefaults instantiates a new SmsForwardingReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsForwardingReportWithDefaults() *SmsForwardingReport {
	this := SmsForwardingReport{}
	return &this
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *SmsForwardingReport) GetMessageId() string {
	if o == nil || o.MessageId == nil {
		var ret string
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsForwardingReport) GetMessageIdOk() (*string, bool) {
	if o == nil || o.MessageId == nil {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *SmsForwardingReport) HasMessageId() bool {
	if o != nil && o.MessageId != nil {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the MessageId field.
func (o *SmsForwardingReport) SetMessageId(v string) {
	o.MessageId = &v
}

func (o SmsForwardingReport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MessageId != nil {
		toSerialize["messageId"] = o.MessageId
	}
	return json.Marshal(toSerialize)
}

type NullableSmsForwardingReport struct {
	value *SmsForwardingReport
	isSet bool
}

func (v NullableSmsForwardingReport) Get() *SmsForwardingReport {
	return v.value
}

func (v *NullableSmsForwardingReport) Set(val *SmsForwardingReport) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsForwardingReport) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsForwardingReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsForwardingReport(val *SmsForwardingReport) *NullableSmsForwardingReport {
	return &NullableSmsForwardingReport{value: val, isSet: true}
}

func (v NullableSmsForwardingReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsForwardingReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


