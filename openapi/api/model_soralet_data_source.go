/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SoraletDataSource struct for SoraletDataSource
type SoraletDataSource struct {
	ResourceId string `json:"resourceId"`
	ResourceType string `json:"resourceType"`
}

// NewSoraletDataSource instantiates a new SoraletDataSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSoraletDataSource(resourceId string, resourceType string) *SoraletDataSource {
	this := SoraletDataSource{}
	this.ResourceId = resourceId
	this.ResourceType = resourceType
	return &this
}

// NewSoraletDataSourceWithDefaults instantiates a new SoraletDataSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSoraletDataSourceWithDefaults() *SoraletDataSource {
	this := SoraletDataSource{}
	return &this
}

// GetResourceId returns the ResourceId field value
func (o *SoraletDataSource) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *SoraletDataSource) GetResourceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *SoraletDataSource) SetResourceId(v string) {
	o.ResourceId = v
}

// GetResourceType returns the ResourceType field value
func (o *SoraletDataSource) GetResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *SoraletDataSource) GetResourceTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *SoraletDataSource) SetResourceType(v string) {
	o.ResourceType = v
}

func (o SoraletDataSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["resourceId"] = o.ResourceId
	}
	if true {
		toSerialize["resourceType"] = o.ResourceType
	}
	return json.Marshal(toSerialize)
}

type NullableSoraletDataSource struct {
	value *SoraletDataSource
	isSet bool
}

func (v NullableSoraletDataSource) Get() *SoraletDataSource {
	return v.value
}

func (v *NullableSoraletDataSource) Set(val *SoraletDataSource) {
	v.value = val
	v.isSet = true
}

func (v NullableSoraletDataSource) IsSet() bool {
	return v.isSet
}

func (v *NullableSoraletDataSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSoraletDataSource(val *SoraletDataSource) *NullableSoraletDataSource {
	return &NullableSoraletDataSource{value: val, isSet: true}
}

func (v NullableSoraletDataSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSoraletDataSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


