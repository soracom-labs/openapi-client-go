/*
SORACOM API

SORACOM API v1

API version: VERSION_PLACEHOLDER
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SubscriptionContainerStatusCountryMapping struct for SubscriptionContainerStatusCountryMapping
type SubscriptionContainerStatusCountryMapping struct {
	MappingRecord *SubscriptionContainerStatusMappingRecord `json:"mappingRecord,omitempty"`
	PlmnCode *string `json:"plmnCode,omitempty"`
}

// NewSubscriptionContainerStatusCountryMapping instantiates a new SubscriptionContainerStatusCountryMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionContainerStatusCountryMapping() *SubscriptionContainerStatusCountryMapping {
	this := SubscriptionContainerStatusCountryMapping{}
	return &this
}

// NewSubscriptionContainerStatusCountryMappingWithDefaults instantiates a new SubscriptionContainerStatusCountryMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionContainerStatusCountryMappingWithDefaults() *SubscriptionContainerStatusCountryMapping {
	this := SubscriptionContainerStatusCountryMapping{}
	return &this
}

// GetMappingRecord returns the MappingRecord field value if set, zero value otherwise.
func (o *SubscriptionContainerStatusCountryMapping) GetMappingRecord() SubscriptionContainerStatusMappingRecord {
	if o == nil || o.MappingRecord == nil {
		var ret SubscriptionContainerStatusMappingRecord
		return ret
	}
	return *o.MappingRecord
}

// GetMappingRecordOk returns a tuple with the MappingRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionContainerStatusCountryMapping) GetMappingRecordOk() (*SubscriptionContainerStatusMappingRecord, bool) {
	if o == nil || o.MappingRecord == nil {
		return nil, false
	}
	return o.MappingRecord, true
}

// HasMappingRecord returns a boolean if a field has been set.
func (o *SubscriptionContainerStatusCountryMapping) HasMappingRecord() bool {
	if o != nil && o.MappingRecord != nil {
		return true
	}

	return false
}

// SetMappingRecord gets a reference to the given SubscriptionContainerStatusMappingRecord and assigns it to the MappingRecord field.
func (o *SubscriptionContainerStatusCountryMapping) SetMappingRecord(v SubscriptionContainerStatusMappingRecord) {
	o.MappingRecord = &v
}

// GetPlmnCode returns the PlmnCode field value if set, zero value otherwise.
func (o *SubscriptionContainerStatusCountryMapping) GetPlmnCode() string {
	if o == nil || o.PlmnCode == nil {
		var ret string
		return ret
	}
	return *o.PlmnCode
}

// GetPlmnCodeOk returns a tuple with the PlmnCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionContainerStatusCountryMapping) GetPlmnCodeOk() (*string, bool) {
	if o == nil || o.PlmnCode == nil {
		return nil, false
	}
	return o.PlmnCode, true
}

// HasPlmnCode returns a boolean if a field has been set.
func (o *SubscriptionContainerStatusCountryMapping) HasPlmnCode() bool {
	if o != nil && o.PlmnCode != nil {
		return true
	}

	return false
}

// SetPlmnCode gets a reference to the given string and assigns it to the PlmnCode field.
func (o *SubscriptionContainerStatusCountryMapping) SetPlmnCode(v string) {
	o.PlmnCode = &v
}

func (o SubscriptionContainerStatusCountryMapping) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MappingRecord != nil {
		toSerialize["mappingRecord"] = o.MappingRecord
	}
	if o.PlmnCode != nil {
		toSerialize["plmnCode"] = o.PlmnCode
	}
	return json.Marshal(toSerialize)
}

type NullableSubscriptionContainerStatusCountryMapping struct {
	value *SubscriptionContainerStatusCountryMapping
	isSet bool
}

func (v NullableSubscriptionContainerStatusCountryMapping) Get() *SubscriptionContainerStatusCountryMapping {
	return v.value
}

func (v *NullableSubscriptionContainerStatusCountryMapping) Set(val *SubscriptionContainerStatusCountryMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionContainerStatusCountryMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionContainerStatusCountryMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionContainerStatusCountryMapping(val *SubscriptionContainerStatusCountryMapping) *NullableSubscriptionContainerStatusCountryMapping {
	return &NullableSubscriptionContainerStatusCountryMapping{value: val, isSet: true}
}

func (v NullableSubscriptionContainerStatusCountryMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionContainerStatusCountryMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


