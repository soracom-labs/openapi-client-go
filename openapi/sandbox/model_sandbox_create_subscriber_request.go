/*
SORACOM SANDBOX API

SORACOM SANDBOX API v1

API version: 20160218
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sandbox

import (
	"encoding/json"
)

// SandboxCreateSubscriberRequest struct for SandboxCreateSubscriberRequest
type SandboxCreateSubscriberRequest struct {
	Subscription *string `json:"subscription,omitempty"`
}

// NewSandboxCreateSubscriberRequest instantiates a new SandboxCreateSubscriberRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSandboxCreateSubscriberRequest() *SandboxCreateSubscriberRequest {
	this := SandboxCreateSubscriberRequest{}
	return &this
}

// NewSandboxCreateSubscriberRequestWithDefaults instantiates a new SandboxCreateSubscriberRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSandboxCreateSubscriberRequestWithDefaults() *SandboxCreateSubscriberRequest {
	this := SandboxCreateSubscriberRequest{}
	return &this
}

// GetSubscription returns the Subscription field value if set, zero value otherwise.
func (o *SandboxCreateSubscriberRequest) GetSubscription() string {
	if o == nil || o.Subscription == nil {
		var ret string
		return ret
	}
	return *o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreateSubscriberRequest) GetSubscriptionOk() (*string, bool) {
	if o == nil || o.Subscription == nil {
		return nil, false
	}
	return o.Subscription, true
}

// HasSubscription returns a boolean if a field has been set.
func (o *SandboxCreateSubscriberRequest) HasSubscription() bool {
	if o != nil && o.Subscription != nil {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given string and assigns it to the Subscription field.
func (o *SandboxCreateSubscriberRequest) SetSubscription(v string) {
	o.Subscription = &v
}

func (o SandboxCreateSubscriberRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Subscription != nil {
		toSerialize["subscription"] = o.Subscription
	}
	return json.Marshal(toSerialize)
}

type NullableSandboxCreateSubscriberRequest struct {
	value *SandboxCreateSubscriberRequest
	isSet bool
}

func (v NullableSandboxCreateSubscriberRequest) Get() *SandboxCreateSubscriberRequest {
	return v.value
}

func (v *NullableSandboxCreateSubscriberRequest) Set(val *SandboxCreateSubscriberRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxCreateSubscriberRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxCreateSubscriberRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxCreateSubscriberRequest(val *SandboxCreateSubscriberRequest) *NullableSandboxCreateSubscriberRequest {
	return &NullableSandboxCreateSubscriberRequest{value: val, isSet: true}
}

func (v NullableSandboxCreateSubscriberRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxCreateSubscriberRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


