/*
SORACOM SANDBOX API

SORACOM SANDBOX API v1

API version: 20160218
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sandbox

import (
	"encoding/json"
)

// SandboxInsertAirStatsRequestDataTrafficStatsMap struct for SandboxInsertAirStatsRequestDataTrafficStatsMap
type SandboxInsertAirStatsRequestDataTrafficStatsMap struct {
	S1Fast *SandboxDataTrafficStats `json:"s1.fast,omitempty"`
	S1Minimum *SandboxDataTrafficStats `json:"s1.minimum,omitempty"`
	S1Slow *SandboxDataTrafficStats `json:"s1.slow,omitempty"`
	S1Standard *SandboxDataTrafficStats `json:"s1.standard,omitempty"`
}

// NewSandboxInsertAirStatsRequestDataTrafficStatsMap instantiates a new SandboxInsertAirStatsRequestDataTrafficStatsMap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSandboxInsertAirStatsRequestDataTrafficStatsMap() *SandboxInsertAirStatsRequestDataTrafficStatsMap {
	this := SandboxInsertAirStatsRequestDataTrafficStatsMap{}
	return &this
}

// NewSandboxInsertAirStatsRequestDataTrafficStatsMapWithDefaults instantiates a new SandboxInsertAirStatsRequestDataTrafficStatsMap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSandboxInsertAirStatsRequestDataTrafficStatsMapWithDefaults() *SandboxInsertAirStatsRequestDataTrafficStatsMap {
	this := SandboxInsertAirStatsRequestDataTrafficStatsMap{}
	return &this
}

// GetS1Fast returns the S1Fast field value if set, zero value otherwise.
func (o *SandboxInsertAirStatsRequestDataTrafficStatsMap) GetS1Fast() SandboxDataTrafficStats {
	if o == nil || o.S1Fast == nil {
		var ret SandboxDataTrafficStats
		return ret
	}
	return *o.S1Fast
}

// GetS1FastOk returns a tuple with the S1Fast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxInsertAirStatsRequestDataTrafficStatsMap) GetS1FastOk() (*SandboxDataTrafficStats, bool) {
	if o == nil || o.S1Fast == nil {
		return nil, false
	}
	return o.S1Fast, true
}

// HasS1Fast returns a boolean if a field has been set.
func (o *SandboxInsertAirStatsRequestDataTrafficStatsMap) HasS1Fast() bool {
	if o != nil && o.S1Fast != nil {
		return true
	}

	return false
}

// SetS1Fast gets a reference to the given SandboxDataTrafficStats and assigns it to the S1Fast field.
func (o *SandboxInsertAirStatsRequestDataTrafficStatsMap) SetS1Fast(v SandboxDataTrafficStats) {
	o.S1Fast = &v
}

// GetS1Minimum returns the S1Minimum field value if set, zero value otherwise.
func (o *SandboxInsertAirStatsRequestDataTrafficStatsMap) GetS1Minimum() SandboxDataTrafficStats {
	if o == nil || o.S1Minimum == nil {
		var ret SandboxDataTrafficStats
		return ret
	}
	return *o.S1Minimum
}

// GetS1MinimumOk returns a tuple with the S1Minimum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxInsertAirStatsRequestDataTrafficStatsMap) GetS1MinimumOk() (*SandboxDataTrafficStats, bool) {
	if o == nil || o.S1Minimum == nil {
		return nil, false
	}
	return o.S1Minimum, true
}

// HasS1Minimum returns a boolean if a field has been set.
func (o *SandboxInsertAirStatsRequestDataTrafficStatsMap) HasS1Minimum() bool {
	if o != nil && o.S1Minimum != nil {
		return true
	}

	return false
}

// SetS1Minimum gets a reference to the given SandboxDataTrafficStats and assigns it to the S1Minimum field.
func (o *SandboxInsertAirStatsRequestDataTrafficStatsMap) SetS1Minimum(v SandboxDataTrafficStats) {
	o.S1Minimum = &v
}

// GetS1Slow returns the S1Slow field value if set, zero value otherwise.
func (o *SandboxInsertAirStatsRequestDataTrafficStatsMap) GetS1Slow() SandboxDataTrafficStats {
	if o == nil || o.S1Slow == nil {
		var ret SandboxDataTrafficStats
		return ret
	}
	return *o.S1Slow
}

// GetS1SlowOk returns a tuple with the S1Slow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxInsertAirStatsRequestDataTrafficStatsMap) GetS1SlowOk() (*SandboxDataTrafficStats, bool) {
	if o == nil || o.S1Slow == nil {
		return nil, false
	}
	return o.S1Slow, true
}

// HasS1Slow returns a boolean if a field has been set.
func (o *SandboxInsertAirStatsRequestDataTrafficStatsMap) HasS1Slow() bool {
	if o != nil && o.S1Slow != nil {
		return true
	}

	return false
}

// SetS1Slow gets a reference to the given SandboxDataTrafficStats and assigns it to the S1Slow field.
func (o *SandboxInsertAirStatsRequestDataTrafficStatsMap) SetS1Slow(v SandboxDataTrafficStats) {
	o.S1Slow = &v
}

// GetS1Standard returns the S1Standard field value if set, zero value otherwise.
func (o *SandboxInsertAirStatsRequestDataTrafficStatsMap) GetS1Standard() SandboxDataTrafficStats {
	if o == nil || o.S1Standard == nil {
		var ret SandboxDataTrafficStats
		return ret
	}
	return *o.S1Standard
}

// GetS1StandardOk returns a tuple with the S1Standard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxInsertAirStatsRequestDataTrafficStatsMap) GetS1StandardOk() (*SandboxDataTrafficStats, bool) {
	if o == nil || o.S1Standard == nil {
		return nil, false
	}
	return o.S1Standard, true
}

// HasS1Standard returns a boolean if a field has been set.
func (o *SandboxInsertAirStatsRequestDataTrafficStatsMap) HasS1Standard() bool {
	if o != nil && o.S1Standard != nil {
		return true
	}

	return false
}

// SetS1Standard gets a reference to the given SandboxDataTrafficStats and assigns it to the S1Standard field.
func (o *SandboxInsertAirStatsRequestDataTrafficStatsMap) SetS1Standard(v SandboxDataTrafficStats) {
	o.S1Standard = &v
}

func (o SandboxInsertAirStatsRequestDataTrafficStatsMap) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.S1Fast != nil {
		toSerialize["s1.fast"] = o.S1Fast
	}
	if o.S1Minimum != nil {
		toSerialize["s1.minimum"] = o.S1Minimum
	}
	if o.S1Slow != nil {
		toSerialize["s1.slow"] = o.S1Slow
	}
	if o.S1Standard != nil {
		toSerialize["s1.standard"] = o.S1Standard
	}
	return json.Marshal(toSerialize)
}

type NullableSandboxInsertAirStatsRequestDataTrafficStatsMap struct {
	value *SandboxInsertAirStatsRequestDataTrafficStatsMap
	isSet bool
}

func (v NullableSandboxInsertAirStatsRequestDataTrafficStatsMap) Get() *SandboxInsertAirStatsRequestDataTrafficStatsMap {
	return v.value
}

func (v *NullableSandboxInsertAirStatsRequestDataTrafficStatsMap) Set(val *SandboxInsertAirStatsRequestDataTrafficStatsMap) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxInsertAirStatsRequestDataTrafficStatsMap) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxInsertAirStatsRequestDataTrafficStatsMap) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxInsertAirStatsRequestDataTrafficStatsMap(val *SandboxInsertAirStatsRequestDataTrafficStatsMap) *NullableSandboxInsertAirStatsRequestDataTrafficStatsMap {
	return &NullableSandboxInsertAirStatsRequestDataTrafficStatsMap{value: val, isSet: true}
}

func (v NullableSandboxInsertAirStatsRequestDataTrafficStatsMap) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxInsertAirStatsRequestDataTrafficStatsMap) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


